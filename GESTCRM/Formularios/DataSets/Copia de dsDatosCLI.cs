//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace GESTCRM.DataSets {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsDatosCLI : DataSet {
        
        private Pedidos_CabDataTable tablePedidos_Cab;
        
        private Pedidos_LinDataTable tablePedidos_Lin;
        
        private RepActividad_CabDataTable tableRepActividad_Cab;
        
        private RepActividad_CliDataTable tableRepActividad_Cli;
        
        private RepActividad_AtenDataTable tableRepActividad_Aten;
        
        private RepActividadCli_ProxObjDataTable tableRepActividadCli_ProxObj;
        
        private RepActividad_PedDataTable tableRepActividad_Ped;
        
        private RepActividad_GadDataTable tableRepActividad_Gad;
        
        private ConfiguracionDataTable tableConfiguracion;
        
        public dsDatosCLI() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsDatosCLI(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Pedidos_Cab"] != null)) {
                    this.Tables.Add(new Pedidos_CabDataTable(ds.Tables["Pedidos_Cab"]));
                }
                if ((ds.Tables["Pedidos_Lin"] != null)) {
                    this.Tables.Add(new Pedidos_LinDataTable(ds.Tables["Pedidos_Lin"]));
                }
                if ((ds.Tables["RepActividad_Cab"] != null)) {
                    this.Tables.Add(new RepActividad_CabDataTable(ds.Tables["RepActividad_Cab"]));
                }
                if ((ds.Tables["RepActividad_Cli"] != null)) {
                    this.Tables.Add(new RepActividad_CliDataTable(ds.Tables["RepActividad_Cli"]));
                }
                if ((ds.Tables["RepActividad_Aten"] != null)) {
                    this.Tables.Add(new RepActividad_AtenDataTable(ds.Tables["RepActividad_Aten"]));
                }
                if ((ds.Tables["RepActividadCli_ProxObj"] != null)) {
                    this.Tables.Add(new RepActividadCli_ProxObjDataTable(ds.Tables["RepActividadCli_ProxObj"]));
                }
                if ((ds.Tables["RepActividad_Ped"] != null)) {
                    this.Tables.Add(new RepActividad_PedDataTable(ds.Tables["RepActividad_Ped"]));
                }
                if ((ds.Tables["RepActividad_Gad"] != null)) {
                    this.Tables.Add(new RepActividad_GadDataTable(ds.Tables["RepActividad_Gad"]));
                }
                if ((ds.Tables["Configuracion"] != null)) {
                    this.Tables.Add(new ConfiguracionDataTable(ds.Tables["Configuracion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pedidos_CabDataTable Pedidos_Cab {
            get {
                return this.tablePedidos_Cab;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pedidos_LinDataTable Pedidos_Lin {
            get {
                return this.tablePedidos_Lin;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_CabDataTable RepActividad_Cab {
            get {
                return this.tableRepActividad_Cab;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_CliDataTable RepActividad_Cli {
            get {
                return this.tableRepActividad_Cli;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_AtenDataTable RepActividad_Aten {
            get {
                return this.tableRepActividad_Aten;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividadCli_ProxObjDataTable RepActividadCli_ProxObj {
            get {
                return this.tableRepActividadCli_ProxObj;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_PedDataTable RepActividad_Ped {
            get {
                return this.tableRepActividad_Ped;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_GadDataTable RepActividad_Gad {
            get {
                return this.tableRepActividad_Gad;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConfiguracionDataTable Configuracion {
            get {
                return this.tableConfiguracion;
            }
        }
        
        public override DataSet Clone() {
            dsDatosCLI cln = ((dsDatosCLI)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Pedidos_Cab"] != null)) {
                this.Tables.Add(new Pedidos_CabDataTable(ds.Tables["Pedidos_Cab"]));
            }
            if ((ds.Tables["Pedidos_Lin"] != null)) {
                this.Tables.Add(new Pedidos_LinDataTable(ds.Tables["Pedidos_Lin"]));
            }
            if ((ds.Tables["RepActividad_Cab"] != null)) {
                this.Tables.Add(new RepActividad_CabDataTable(ds.Tables["RepActividad_Cab"]));
            }
            if ((ds.Tables["RepActividad_Cli"] != null)) {
                this.Tables.Add(new RepActividad_CliDataTable(ds.Tables["RepActividad_Cli"]));
            }
            if ((ds.Tables["RepActividad_Aten"] != null)) {
                this.Tables.Add(new RepActividad_AtenDataTable(ds.Tables["RepActividad_Aten"]));
            }
            if ((ds.Tables["RepActividadCli_ProxObj"] != null)) {
                this.Tables.Add(new RepActividadCli_ProxObjDataTable(ds.Tables["RepActividadCli_ProxObj"]));
            }
            if ((ds.Tables["RepActividad_Ped"] != null)) {
                this.Tables.Add(new RepActividad_PedDataTable(ds.Tables["RepActividad_Ped"]));
            }
            if ((ds.Tables["RepActividad_Gad"] != null)) {
                this.Tables.Add(new RepActividad_GadDataTable(ds.Tables["RepActividad_Gad"]));
            }
            if ((ds.Tables["Configuracion"] != null)) {
                this.Tables.Add(new ConfiguracionDataTable(ds.Tables["Configuracion"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablePedidos_Cab = ((Pedidos_CabDataTable)(this.Tables["Pedidos_Cab"]));
            if ((this.tablePedidos_Cab != null)) {
                this.tablePedidos_Cab.InitVars();
            }
            this.tablePedidos_Lin = ((Pedidos_LinDataTable)(this.Tables["Pedidos_Lin"]));
            if ((this.tablePedidos_Lin != null)) {
                this.tablePedidos_Lin.InitVars();
            }
            this.tableRepActividad_Cab = ((RepActividad_CabDataTable)(this.Tables["RepActividad_Cab"]));
            if ((this.tableRepActividad_Cab != null)) {
                this.tableRepActividad_Cab.InitVars();
            }
            this.tableRepActividad_Cli = ((RepActividad_CliDataTable)(this.Tables["RepActividad_Cli"]));
            if ((this.tableRepActividad_Cli != null)) {
                this.tableRepActividad_Cli.InitVars();
            }
            this.tableRepActividad_Aten = ((RepActividad_AtenDataTable)(this.Tables["RepActividad_Aten"]));
            if ((this.tableRepActividad_Aten != null)) {
                this.tableRepActividad_Aten.InitVars();
            }
            this.tableRepActividadCli_ProxObj = ((RepActividadCli_ProxObjDataTable)(this.Tables["RepActividadCli_ProxObj"]));
            if ((this.tableRepActividadCli_ProxObj != null)) {
                this.tableRepActividadCli_ProxObj.InitVars();
            }
            this.tableRepActividad_Ped = ((RepActividad_PedDataTable)(this.Tables["RepActividad_Ped"]));
            if ((this.tableRepActividad_Ped != null)) {
                this.tableRepActividad_Ped.InitVars();
            }
            this.tableRepActividad_Gad = ((RepActividad_GadDataTable)(this.Tables["RepActividad_Gad"]));
            if ((this.tableRepActividad_Gad != null)) {
                this.tableRepActividad_Gad.InitVars();
            }
            this.tableConfiguracion = ((ConfiguracionDataTable)(this.Tables["Configuracion"]));
            if ((this.tableConfiguracion != null)) {
                this.tableConfiguracion.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsDatosCLI";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsDatosPDA.xsd";
            this.Locale = new System.Globalization.CultureInfo("es-ES");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablePedidos_Cab = new Pedidos_CabDataTable();
            this.Tables.Add(this.tablePedidos_Cab);
            this.tablePedidos_Lin = new Pedidos_LinDataTable();
            this.Tables.Add(this.tablePedidos_Lin);
            this.tableRepActividad_Cab = new RepActividad_CabDataTable();
            this.Tables.Add(this.tableRepActividad_Cab);
            this.tableRepActividad_Cli = new RepActividad_CliDataTable();
            this.Tables.Add(this.tableRepActividad_Cli);
            this.tableRepActividad_Aten = new RepActividad_AtenDataTable();
            this.Tables.Add(this.tableRepActividad_Aten);
            this.tableRepActividadCli_ProxObj = new RepActividadCli_ProxObjDataTable();
            this.Tables.Add(this.tableRepActividadCli_ProxObj);
            this.tableRepActividad_Ped = new RepActividad_PedDataTable();
            this.Tables.Add(this.tableRepActividad_Ped);
            this.tableRepActividad_Gad = new RepActividad_GadDataTable();
            this.Tables.Add(this.tableRepActividad_Gad);
            this.tableConfiguracion = new ConfiguracionDataTable();
            this.Tables.Add(this.tableConfiguracion);
        }
        
        private bool ShouldSerializePedidos_Cab() {
            return false;
        }
        
        private bool ShouldSerializePedidos_Lin() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Cab() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Cli() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Aten() {
            return false;
        }
        
        private bool ShouldSerializeRepActividadCli_ProxObj() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Ped() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Gad() {
            return false;
        }
        
        private bool ShouldSerializeConfiguracion() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void Pedidos_CabRowChangeEventHandler(object sender, Pedidos_CabRowChangeEvent e);
        
        public delegate void Pedidos_LinRowChangeEventHandler(object sender, Pedidos_LinRowChangeEvent e);
        
        public delegate void RepActividad_CabRowChangeEventHandler(object sender, RepActividad_CabRowChangeEvent e);
        
        public delegate void RepActividad_CliRowChangeEventHandler(object sender, RepActividad_CliRowChangeEvent e);
        
        public delegate void RepActividad_AtenRowChangeEventHandler(object sender, RepActividad_AtenRowChangeEvent e);
        
        public delegate void RepActividadCli_ProxObjRowChangeEventHandler(object sender, RepActividadCli_ProxObjRowChangeEvent e);
        
        public delegate void RepActividad_PedRowChangeEventHandler(object sender, RepActividad_PedRowChangeEvent e);
        
        public delegate void RepActividad_GadRowChangeEventHandler(object sender, RepActividad_GadRowChangeEvent e);
        
        public delegate void ConfiguracionRowChangeEventHandler(object sender, ConfiguracionRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdPedido;
            
            private DataColumn columnsIdPedidoTemp;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdTipoPedido;
            
            private DataColumn columnsIdEstEntPedido;
            
            private DataColumn columnsIdEstFacPedido;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdDestinatario;
            
            private DataColumn columndFechaPedido;
            
            private DataColumn columndFechaPreferente;
            
            private DataColumn columndFechaFijada;
            
            private DataColumn columnsOrgVentas;
            
            private DataColumn columnsGrupoVendedor;
            
            private DataColumn columnsCanal;
            
            private DataColumn columnsSector;
            
            private DataColumn columnfImporte;
            
            private DataColumn columnfDescuento;
            
            private DataColumn columnsIdTipoCampanya;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columniEstado;
            
            private DataColumn columnfFUM;
            
            private DataColumn columnbEnviadoCli;
            
            internal Pedidos_CabDataTable() : 
                    base("Pedidos_Cab") {
                this.InitClass();
            }
            
            internal Pedidos_CabDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            internal DataColumn sIdPedidoTempColumn {
                get {
                    return this.columnsIdPedidoTemp;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdTipoPedidoColumn {
                get {
                    return this.columnsIdTipoPedido;
                }
            }
            
            internal DataColumn sIdEstEntPedidoColumn {
                get {
                    return this.columnsIdEstEntPedido;
                }
            }
            
            internal DataColumn sIdEstFacPedidoColumn {
                get {
                    return this.columnsIdEstFacPedido;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdDestinatarioColumn {
                get {
                    return this.columniIdDestinatario;
                }
            }
            
            internal DataColumn dFechaPedidoColumn {
                get {
                    return this.columndFechaPedido;
                }
            }
            
            internal DataColumn dFechaPreferenteColumn {
                get {
                    return this.columndFechaPreferente;
                }
            }
            
            internal DataColumn dFechaFijadaColumn {
                get {
                    return this.columndFechaFijada;
                }
            }
            
            internal DataColumn sOrgVentasColumn {
                get {
                    return this.columnsOrgVentas;
                }
            }
            
            internal DataColumn sGrupoVendedorColumn {
                get {
                    return this.columnsGrupoVendedor;
                }
            }
            
            internal DataColumn sCanalColumn {
                get {
                    return this.columnsCanal;
                }
            }
            
            internal DataColumn sSectorColumn {
                get {
                    return this.columnsSector;
                }
            }
            
            internal DataColumn fImporteColumn {
                get {
                    return this.columnfImporte;
                }
            }
            
            internal DataColumn fDescuentoColumn {
                get {
                    return this.columnfDescuento;
                }
            }
            
            internal DataColumn sIdTipoCampanyaColumn {
                get {
                    return this.columnsIdTipoCampanya;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn fFUMColumn {
                get {
                    return this.columnfFUM;
                }
            }
            
            internal DataColumn bEnviadoCliColumn {
                get {
                    return this.columnbEnviadoCli;
                }
            }
            
            public Pedidos_CabRow this[int index] {
                get {
                    return ((Pedidos_CabRow)(this.Rows[index]));
                }
            }
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowChanged;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowChanging;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowDeleted;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowDeleting;
            
            public void AddPedidos_CabRow(Pedidos_CabRow row) {
                this.Rows.Add(row);
            }
            
            public Pedidos_CabRow AddPedidos_CabRow(
                        string sIdPedido, 
                        string sIdPedidoTemp, 
                        int iIdDelegado, 
                        string sIdTipoPedido, 
                        string sIdEstEntPedido, 
                        string sIdEstFacPedido, 
                        int iIdCliente, 
                        int iIdDestinatario, 
                        System.DateTime dFechaPedido, 
                        System.DateTime dFechaPreferente, 
                        System.DateTime dFechaFijada, 
                        string sOrgVentas, 
                        string sGrupoVendedor, 
                        string sCanal, 
                        string sSector, 
                        System.Double fImporte, 
                        System.Double fDescuento, 
                        string sIdTipoCampanya, 
                        string tObservaciones, 
                        short iEstado, 
                        System.DateTime fFUM, 
                        short bEnviadoCli) {
                Pedidos_CabRow rowPedidos_CabRow = ((Pedidos_CabRow)(this.NewRow()));
                rowPedidos_CabRow.ItemArray = new object[] {
                        sIdPedido,
                        sIdPedidoTemp,
                        iIdDelegado,
                        sIdTipoPedido,
                        sIdEstEntPedido,
                        sIdEstFacPedido,
                        iIdCliente,
                        iIdDestinatario,
                        dFechaPedido,
                        dFechaPreferente,
                        dFechaFijada,
                        sOrgVentas,
                        sGrupoVendedor,
                        sCanal,
                        sSector,
                        fImporte,
                        fDescuento,
                        sIdTipoCampanya,
                        tObservaciones,
                        iEstado,
                        fFUM,
                        bEnviadoCli};
                this.Rows.Add(rowPedidos_CabRow);
                return rowPedidos_CabRow;
            }
            
            public Pedidos_CabRow FindBysIdPedido(string sIdPedido) {
                return ((Pedidos_CabRow)(this.Rows.Find(new object[] {
                            sIdPedido})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pedidos_CabDataTable cln = ((Pedidos_CabDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pedidos_CabDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdPedido = this.Columns["sIdPedido"];
                this.columnsIdPedidoTemp = this.Columns["sIdPedidoTemp"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdTipoPedido = this.Columns["sIdTipoPedido"];
                this.columnsIdEstEntPedido = this.Columns["sIdEstEntPedido"];
                this.columnsIdEstFacPedido = this.Columns["sIdEstFacPedido"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdDestinatario = this.Columns["iIdDestinatario"];
                this.columndFechaPedido = this.Columns["dFechaPedido"];
                this.columndFechaPreferente = this.Columns["dFechaPreferente"];
                this.columndFechaFijada = this.Columns["dFechaFijada"];
                this.columnsOrgVentas = this.Columns["sOrgVentas"];
                this.columnsGrupoVendedor = this.Columns["sGrupoVendedor"];
                this.columnsCanal = this.Columns["sCanal"];
                this.columnsSector = this.Columns["sSector"];
                this.columnfImporte = this.Columns["fImporte"];
                this.columnfDescuento = this.Columns["fDescuento"];
                this.columnsIdTipoCampanya = this.Columns["sIdTipoCampanya"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columniEstado = this.Columns["iEstado"];
                this.columnfFUM = this.Columns["fFUM"];
                this.columnbEnviadoCli = this.Columns["bEnviadoCli"];
            }
            
            private void InitClass() {
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.columnsIdPedidoTemp = new DataColumn("sIdPedidoTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedidoTemp);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdTipoPedido = new DataColumn("sIdTipoPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoPedido);
                this.columnsIdEstEntPedido = new DataColumn("sIdEstEntPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEstEntPedido);
                this.columnsIdEstFacPedido = new DataColumn("sIdEstFacPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEstFacPedido);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdDestinatario = new DataColumn("iIdDestinatario", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDestinatario);
                this.columndFechaPedido = new DataColumn("dFechaPedido", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPedido);
                this.columndFechaPreferente = new DataColumn("dFechaPreferente", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPreferente);
                this.columndFechaFijada = new DataColumn("dFechaFijada", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaFijada);
                this.columnsOrgVentas = new DataColumn("sOrgVentas", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsOrgVentas);
                this.columnsGrupoVendedor = new DataColumn("sGrupoVendedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsGrupoVendedor);
                this.columnsCanal = new DataColumn("sCanal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCanal);
                this.columnsSector = new DataColumn("sSector", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsSector);
                this.columnfImporte = new DataColumn("fImporte", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporte);
                this.columnfDescuento = new DataColumn("fDescuento", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfDescuento);
                this.columnsIdTipoCampanya = new DataColumn("sIdTipoCampanya", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoCampanya);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columnfFUM = new DataColumn("fFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfFUM);
                this.columnbEnviadoCli = new DataColumn("bEnviadoCli", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEnviadoCli);
                this.Constraints.Add(new UniqueConstraint("dsDatosPDAKey14", new DataColumn[] {
                                this.columnsIdPedido}, true));
                this.columnsIdPedido.AllowDBNull = false;
                this.columnsIdPedido.Unique = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columnsIdTipoPedido.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdDestinatario.AllowDBNull = false;
                this.columndFechaPedido.AllowDBNull = false;
                this.columndFechaPreferente.AllowDBNull = false;
                this.columndFechaFijada.AllowDBNull = false;
                this.columnsOrgVentas.AllowDBNull = false;
                this.columnsGrupoVendedor.AllowDBNull = false;
                this.columnsCanal.AllowDBNull = false;
                this.columnsSector.AllowDBNull = false;
                this.columnfImporte.AllowDBNull = false;
                this.columnfDescuento.AllowDBNull = false;
                this.columntObservaciones.ReadOnly = true;
                this.columniEstado.AllowDBNull = false;
                this.columnfFUM.AllowDBNull = false;
            }
            
            public Pedidos_CabRow NewPedidos_CabRow() {
                return ((Pedidos_CabRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pedidos_CabRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pedidos_CabRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pedidos_CabRowChanged != null)) {
                    this.Pedidos_CabRowChanged(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pedidos_CabRowChanging != null)) {
                    this.Pedidos_CabRowChanging(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pedidos_CabRowDeleted != null)) {
                    this.Pedidos_CabRowDeleted(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pedidos_CabRowDeleting != null)) {
                    this.Pedidos_CabRowDeleting(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePedidos_CabRow(Pedidos_CabRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabRow : DataRow {
            
            private Pedidos_CabDataTable tablePedidos_Cab;
            
            internal Pedidos_CabRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePedidos_Cab = ((Pedidos_CabDataTable)(this.Table));
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sIdPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sIdPedidoColumn] = value;
                }
            }
            
            public string sIdPedidoTemp {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdPedidoTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdPedidoTempColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdDelegadoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdTipoPedido {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sIdTipoPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sIdTipoPedidoColumn] = value;
                }
            }
            
            public string sIdEstEntPedido {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdEstEntPedidoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdEstEntPedidoColumn] = value;
                }
            }
            
            public string sIdEstFacPedido {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdEstFacPedidoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdEstFacPedidoColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdClienteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdClienteColumn] = value;
                }
            }
            
            public int iIdDestinatario {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdDestinatarioColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdDestinatarioColumn] = value;
                }
            }
            
            public System.DateTime dFechaPedido {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaPedidoColumn] = value;
                }
            }
            
            public System.DateTime dFechaPreferente {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaPreferenteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaPreferenteColumn] = value;
                }
            }
            
            public System.DateTime dFechaFijada {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaFijadaColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaFijadaColumn] = value;
                }
            }
            
            public string sOrgVentas {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sOrgVentasColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sOrgVentasColumn] = value;
                }
            }
            
            public string sGrupoVendedor {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sGrupoVendedorColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sGrupoVendedorColumn] = value;
                }
            }
            
            public string sCanal {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sCanalColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sCanalColumn] = value;
                }
            }
            
            public string sSector {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sSectorColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sSectorColumn] = value;
                }
            }
            
            public System.Double fImporte {
                get {
                    return ((System.Double)(this[this.tablePedidos_Cab.fImporteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fImporteColumn] = value;
                }
            }
            
            public System.Double fDescuento {
                get {
                    return ((System.Double)(this[this.tablePedidos_Cab.fDescuentoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fDescuentoColumn] = value;
                }
            }
            
            public string sIdTipoCampanya {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdTipoCampanyaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdTipoCampanyaColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.tObservacionesColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tablePedidos_Cab.iEstadoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime fFUM {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.fFUMColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fFUMColumn] = value;
                }
            }
            
            public short bEnviadoCli {
                get {
                    try {
                        return ((short)(this[this.tablePedidos_Cab.bEnviadoCliColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.bEnviadoCliColumn] = value;
                }
            }
            
            public bool IssIdPedidoTempNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdPedidoTempColumn);
            }
            
            public void SetsIdPedidoTempNull() {
                this[this.tablePedidos_Cab.sIdPedidoTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdEstEntPedidoNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdEstEntPedidoColumn);
            }
            
            public void SetsIdEstEntPedidoNull() {
                this[this.tablePedidos_Cab.sIdEstEntPedidoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdEstFacPedidoNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdEstFacPedidoColumn);
            }
            
            public void SetsIdEstFacPedidoNull() {
                this[this.tablePedidos_Cab.sIdEstFacPedidoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoCampanyaNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdTipoCampanyaColumn);
            }
            
            public void SetsIdTipoCampanyaNull() {
                this[this.tablePedidos_Cab.sIdTipoCampanyaColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tablePedidos_Cab.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tablePedidos_Cab.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsbEnviadoCliNull() {
                return this.IsNull(this.tablePedidos_Cab.bEnviadoCliColumn);
            }
            
            public void SetbEnviadoCliNull() {
                this[this.tablePedidos_Cab.bEnviadoCliColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabRowChangeEvent : EventArgs {
            
            private Pedidos_CabRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pedidos_CabRowChangeEvent(Pedidos_CabRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pedidos_CabRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdPedido;
            
            private DataColumn columniIdLinea;
            
            private DataColumn columnsIdMaterial;
            
            private DataColumn columniCantidad;
            
            private DataColumn columnfPrecio;
            
            private DataColumn columnsidTipoPosicion;
            
            private DataColumn columnbEntregado;
            
            private DataColumn columndFechaPreferente;
            
            private DataColumn columnsCentro;
            
            private DataColumn columnsAlmacen;
            
            private DataColumn columnfDescuento;
            
            private DataColumn columniBonificacion;
            
            internal Pedidos_LinDataTable() : 
                    base("Pedidos_Lin") {
                this.InitClass();
            }
            
            internal Pedidos_LinDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            internal DataColumn iIdLineaColumn {
                get {
                    return this.columniIdLinea;
                }
            }
            
            internal DataColumn sIdMaterialColumn {
                get {
                    return this.columnsIdMaterial;
                }
            }
            
            internal DataColumn iCantidadColumn {
                get {
                    return this.columniCantidad;
                }
            }
            
            internal DataColumn fPrecioColumn {
                get {
                    return this.columnfPrecio;
                }
            }
            
            internal DataColumn sidTipoPosicionColumn {
                get {
                    return this.columnsidTipoPosicion;
                }
            }
            
            internal DataColumn bEntregadoColumn {
                get {
                    return this.columnbEntregado;
                }
            }
            
            internal DataColumn dFechaPreferenteColumn {
                get {
                    return this.columndFechaPreferente;
                }
            }
            
            internal DataColumn sCentroColumn {
                get {
                    return this.columnsCentro;
                }
            }
            
            internal DataColumn sAlmacenColumn {
                get {
                    return this.columnsAlmacen;
                }
            }
            
            internal DataColumn fDescuentoColumn {
                get {
                    return this.columnfDescuento;
                }
            }
            
            internal DataColumn iBonificacionColumn {
                get {
                    return this.columniBonificacion;
                }
            }
            
            public Pedidos_LinRow this[int index] {
                get {
                    return ((Pedidos_LinRow)(this.Rows[index]));
                }
            }
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowChanged;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowChanging;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowDeleted;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowDeleting;
            
            public void AddPedidos_LinRow(Pedidos_LinRow row) {
                this.Rows.Add(row);
            }
            
            public Pedidos_LinRow AddPedidos_LinRow(string sIdPedido, int iIdLinea, string sIdMaterial, int iCantidad, System.Double fPrecio, string sidTipoPosicion, bool bEntregado, System.DateTime dFechaPreferente, string sCentro, string sAlmacen, System.Double fDescuento, int iBonificacion) {
                Pedidos_LinRow rowPedidos_LinRow = ((Pedidos_LinRow)(this.NewRow()));
                rowPedidos_LinRow.ItemArray = new object[] {
                        sIdPedido,
                        iIdLinea,
                        sIdMaterial,
                        iCantidad,
                        fPrecio,
                        sidTipoPosicion,
                        bEntregado,
                        dFechaPreferente,
                        sCentro,
                        sAlmacen,
                        fDescuento,
                        iBonificacion};
                this.Rows.Add(rowPedidos_LinRow);
                return rowPedidos_LinRow;
            }
            
            public Pedidos_LinRow FindBysIdPedidoiIdLinea(string sIdPedido, int iIdLinea) {
                return ((Pedidos_LinRow)(this.Rows.Find(new object[] {
                            sIdPedido,
                            iIdLinea})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pedidos_LinDataTable cln = ((Pedidos_LinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pedidos_LinDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdPedido = this.Columns["sIdPedido"];
                this.columniIdLinea = this.Columns["iIdLinea"];
                this.columnsIdMaterial = this.Columns["sIdMaterial"];
                this.columniCantidad = this.Columns["iCantidad"];
                this.columnfPrecio = this.Columns["fPrecio"];
                this.columnsidTipoPosicion = this.Columns["sidTipoPosicion"];
                this.columnbEntregado = this.Columns["bEntregado"];
                this.columndFechaPreferente = this.Columns["dFechaPreferente"];
                this.columnsCentro = this.Columns["sCentro"];
                this.columnsAlmacen = this.Columns["sAlmacen"];
                this.columnfDescuento = this.Columns["fDescuento"];
                this.columniBonificacion = this.Columns["iBonificacion"];
            }
            
            private void InitClass() {
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.columniIdLinea = new DataColumn("iIdLinea", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdLinea);
                this.columnsIdMaterial = new DataColumn("sIdMaterial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdMaterial);
                this.columniCantidad = new DataColumn("iCantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidad);
                this.columnfPrecio = new DataColumn("fPrecio", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPrecio);
                this.columnsidTipoPosicion = new DataColumn("sidTipoPosicion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsidTipoPosicion);
                this.columnbEntregado = new DataColumn("bEntregado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEntregado);
                this.columndFechaPreferente = new DataColumn("dFechaPreferente", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPreferente);
                this.columnsCentro = new DataColumn("sCentro", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCentro);
                this.columnsAlmacen = new DataColumn("sAlmacen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsAlmacen);
                this.columnfDescuento = new DataColumn("fDescuento", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfDescuento);
                this.columniBonificacion = new DataColumn("iBonificacion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniBonificacion);
                this.Constraints.Add(new UniqueConstraint("dsDatosPDAKey15", new DataColumn[] {
                                this.columnsIdPedido,
                                this.columniIdLinea}, true));
                this.columnsIdPedido.AllowDBNull = false;
                this.columniIdLinea.AllowDBNull = false;
                this.columnsIdMaterial.AllowDBNull = false;
                this.columniCantidad.AllowDBNull = false;
                this.columnfPrecio.AllowDBNull = false;
                this.columnsidTipoPosicion.AllowDBNull = false;
                this.columnbEntregado.AllowDBNull = false;
                this.columndFechaPreferente.AllowDBNull = false;
                this.columnsCentro.AllowDBNull = false;
                this.columnsAlmacen.AllowDBNull = false;
                this.columnfDescuento.AllowDBNull = false;
                this.columniBonificacion.AllowDBNull = false;
            }
            
            public Pedidos_LinRow NewPedidos_LinRow() {
                return ((Pedidos_LinRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pedidos_LinRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pedidos_LinRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pedidos_LinRowChanged != null)) {
                    this.Pedidos_LinRowChanged(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pedidos_LinRowChanging != null)) {
                    this.Pedidos_LinRowChanging(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pedidos_LinRowDeleted != null)) {
                    this.Pedidos_LinRowDeleted(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pedidos_LinRowDeleting != null)) {
                    this.Pedidos_LinRowDeleting(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePedidos_LinRow(Pedidos_LinRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinRow : DataRow {
            
            private Pedidos_LinDataTable tablePedidos_Lin;
            
            internal Pedidos_LinRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePedidos_Lin = ((Pedidos_LinDataTable)(this.Table));
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sIdPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sIdPedidoColumn] = value;
                }
            }
            
            public int iIdLinea {
                get {
                    return ((int)(this[this.tablePedidos_Lin.iIdLineaColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.iIdLineaColumn] = value;
                }
            }
            
            public string sIdMaterial {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sIdMaterialColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sIdMaterialColumn] = value;
                }
            }
            
            public int iCantidad {
                get {
                    return ((int)(this[this.tablePedidos_Lin.iCantidadColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.iCantidadColumn] = value;
                }
            }
            
            public System.Double fPrecio {
                get {
                    return ((System.Double)(this[this.tablePedidos_Lin.fPrecioColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.fPrecioColumn] = value;
                }
            }
            
            public string sidTipoPosicion {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sidTipoPosicionColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sidTipoPosicionColumn] = value;
                }
            }
            
            public bool bEntregado {
                get {
                    return ((bool)(this[this.tablePedidos_Lin.bEntregadoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.bEntregadoColumn] = value;
                }
            }
            
            public System.DateTime dFechaPreferente {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Lin.dFechaPreferenteColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.dFechaPreferenteColumn] = value;
                }
            }
            
            public string sCentro {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sCentroColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sCentroColumn] = value;
                }
            }
            
            public string sAlmacen {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sAlmacenColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sAlmacenColumn] = value;
                }
            }
            
            public System.Double fDescuento {
                get {
                    return ((System.Double)(this[this.tablePedidos_Lin.fDescuentoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.fDescuentoColumn] = value;
                }
            }
            
            public int iBonificacion {
                get {
                    return ((int)(this[this.tablePedidos_Lin.iBonificacionColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.iBonificacionColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinRowChangeEvent : EventArgs {
            
            private Pedidos_LinRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pedidos_LinRowChangeEvent(Pedidos_LinRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pedidos_LinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CabDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdReportTemp;
            
            private DataColumn columnsTipoRActividad;
            
            private DataColumn columnsIdTipoCliente;
            
            private DataColumn columniIdCentro;
            
            private DataColumn columndFecha;
            
            private DataColumn columniHorario;
            
            private DataColumn columntObjetivo;
            
            private DataColumn columntProxObjetivo;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnbPlanificacion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            private DataColumn columnbEnviadoCli;
            
            internal RepActividad_CabDataTable() : 
                    base("RepActividad_Cab") {
                this.InitClass();
            }
            
            internal RepActividad_CabDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdReportTempColumn {
                get {
                    return this.columnsIdReportTemp;
                }
            }
            
            internal DataColumn sTipoRActividadColumn {
                get {
                    return this.columnsTipoRActividad;
                }
            }
            
            internal DataColumn sIdTipoClienteColumn {
                get {
                    return this.columnsIdTipoCliente;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            internal DataColumn iHorarioColumn {
                get {
                    return this.columniHorario;
                }
            }
            
            internal DataColumn tObjetivoColumn {
                get {
                    return this.columntObjetivo;
                }
            }
            
            internal DataColumn tProxObjetivoColumn {
                get {
                    return this.columntProxObjetivo;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn bPlanificacionColumn {
                get {
                    return this.columnbPlanificacion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn bEnviadoCliColumn {
                get {
                    return this.columnbEnviadoCli;
                }
            }
            
            public RepActividad_CabRow this[int index] {
                get {
                    return ((RepActividad_CabRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_CabRowChangeEventHandler RepActividad_CabRowChanged;
            
            public event RepActividad_CabRowChangeEventHandler RepActividad_CabRowChanging;
            
            public event RepActividad_CabRowChangeEventHandler RepActividad_CabRowDeleted;
            
            public event RepActividad_CabRowChangeEventHandler RepActividad_CabRowDeleting;
            
            public void AddRepActividad_CabRow(RepActividad_CabRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_CabRow AddRepActividad_CabRow(int iIdReport, int iIdDelegado, string sIdReportTemp, string sTipoRActividad, string sIdTipoCliente, int iIdCentro, System.DateTime dFecha, string iHorario, string tObjetivo, string tProxObjetivo, string tObservaciones, short bPlanificacion, System.DateTime dFUM, short iEstado, short bEnviadoCli) {
                RepActividad_CabRow rowRepActividad_CabRow = ((RepActividad_CabRow)(this.NewRow()));
                rowRepActividad_CabRow.ItemArray = new object[] {
                        iIdReport,
                        iIdDelegado,
                        sIdReportTemp,
                        sTipoRActividad,
                        sIdTipoCliente,
                        iIdCentro,
                        dFecha,
                        iHorario,
                        tObjetivo,
                        tProxObjetivo,
                        tObservaciones,
                        bPlanificacion,
                        dFUM,
                        iEstado,
                        bEnviadoCli};
                this.Rows.Add(rowRepActividad_CabRow);
                return rowRepActividad_CabRow;
            }
            
            public RepActividad_CabRow FindByiIdReport(int iIdReport) {
                return ((RepActividad_CabRow)(this.Rows.Find(new object[] {
                            iIdReport})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_CabDataTable cln = ((RepActividad_CabDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_CabDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdReportTemp = this.Columns["sIdReportTemp"];
                this.columnsTipoRActividad = this.Columns["sTipoRActividad"];
                this.columnsIdTipoCliente = this.Columns["sIdTipoCliente"];
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columndFecha = this.Columns["dFecha"];
                this.columniHorario = this.Columns["iHorario"];
                this.columntObjetivo = this.Columns["tObjetivo"];
                this.columntProxObjetivo = this.Columns["tProxObjetivo"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnbPlanificacion = this.Columns["bPlanificacion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
                this.columnbEnviadoCli = this.Columns["bEnviadoCli"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdReportTemp = new DataColumn("sIdReportTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdReportTemp);
                this.columnsTipoRActividad = new DataColumn("sTipoRActividad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoRActividad);
                this.columnsIdTipoCliente = new DataColumn("sIdTipoCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoCliente);
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.columniHorario = new DataColumn("iHorario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniHorario);
                this.columntObjetivo = new DataColumn("tObjetivo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObjetivo);
                this.columntProxObjetivo = new DataColumn("tProxObjetivo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObjetivo);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnbPlanificacion = new DataColumn("bPlanificacion", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbPlanificacion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columnbEnviadoCli = new DataColumn("bEnviadoCli", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEnviadoCli);
                this.Constraints.Add(new UniqueConstraint("dsDatosPDAKey16", new DataColumn[] {
                                this.columniIdReport}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdReport.Unique = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columndFecha.AllowDBNull = false;
                this.columntObjetivo.ReadOnly = true;
                this.columntProxObjetivo.ReadOnly = true;
                this.columntObservaciones.ReadOnly = true;
                this.columnbPlanificacion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public RepActividad_CabRow NewRepActividad_CabRow() {
                return ((RepActividad_CabRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_CabRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_CabRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_CabRowChanged != null)) {
                    this.RepActividad_CabRowChanged(this, new RepActividad_CabRowChangeEvent(((RepActividad_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_CabRowChanging != null)) {
                    this.RepActividad_CabRowChanging(this, new RepActividad_CabRowChangeEvent(((RepActividad_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_CabRowDeleted != null)) {
                    this.RepActividad_CabRowDeleted(this, new RepActividad_CabRowChangeEvent(((RepActividad_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_CabRowDeleting != null)) {
                    this.RepActividad_CabRowDeleting(this, new RepActividad_CabRowChangeEvent(((RepActividad_CabRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_CabRow(RepActividad_CabRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CabRow : DataRow {
            
            private RepActividad_CabDataTable tableRepActividad_Cab;
            
            internal RepActividad_CabRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Cab = ((RepActividad_CabDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Cab.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.iIdReportColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableRepActividad_Cab.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdReportTemp {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.sIdReportTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.sIdReportTempColumn] = value;
                }
            }
            
            public string sTipoRActividad {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.sTipoRActividadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.sTipoRActividadColumn] = value;
                }
            }
            
            public string sIdTipoCliente {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.sIdTipoClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.sIdTipoClienteColumn] = value;
                }
            }
            
            public int iIdCentro {
                get {
                    try {
                        return ((int)(this[this.tableRepActividad_Cab.iIdCentroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.iIdCentroColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableRepActividad_Cab.dFechaColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.dFechaColumn] = value;
                }
            }
            
            public string iHorario {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.iHorarioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.iHorarioColumn] = value;
                }
            }
            
            public string tObjetivo {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.tObjetivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.tObjetivoColumn] = value;
                }
            }
            
            public string tProxObjetivo {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.tProxObjetivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.tProxObjetivoColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.tObservacionesColumn] = value;
                }
            }
            
            public short bPlanificacion {
                get {
                    return ((short)(this[this.tableRepActividad_Cab.bPlanificacionColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.bPlanificacionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableRepActividad_Cab.dFUMColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableRepActividad_Cab.iEstadoColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.iEstadoColumn] = value;
                }
            }
            
            public short bEnviadoCli {
                get {
                    try {
                        return ((short)(this[this.tableRepActividad_Cab.bEnviadoCliColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.bEnviadoCliColumn] = value;
                }
            }
            
            public bool IssIdReportTempNull() {
                return this.IsNull(this.tableRepActividad_Cab.sIdReportTempColumn);
            }
            
            public void SetsIdReportTempNull() {
                this[this.tableRepActividad_Cab.sIdReportTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssTipoRActividadNull() {
                return this.IsNull(this.tableRepActividad_Cab.sTipoRActividadColumn);
            }
            
            public void SetsTipoRActividadNull() {
                this[this.tableRepActividad_Cab.sTipoRActividadColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoClienteNull() {
                return this.IsNull(this.tableRepActividad_Cab.sIdTipoClienteColumn);
            }
            
            public void SetsIdTipoClienteNull() {
                this[this.tableRepActividad_Cab.sIdTipoClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdCentroNull() {
                return this.IsNull(this.tableRepActividad_Cab.iIdCentroColumn);
            }
            
            public void SetiIdCentroNull() {
                this[this.tableRepActividad_Cab.iIdCentroColumn] = System.Convert.DBNull;
            }
            
            public bool IsiHorarioNull() {
                return this.IsNull(this.tableRepActividad_Cab.iHorarioColumn);
            }
            
            public void SetiHorarioNull() {
                this[this.tableRepActividad_Cab.iHorarioColumn] = System.Convert.DBNull;
            }
            
            public bool IstObjetivoNull() {
                return this.IsNull(this.tableRepActividad_Cab.tObjetivoColumn);
            }
            
            public void SettObjetivoNull() {
                this[this.tableRepActividad_Cab.tObjetivoColumn] = System.Convert.DBNull;
            }
            
            public bool IstProxObjetivoNull() {
                return this.IsNull(this.tableRepActividad_Cab.tProxObjetivoColumn);
            }
            
            public void SettProxObjetivoNull() {
                this[this.tableRepActividad_Cab.tProxObjetivoColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableRepActividad_Cab.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableRepActividad_Cab.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsbEnviadoCliNull() {
                return this.IsNull(this.tableRepActividad_Cab.bEnviadoCliColumn);
            }
            
            public void SetbEnviadoCliNull() {
                this[this.tableRepActividad_Cab.bEnviadoCliColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CabRowChangeEvent : EventArgs {
            
            private RepActividad_CabRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_CabRowChangeEvent(RepActividad_CabRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_CabRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CliDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columntObjetivos;
            
            private DataColumn columntProxObj;
            
            private DataColumn columnbSustituto;
            
            internal RepActividad_CliDataTable() : 
                    base("RepActividad_Cli") {
                this.InitClass();
            }
            
            internal RepActividad_CliDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn tObjetivosColumn {
                get {
                    return this.columntObjetivos;
                }
            }
            
            internal DataColumn tProxObjColumn {
                get {
                    return this.columntProxObj;
                }
            }
            
            internal DataColumn bSustitutoColumn {
                get {
                    return this.columnbSustituto;
                }
            }
            
            public RepActividad_CliRow this[int index] {
                get {
                    return ((RepActividad_CliRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_CliRowChangeEventHandler RepActividad_CliRowChanged;
            
            public event RepActividad_CliRowChangeEventHandler RepActividad_CliRowChanging;
            
            public event RepActividad_CliRowChangeEventHandler RepActividad_CliRowDeleted;
            
            public event RepActividad_CliRowChangeEventHandler RepActividad_CliRowDeleting;
            
            public void AddRepActividad_CliRow(RepActividad_CliRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_CliRow AddRepActividad_CliRow(int iIdReport, int iIdCliente, string tObservaciones, string tObjetivos, string tProxObj, bool bSustituto) {
                RepActividad_CliRow rowRepActividad_CliRow = ((RepActividad_CliRow)(this.NewRow()));
                rowRepActividad_CliRow.ItemArray = new object[] {
                        iIdReport,
                        iIdCliente,
                        tObservaciones,
                        tObjetivos,
                        tProxObj,
                        bSustituto};
                this.Rows.Add(rowRepActividad_CliRow);
                return rowRepActividad_CliRow;
            }
            
            public RepActividad_CliRow FindByiIdReportiIdCliente(int iIdReport, int iIdCliente) {
                return ((RepActividad_CliRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            iIdCliente})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_CliDataTable cln = ((RepActividad_CliDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_CliDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columntObjetivos = this.Columns["tObjetivos"];
                this.columntProxObj = this.Columns["tProxObj"];
                this.columnbSustituto = this.Columns["bSustituto"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columntObjetivos = new DataColumn("tObjetivos", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObjetivos);
                this.columntProxObj = new DataColumn("tProxObj", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObj);
                this.columnbSustituto = new DataColumn("bSustituto", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbSustituto);
                this.Constraints.Add(new UniqueConstraint("dsDatosPDAKey17", new DataColumn[] {
                                this.columniIdReport,
                                this.columniIdCliente}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columntObservaciones.ReadOnly = true;
                this.columntObjetivos.ReadOnly = true;
                this.columntProxObj.ReadOnly = true;
                this.columnbSustituto.AllowDBNull = false;
            }
            
            public RepActividad_CliRow NewRepActividad_CliRow() {
                return ((RepActividad_CliRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_CliRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_CliRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_CliRowChanged != null)) {
                    this.RepActividad_CliRowChanged(this, new RepActividad_CliRowChangeEvent(((RepActividad_CliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_CliRowChanging != null)) {
                    this.RepActividad_CliRowChanging(this, new RepActividad_CliRowChangeEvent(((RepActividad_CliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_CliRowDeleted != null)) {
                    this.RepActividad_CliRowDeleted(this, new RepActividad_CliRowChangeEvent(((RepActividad_CliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_CliRowDeleting != null)) {
                    this.RepActividad_CliRowDeleting(this, new RepActividad_CliRowChangeEvent(((RepActividad_CliRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_CliRow(RepActividad_CliRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CliRow : DataRow {
            
            private RepActividad_CliDataTable tableRepActividad_Cli;
            
            internal RepActividad_CliRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Cli = ((RepActividad_CliDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Cli.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Cli.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividad_Cli.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividad_Cli.iIdClienteColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cli.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cli.tObservacionesColumn] = value;
                }
            }
            
            public string tObjetivos {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cli.tObjetivosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cli.tObjetivosColumn] = value;
                }
            }
            
            public string tProxObj {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cli.tProxObjColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cli.tProxObjColumn] = value;
                }
            }
            
            public bool bSustituto {
                get {
                    return ((bool)(this[this.tableRepActividad_Cli.bSustitutoColumn]));
                }
                set {
                    this[this.tableRepActividad_Cli.bSustitutoColumn] = value;
                }
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableRepActividad_Cli.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableRepActividad_Cli.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IstObjetivosNull() {
                return this.IsNull(this.tableRepActividad_Cli.tObjetivosColumn);
            }
            
            public void SettObjetivosNull() {
                this[this.tableRepActividad_Cli.tObjetivosColumn] = System.Convert.DBNull;
            }
            
            public bool IstProxObjNull() {
                return this.IsNull(this.tableRepActividad_Cli.tProxObjColumn);
            }
            
            public void SettProxObjNull() {
                this[this.tableRepActividad_Cli.tProxObjColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CliRowChangeEvent : EventArgs {
            
            private RepActividad_CliRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_CliRowChangeEvent(RepActividad_CliRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_CliRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_AtenDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdAtencion;
            
            private DataColumn columniNumAtencion;
            
            private DataColumn columnfimporte;
            
            internal RepActividad_AtenDataTable() : 
                    base("RepActividad_Aten") {
                this.InitClass();
            }
            
            internal RepActividad_AtenDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdAtencionColumn {
                get {
                    return this.columniIdAtencion;
                }
            }
            
            internal DataColumn iNumAtencionColumn {
                get {
                    return this.columniNumAtencion;
                }
            }
            
            internal DataColumn fimporteColumn {
                get {
                    return this.columnfimporte;
                }
            }
            
            public RepActividad_AtenRow this[int index] {
                get {
                    return ((RepActividad_AtenRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_AtenRowChangeEventHandler RepActividad_AtenRowChanged;
            
            public event RepActividad_AtenRowChangeEventHandler RepActividad_AtenRowChanging;
            
            public event RepActividad_AtenRowChangeEventHandler RepActividad_AtenRowDeleted;
            
            public event RepActividad_AtenRowChangeEventHandler RepActividad_AtenRowDeleting;
            
            public void AddRepActividad_AtenRow(RepActividad_AtenRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_AtenRow AddRepActividad_AtenRow(int iIdReport, int iIdCliente, int iIdAtencion, int iNumAtencion, System.Double fimporte) {
                RepActividad_AtenRow rowRepActividad_AtenRow = ((RepActividad_AtenRow)(this.NewRow()));
                rowRepActividad_AtenRow.ItemArray = new object[] {
                        iIdReport,
                        iIdCliente,
                        iIdAtencion,
                        iNumAtencion,
                        fimporte};
                this.Rows.Add(rowRepActividad_AtenRow);
                return rowRepActividad_AtenRow;
            }
            
            public RepActividad_AtenRow FindByiIdReportiIdClienteiIdAtencioniNumAtencion(int iIdReport, int iIdCliente, int iIdAtencion, int iNumAtencion) {
                return ((RepActividad_AtenRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            iIdCliente,
                            iIdAtencion,
                            iNumAtencion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_AtenDataTable cln = ((RepActividad_AtenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_AtenDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdAtencion = this.Columns["iIdAtencion"];
                this.columniNumAtencion = this.Columns["iNumAtencion"];
                this.columnfimporte = this.Columns["fimporte"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdAtencion = new DataColumn("iIdAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAtencion);
                this.columniNumAtencion = new DataColumn("iNumAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniNumAtencion);
                this.columnfimporte = new DataColumn("fimporte", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfimporte);
                this.Constraints.Add(new UniqueConstraint("dsDatosPDAKey18", new DataColumn[] {
                                this.columniIdReport,
                                this.columniIdCliente,
                                this.columniIdAtencion,
                                this.columniNumAtencion}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdAtencion.AllowDBNull = false;
                this.columniNumAtencion.AllowDBNull = false;
                this.columnfimporte.AllowDBNull = false;
            }
            
            public RepActividad_AtenRow NewRepActividad_AtenRow() {
                return ((RepActividad_AtenRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_AtenRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_AtenRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_AtenRowChanged != null)) {
                    this.RepActividad_AtenRowChanged(this, new RepActividad_AtenRowChangeEvent(((RepActividad_AtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_AtenRowChanging != null)) {
                    this.RepActividad_AtenRowChanging(this, new RepActividad_AtenRowChangeEvent(((RepActividad_AtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_AtenRowDeleted != null)) {
                    this.RepActividad_AtenRowDeleted(this, new RepActividad_AtenRowChangeEvent(((RepActividad_AtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_AtenRowDeleting != null)) {
                    this.RepActividad_AtenRowDeleting(this, new RepActividad_AtenRowChangeEvent(((RepActividad_AtenRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_AtenRow(RepActividad_AtenRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_AtenRow : DataRow {
            
            private RepActividad_AtenDataTable tableRepActividad_Aten;
            
            internal RepActividad_AtenRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Aten = ((RepActividad_AtenDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Aten.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividad_Aten.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.iIdClienteColumn] = value;
                }
            }
            
            public int iIdAtencion {
                get {
                    return ((int)(this[this.tableRepActividad_Aten.iIdAtencionColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.iIdAtencionColumn] = value;
                }
            }
            
            public int iNumAtencion {
                get {
                    return ((int)(this[this.tableRepActividad_Aten.iNumAtencionColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.iNumAtencionColumn] = value;
                }
            }
            
            public System.Double fimporte {
                get {
                    return ((System.Double)(this[this.tableRepActividad_Aten.fimporteColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.fimporteColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_AtenRowChangeEvent : EventArgs {
            
            private RepActividad_AtenRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_AtenRowChangeEvent(RepActividad_AtenRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_AtenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCli_ProxObjDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCentro;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdReport;
            
            private DataColumn columntProxObj;
            
            private DataColumn columndFecha;
            
            internal RepActividadCli_ProxObjDataTable() : 
                    base("RepActividadCli_ProxObj") {
                this.InitClass();
            }
            
            internal RepActividadCli_ProxObjDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn tProxObjColumn {
                get {
                    return this.columntProxObj;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            public RepActividadCli_ProxObjRow this[int index] {
                get {
                    return ((RepActividadCli_ProxObjRow)(this.Rows[index]));
                }
            }
            
            public event RepActividadCli_ProxObjRowChangeEventHandler RepActividadCli_ProxObjRowChanged;
            
            public event RepActividadCli_ProxObjRowChangeEventHandler RepActividadCli_ProxObjRowChanging;
            
            public event RepActividadCli_ProxObjRowChangeEventHandler RepActividadCli_ProxObjRowDeleted;
            
            public event RepActividadCli_ProxObjRowChangeEventHandler RepActividadCli_ProxObjRowDeleting;
            
            public void AddRepActividadCli_ProxObjRow(RepActividadCli_ProxObjRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividadCli_ProxObjRow AddRepActividadCli_ProxObjRow(int iIdCentro, int iIdCliente, int iIdReport, string tProxObj, System.DateTime dFecha) {
                RepActividadCli_ProxObjRow rowRepActividadCli_ProxObjRow = ((RepActividadCli_ProxObjRow)(this.NewRow()));
                rowRepActividadCli_ProxObjRow.ItemArray = new object[] {
                        iIdCentro,
                        iIdCliente,
                        iIdReport,
                        tProxObj,
                        dFecha};
                this.Rows.Add(rowRepActividadCli_ProxObjRow);
                return rowRepActividadCli_ProxObjRow;
            }
            
            public RepActividadCli_ProxObjRow FindByiIdCentroiIdCliente(int iIdCentro, int iIdCliente) {
                return ((RepActividadCli_ProxObjRow)(this.Rows.Find(new object[] {
                            iIdCentro,
                            iIdCliente})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividadCli_ProxObjDataTable cln = ((RepActividadCli_ProxObjDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividadCli_ProxObjDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdReport = this.Columns["iIdReport"];
                this.columntProxObj = this.Columns["tProxObj"];
                this.columndFecha = this.Columns["dFecha"];
            }
            
            private void InitClass() {
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columntProxObj = new DataColumn("tProxObj", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObj);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.Constraints.Add(new UniqueConstraint("dsDatosPDAKey19", new DataColumn[] {
                                this.columniIdCentro,
                                this.columniIdCliente}, true));
                this.columniIdCentro.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdReport.AllowDBNull = false;
                this.columntProxObj.ReadOnly = true;
                this.columndFecha.AllowDBNull = false;
            }
            
            public RepActividadCli_ProxObjRow NewRepActividadCli_ProxObjRow() {
                return ((RepActividadCli_ProxObjRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividadCli_ProxObjRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividadCli_ProxObjRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividadCli_ProxObjRowChanged != null)) {
                    this.RepActividadCli_ProxObjRowChanged(this, new RepActividadCli_ProxObjRowChangeEvent(((RepActividadCli_ProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividadCli_ProxObjRowChanging != null)) {
                    this.RepActividadCli_ProxObjRowChanging(this, new RepActividadCli_ProxObjRowChangeEvent(((RepActividadCli_ProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividadCli_ProxObjRowDeleted != null)) {
                    this.RepActividadCli_ProxObjRowDeleted(this, new RepActividadCli_ProxObjRowChangeEvent(((RepActividadCli_ProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividadCli_ProxObjRowDeleting != null)) {
                    this.RepActividadCli_ProxObjRowDeleting(this, new RepActividadCli_ProxObjRowChangeEvent(((RepActividadCli_ProxObjRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividadCli_ProxObjRow(RepActividadCli_ProxObjRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCli_ProxObjRow : DataRow {
            
            private RepActividadCli_ProxObjDataTable tableRepActividadCli_ProxObj;
            
            internal RepActividadCli_ProxObjRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividadCli_ProxObj = ((RepActividadCli_ProxObjDataTable)(this.Table));
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableRepActividadCli_ProxObj.iIdCentroColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.iIdCentroColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividadCli_ProxObj.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.iIdClienteColumn] = value;
                }
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividadCli_ProxObj.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.iIdReportColumn] = value;
                }
            }
            
            public string tProxObj {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCli_ProxObj.tProxObjColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.tProxObjColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableRepActividadCli_ProxObj.dFechaColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.dFechaColumn] = value;
                }
            }
            
            public bool IstProxObjNull() {
                return this.IsNull(this.tableRepActividadCli_ProxObj.tProxObjColumn);
            }
            
            public void SettProxObjNull() {
                this[this.tableRepActividadCli_ProxObj.tProxObjColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCli_ProxObjRowChangeEvent : EventArgs {
            
            private RepActividadCli_ProxObjRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividadCli_ProxObjRowChangeEvent(RepActividadCli_ProxObjRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividadCli_ProxObjRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PedDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columnsIdPedido;
            
            internal RepActividad_PedDataTable() : 
                    base("RepActividad_Ped") {
                this.InitClass();
            }
            
            internal RepActividad_PedDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            public RepActividad_PedRow this[int index] {
                get {
                    return ((RepActividad_PedRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_PedRowChangeEventHandler RepActividad_PedRowChanged;
            
            public event RepActividad_PedRowChangeEventHandler RepActividad_PedRowChanging;
            
            public event RepActividad_PedRowChangeEventHandler RepActividad_PedRowDeleted;
            
            public event RepActividad_PedRowChangeEventHandler RepActividad_PedRowDeleting;
            
            public void AddRepActividad_PedRow(RepActividad_PedRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_PedRow AddRepActividad_PedRow(int iIdReport, string sIdPedido) {
                RepActividad_PedRow rowRepActividad_PedRow = ((RepActividad_PedRow)(this.NewRow()));
                rowRepActividad_PedRow.ItemArray = new object[] {
                        iIdReport,
                        sIdPedido};
                this.Rows.Add(rowRepActividad_PedRow);
                return rowRepActividad_PedRow;
            }
            
            public RepActividad_PedRow FindByiIdReportsIdPedido(int iIdReport, string sIdPedido) {
                return ((RepActividad_PedRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            sIdPedido})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_PedDataTable cln = ((RepActividad_PedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_PedDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columnsIdPedido = this.Columns["sIdPedido"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.Constraints.Add(new UniqueConstraint("dsDatosPDAKey20", new DataColumn[] {
                                this.columniIdReport,
                                this.columnsIdPedido}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columnsIdPedido.AllowDBNull = false;
            }
            
            public RepActividad_PedRow NewRepActividad_PedRow() {
                return ((RepActividad_PedRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_PedRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_PedRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_PedRowChanged != null)) {
                    this.RepActividad_PedRowChanged(this, new RepActividad_PedRowChangeEvent(((RepActividad_PedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_PedRowChanging != null)) {
                    this.RepActividad_PedRowChanging(this, new RepActividad_PedRowChangeEvent(((RepActividad_PedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_PedRowDeleted != null)) {
                    this.RepActividad_PedRowDeleted(this, new RepActividad_PedRowChangeEvent(((RepActividad_PedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_PedRowDeleting != null)) {
                    this.RepActividad_PedRowDeleting(this, new RepActividad_PedRowChangeEvent(((RepActividad_PedRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_PedRow(RepActividad_PedRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PedRow : DataRow {
            
            private RepActividad_PedDataTable tableRepActividad_Ped;
            
            internal RepActividad_PedRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Ped = ((RepActividad_PedDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Ped.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Ped.iIdReportColumn] = value;
                }
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tableRepActividad_Ped.sIdPedidoColumn]));
                }
                set {
                    this[this.tableRepActividad_Ped.sIdPedidoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PedRowChangeEvent : EventArgs {
            
            private RepActividad_PedRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_PedRowChangeEvent(RepActividad_PedRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_PedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_GadDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdAccion;
            
            private DataColumn columniCantidad;
            
            internal RepActividad_GadDataTable() : 
                    base("RepActividad_Gad") {
                this.InitClass();
            }
            
            internal RepActividad_GadDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdAccionColumn {
                get {
                    return this.columniIdAccion;
                }
            }
            
            internal DataColumn iCantidadColumn {
                get {
                    return this.columniCantidad;
                }
            }
            
            public RepActividad_GadRow this[int index] {
                get {
                    return ((RepActividad_GadRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_GadRowChangeEventHandler RepActividad_GadRowChanged;
            
            public event RepActividad_GadRowChangeEventHandler RepActividad_GadRowChanging;
            
            public event RepActividad_GadRowChangeEventHandler RepActividad_GadRowDeleted;
            
            public event RepActividad_GadRowChangeEventHandler RepActividad_GadRowDeleting;
            
            public void AddRepActividad_GadRow(RepActividad_GadRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_GadRow AddRepActividad_GadRow(int iIdReport, int iIdCliente, int iIdAccion, int iCantidad) {
                RepActividad_GadRow rowRepActividad_GadRow = ((RepActividad_GadRow)(this.NewRow()));
                rowRepActividad_GadRow.ItemArray = new object[] {
                        iIdReport,
                        iIdCliente,
                        iIdAccion,
                        iCantidad};
                this.Rows.Add(rowRepActividad_GadRow);
                return rowRepActividad_GadRow;
            }
            
            public RepActividad_GadRow FindByiIdReportiIdClienteiIdAccion(int iIdReport, int iIdCliente, int iIdAccion) {
                return ((RepActividad_GadRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            iIdCliente,
                            iIdAccion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_GadDataTable cln = ((RepActividad_GadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_GadDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdAccion = this.Columns["iIdAccion"];
                this.columniCantidad = this.Columns["iCantidad"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdAccion = new DataColumn("iIdAccion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAccion);
                this.columniCantidad = new DataColumn("iCantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidad);
                this.Constraints.Add(new UniqueConstraint("dsDatosPDAKey22", new DataColumn[] {
                                this.columniIdReport,
                                this.columniIdCliente,
                                this.columniIdAccion}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdAccion.AllowDBNull = false;
                this.columniCantidad.AllowDBNull = false;
            }
            
            public RepActividad_GadRow NewRepActividad_GadRow() {
                return ((RepActividad_GadRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_GadRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_GadRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_GadRowChanged != null)) {
                    this.RepActividad_GadRowChanged(this, new RepActividad_GadRowChangeEvent(((RepActividad_GadRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_GadRowChanging != null)) {
                    this.RepActividad_GadRowChanging(this, new RepActividad_GadRowChangeEvent(((RepActividad_GadRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_GadRowDeleted != null)) {
                    this.RepActividad_GadRowDeleted(this, new RepActividad_GadRowChangeEvent(((RepActividad_GadRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_GadRowDeleting != null)) {
                    this.RepActividad_GadRowDeleting(this, new RepActividad_GadRowChangeEvent(((RepActividad_GadRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_GadRow(RepActividad_GadRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_GadRow : DataRow {
            
            private RepActividad_GadDataTable tableRepActividad_Gad;
            
            internal RepActividad_GadRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Gad = ((RepActividad_GadDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Gad.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Gad.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividad_Gad.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividad_Gad.iIdClienteColumn] = value;
                }
            }
            
            public int iIdAccion {
                get {
                    return ((int)(this[this.tableRepActividad_Gad.iIdAccionColumn]));
                }
                set {
                    this[this.tableRepActividad_Gad.iIdAccionColumn] = value;
                }
            }
            
            public int iCantidad {
                get {
                    return ((int)(this[this.tableRepActividad_Gad.iCantidadColumn]));
                }
                set {
                    this[this.tableRepActividad_Gad.iCantidadColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_GadRowChangeEvent : EventArgs {
            
            private RepActividad_GadRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_GadRowChangeEvent(RepActividad_GadRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_GadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ConfiguracionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdConfig;
            
            private DataColumn columnsConfig;
            
            private DataColumn columnsValor;
            
            private DataColumn columndFUM;
            
            internal ConfiguracionDataTable() : 
                    base("Configuracion") {
                this.InitClass();
            }
            
            internal ConfiguracionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdConfigColumn {
                get {
                    return this.columniIdConfig;
                }
            }
            
            internal DataColumn sConfigColumn {
                get {
                    return this.columnsConfig;
                }
            }
            
            internal DataColumn sValorColumn {
                get {
                    return this.columnsValor;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public ConfiguracionRow this[int index] {
                get {
                    return ((ConfiguracionRow)(this.Rows[index]));
                }
            }
            
            public event ConfiguracionRowChangeEventHandler ConfiguracionRowChanged;
            
            public event ConfiguracionRowChangeEventHandler ConfiguracionRowChanging;
            
            public event ConfiguracionRowChangeEventHandler ConfiguracionRowDeleted;
            
            public event ConfiguracionRowChangeEventHandler ConfiguracionRowDeleting;
            
            public void AddConfiguracionRow(ConfiguracionRow row) {
                this.Rows.Add(row);
            }
            
            public ConfiguracionRow AddConfiguracionRow(long iIdConfig, string sConfig, string sValor, System.DateTime dFUM) {
                ConfiguracionRow rowConfiguracionRow = ((ConfiguracionRow)(this.NewRow()));
                rowConfiguracionRow.ItemArray = new object[] {
                        iIdConfig,
                        sConfig,
                        sValor,
                        dFUM};
                this.Rows.Add(rowConfiguracionRow);
                return rowConfiguracionRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ConfiguracionDataTable cln = ((ConfiguracionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ConfiguracionDataTable();
            }
            
            internal void InitVars() {
                this.columniIdConfig = this.Columns["iIdConfig"];
                this.columnsConfig = this.Columns["sConfig"];
                this.columnsValor = this.Columns["sValor"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdConfig = new DataColumn("iIdConfig", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdConfig);
                this.columnsConfig = new DataColumn("sConfig", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsConfig);
                this.columnsValor = new DataColumn("sValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsValor);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
            }
            
            public ConfiguracionRow NewConfiguracionRow() {
                return ((ConfiguracionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ConfiguracionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ConfiguracionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConfiguracionRowChanged != null)) {
                    this.ConfiguracionRowChanged(this, new ConfiguracionRowChangeEvent(((ConfiguracionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConfiguracionRowChanging != null)) {
                    this.ConfiguracionRowChanging(this, new ConfiguracionRowChangeEvent(((ConfiguracionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConfiguracionRowDeleted != null)) {
                    this.ConfiguracionRowDeleted(this, new ConfiguracionRowChangeEvent(((ConfiguracionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConfiguracionRowDeleting != null)) {
                    this.ConfiguracionRowDeleting(this, new ConfiguracionRowChangeEvent(((ConfiguracionRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveConfiguracionRow(ConfiguracionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ConfiguracionRow : DataRow {
            
            private ConfiguracionDataTable tableConfiguracion;
            
            internal ConfiguracionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableConfiguracion = ((ConfiguracionDataTable)(this.Table));
            }
            
            public long iIdConfig {
                get {
                    try {
                        return ((long)(this[this.tableConfiguracion.iIdConfigColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableConfiguracion.iIdConfigColumn] = value;
                }
            }
            
            public string sConfig {
                get {
                    try {
                        return ((string)(this[this.tableConfiguracion.sConfigColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableConfiguracion.sConfigColumn] = value;
                }
            }
            
            public string sValor {
                get {
                    try {
                        return ((string)(this[this.tableConfiguracion.sValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableConfiguracion.sValorColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableConfiguracion.dFUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableConfiguracion.dFUMColumn] = value;
                }
            }
            
            public bool IsiIdConfigNull() {
                return this.IsNull(this.tableConfiguracion.iIdConfigColumn);
            }
            
            public void SetiIdConfigNull() {
                this[this.tableConfiguracion.iIdConfigColumn] = System.Convert.DBNull;
            }
            
            public bool IssConfigNull() {
                return this.IsNull(this.tableConfiguracion.sConfigColumn);
            }
            
            public void SetsConfigNull() {
                this[this.tableConfiguracion.sConfigColumn] = System.Convert.DBNull;
            }
            
            public bool IssValorNull() {
                return this.IsNull(this.tableConfiguracion.sValorColumn);
            }
            
            public void SetsValorNull() {
                this[this.tableConfiguracion.sValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFUMNull() {
                return this.IsNull(this.tableConfiguracion.dFUMColumn);
            }
            
            public void SetdFUMNull() {
                this[this.tableConfiguracion.dFUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ConfiguracionRowChangeEvent : EventArgs {
            
            private ConfiguracionRow eventRow;
            
            private DataRowAction eventAction;
            
            public ConfiguracionRowChangeEvent(ConfiguracionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ConfiguracionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
