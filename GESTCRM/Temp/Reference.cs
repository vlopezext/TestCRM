//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=1.1.4322.2407.
// 
namespace GESTCRM.WSSinCRM {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SincroCRMSoap", Namespace="http://STADACRM/CRMWebService/WSSinCRM/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public class SincroCRM : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public SincroCRM() {
            string urlSetting = System.Configuration.ConfigurationSettings.AppSettings["GESTCRMCL.WSSinCRM.SincroCRM"];
            if ((urlSetting != null)) {
                this.Url = string.Concat(urlSetting, "");
            }
            else {
                this.Url = "http://localhost/WsSinCrmV5/SincroCRM.asmx";
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://STADACRM/CRMWebService/WSSinCRM/RecibirDeCentral", RequestNamespace="http://STADACRM/CRMWebService/WSSinCRM/", ResponseNamespace="http://STADACRM/CRMWebService/WSSinCRM/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[MasterCSharp.WebServices.CompressionExtension]
        public dsCentral RecibirDeCentral(int iIdDelegado) {
            object[] results = this.Invoke("RecibirDeCentral", new object[] {
                        iIdDelegado});
            return ((dsCentral)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRecibirDeCentral(int iIdDelegado, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RecibirDeCentral", new object[] {
                        iIdDelegado}, callback, asyncState);
        }
        
        /// <remarks/>
        [MasterCSharp.WebServices.CompressionExtension]
        public dsCentral EndRecibirDeCentral(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dsCentral)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://STADACRM/CRMWebService/WSSinCRM/EnviarACentral", RequestNamespace="http://STADACRM/CRMWebService/WSSinCRM/", ResponseNamespace="http://STADACRM/CRMWebService/WSSinCRM/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[MasterCSharp.WebServices.CompressionExtension]
        public dsRetorno EnviarACentral(int iIdDelegado, dsCliente dsEnvio) {
            object[] results = this.Invoke("EnviarACentral", new object[] {
                        iIdDelegado,
                        dsEnvio});
            return ((dsRetorno)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnviarACentral(int iIdDelegado, dsCliente dsEnvio, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnviarACentral", new object[] {
                        iIdDelegado,
                        dsEnvio}, callback, asyncState);
        }
        
        /// <remarks/>
        [MasterCSharp.WebServices.CompressionExtension]
        public dsRetorno EndEnviarACentral(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dsRetorno)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://STADACRM/CRMWebService/WSSinCRM/IniSincro", RequestNamespace="http://STADACRM/CRMWebService/WSSinCRM/", ResponseNamespace="http://STADACRM/CRMWebService/WSSinCRM/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] IniSincro(int iIdDelegado, System.DateTime FechaInicio, string AppVersion) {
            object[] results = this.Invoke("IniSincro", new object[] {
                        iIdDelegado,
                        FechaInicio,
                        AppVersion});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIniSincro(int iIdDelegado, System.DateTime FechaInicio, string AppVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IniSincro", new object[] {
                        iIdDelegado,
                        FechaInicio,
                        AppVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndIniSincro(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://STADACRM/CRMWebService/WSSinCRM/PermisosSubida", RequestNamespace="http://STADACRM/CRMWebService/WSSinCRM/", ResponseNamespace="http://STADACRM/CRMWebService/WSSinCRM/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] PermisosSubida(int iIdDelegado) {
            object[] results = this.Invoke("PermisosSubida", new object[] {
                        iIdDelegado});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPermisosSubida(int iIdDelegado, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PermisosSubida", new object[] {
                        iIdDelegado}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndPermisosSubida(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://STADACRM/CRMWebService/WSSinCRM/FinSincro", RequestNamespace="http://STADACRM/CRMWebService/WSSinCRM/", ResponseNamespace="http://STADACRM/CRMWebService/WSSinCRM/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [MasterCSharp.WebServices.CompressionExtension]
		public void FinSincro(int iIdDelegado, System.DateTime dFechaHoraIni, dsRetorno dsUP, dsRetorno dsDown, int iIdSincro) {
            this.Invoke("FinSincro", new object[] {
                        iIdDelegado,
                        dFechaHoraIni,
                        dsUP,
                        dsDown,
                        iIdSincro});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFinSincro(int iIdDelegado, System.DateTime dFechaHoraIni, dsRetorno dsUP, dsRetorno dsDown, int iIdSincro, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FinSincro", new object[] {
                        iIdDelegado,
                        dFechaHoraIni,
                        dsUP,
                        dsDown,
                        iIdSincro}, callback, asyncState);
        }
        
        /// <remarks/>
        [MasterCSharp.WebServices.CompressionExtension]
		public void EndFinSincro(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://STADACRM/CRMWebService/WSSinCRM/GetProgramUpdateData", RequestNamespace="http://STADACRM/CRMWebService/WSSinCRM/", ResponseNamespace="http://STADACRM/CRMWebService/WSSinCRM/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetProgramUpdateData(string sVersion) {
            object[] results = this.Invoke("GetProgramUpdateData", new object[] {
                        sVersion});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProgramUpdateData(string sVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProgramUpdateData", new object[] {
                        sVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetProgramUpdateData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://STADACRM/CRMWebService/WSSinCRM/GetProgramUpdateImage", RequestNamespace="http://STADACRM/CRMWebService/WSSinCRM/", ResponseNamespace="http://STADACRM/CRMWebService/WSSinCRM/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] GetProgramUpdateImage(string sVersion) {
            object[] results = this.Invoke("GetProgramUpdateImage", new object[] {
                        sVersion});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProgramUpdateImage(string sVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProgramUpdateImage", new object[] {
                        sVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetProgramUpdateImage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://STADACRM/CRMWebService/WSSinCRM/ProgramUpdateOK", RequestNamespace="http://STADACRM/CRMWebService/WSSinCRM/", ResponseNamespace="http://STADACRM/CRMWebService/WSSinCRM/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProgramUpdateOK(int iIdDelegado, string sVersion) {
            object[] results = this.Invoke("ProgramUpdateOK", new object[] {
                        iIdDelegado,
                        sVersion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProgramUpdateOK(int iIdDelegado, string sVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProgramUpdateOK", new object[] {
                        iIdDelegado,
                        sVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndProgramUpdateOK(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    }
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsCentral : DataSet {
        
        private ClientesDataTable tableClientes;
        
        private Clientes_COMDataTable tableClientes_COM;
        
        private AficClientes_COMDataTable tableAficClientes_COM;
        
        private EspecClientes_COMDataTable tableEspecClientes_COM;
        
        private ProdClientes_COMDataTable tableProdClientes_COM;
        
        private AccionesMarkClientesDataTable tableAccionesMarkClientes;
        
        private Clientes_SAPDataTable tableClientes_SAP;
        
        private CentrosDataTable tableCentros;
        
        private Pedidos_CabDataTable tablePedidos_Cab;
        
        private Pedidos_LinDataTable tablePedidos_Lin;
        
        private RepActividad_CabDataTable tableRepActividad_Cab;
        
        private RepActividad_CliDataTable tableRepActividad_Cli;
        
        private RepActividadCli_ProxObjDataTable tableRepActividadCli_ProxObj;
        
        private RepActividad_PedDataTable tableRepActividad_Ped;
        
        private RepActividad_GadDataTable tableRepActividad_Gad;
        
        private RepActividad_AtenDataTable tableRepActividad_Aten;
        
        private RepActividad_PromDataTable tableRepActividad_Prom;
        
        private AtencionesComercialesDataTable tableAtencionesComerciales;
        
        private NotasGastosDataTable tableNotasGastos;
        
        private NotasGastos_LinDataTable tableNotasGastos_Lin;
        
        private AtencionesNotasGastosDataTable tableAtencionesNotasGastos;
        
        private BricksDataTable tableBricks;
        
        private DelegadosDataTable tableDelegados;
        
        private GastosDataTable tableGastos;
        
        private PeriodosPresupuestosDataTable tablePeriodosPresupuestos;
        
        private PresupuestosDataTable tablePresupuestos;
        
        private CodigosPostalesDataTable tableCodigosPostales;
        
        private BrickCodigoPostalDataTable tableBrickCodigoPostal;
        
        private AgendaObservDataTable tableAgendaObserv;
        
        private RedesComercialesDataTable tableRedesComerciales;
        
        private PoblacionesDataTable tablePoblaciones;
        
        private MaterialesDataTable tableMateriales;
        
        private DivisionesDataTable tableDivisiones;
        
        private ProductosDataTable tableProductos;
        
        private AccionesMarketingDataTable tableAccionesMarketing;
        
        private AccionesRedesDataTable tableAccionesRedes;
        
        private TiposPosPedidosSAPDataTable tableTiposPosPedidosSAP;
        
        private TiposDataTable tableTipos;
        
        private LineasTiposDataTable tableLineasTipos;
        
        private GetFechasBajadaDataTable tableGetFechasBajada;
        
        private ErroresDataTable tableErrores;
        
        private GetSincroUpdatesDataTable tableGetSincroUpdates;
        
        private TipoCargoDelegadoDataTable tableTipoCargoDelegado;
        
        private ConfiguracionDataTable tableConfiguracion;
        
        private ProvinciasDataTable tableProvincias;
        
        private ClientesRedesDataTable tableClientesRedes;
        
        private BrickClientesDataTable tableBrickClientes;
        
        private CPClientesDataTable tableCPClientes;
        
        private CentrosClientes_COMDataTable tableCentrosClientes_COM;
        
        private CentrosRedesDataTable tableCentrosRedes;
        
        private DelegadoBrickDataTable tableDelegadoBrick;
        
        private ContactosClientes_SAPDataTable tableContactosClientes_SAP;
        
        private CentrosClientes_SAPDataTable tableCentrosClientes_SAP;
        
        private InterlocutorClientes_SAPDataTable tableInterlocutorClientes_SAP;
        
        private SolicitudGadgetDataTable tableSolicitudGadget;
        
        private EspecialidadesDelegadoDataTable tableEspecialidadesDelegado;
        
        private EspecialidadesRedesDataTable tableEspecialidadesRedes;
        
        private PromocionesRedesDataTable tablePromocionesRedes;
        
        private EstructuraComercialDataTable tableEstructuraComercial;
        
        private ParrillaDataTable tableParrilla;
        
        private MaterialParrillaDataTable tableMaterialParrilla;
        
        private MaterialCampDataTable tableMaterialCamp;
        
        private AtencionesProductosDataTable tableAtencionesProductos;
        
        private Descuento_CampanyasDataTable tableDescuento_Campanyas;
        
        private DataRelation relationNotasGastosAtencionesNotasGastos;
        
        private DataRelation relationNotasGastosNotasGastos_Lin;
        
        private DataRelation relationRepActividad_CabRepActividad_Prom;
        
        private DataRelation relationRepActividad_CabRepActividad_Aten;
        
        private DataRelation relationRepActividad_CabRepActividad_Gad;
        
        private DataRelation relationRepActividad_CabRepActividad_Ped;
        
        private DataRelation relationRepActividad_CabRepActividadCli_ProxObj;
        
        private DataRelation relationRepActividad_CabRepActividad_Cli;
        
        private DataRelation relationPedidos_CabPedidos_Lin;
        
        public dsCentral() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsCentral(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Clientes"] != null)) {
                    this.Tables.Add(new ClientesDataTable(ds.Tables["Clientes"]));
                }
                if ((ds.Tables["Clientes_COM"] != null)) {
                    this.Tables.Add(new Clientes_COMDataTable(ds.Tables["Clientes_COM"]));
                }
                if ((ds.Tables["AficClientes_COM"] != null)) {
                    this.Tables.Add(new AficClientes_COMDataTable(ds.Tables["AficClientes_COM"]));
                }
                if ((ds.Tables["EspecClientes_COM"] != null)) {
                    this.Tables.Add(new EspecClientes_COMDataTable(ds.Tables["EspecClientes_COM"]));
                }
                if ((ds.Tables["ProdClientes_COM"] != null)) {
                    this.Tables.Add(new ProdClientes_COMDataTable(ds.Tables["ProdClientes_COM"]));
                }
                if ((ds.Tables["AccionesMarkClientes"] != null)) {
                    this.Tables.Add(new AccionesMarkClientesDataTable(ds.Tables["AccionesMarkClientes"]));
                }
                if ((ds.Tables["Clientes_SAP"] != null)) {
                    this.Tables.Add(new Clientes_SAPDataTable(ds.Tables["Clientes_SAP"]));
                }
                if ((ds.Tables["Centros"] != null)) {
                    this.Tables.Add(new CentrosDataTable(ds.Tables["Centros"]));
                }
                if ((ds.Tables["Pedidos_Cab"] != null)) {
                    this.Tables.Add(new Pedidos_CabDataTable(ds.Tables["Pedidos_Cab"]));
                }
                if ((ds.Tables["Pedidos_Lin"] != null)) {
                    this.Tables.Add(new Pedidos_LinDataTable(ds.Tables["Pedidos_Lin"]));
                }
                if ((ds.Tables["RepActividad_Cab"] != null)) {
                    this.Tables.Add(new RepActividad_CabDataTable(ds.Tables["RepActividad_Cab"]));
                }
                if ((ds.Tables["RepActividad_Cli"] != null)) {
                    this.Tables.Add(new RepActividad_CliDataTable(ds.Tables["RepActividad_Cli"]));
                }
                if ((ds.Tables["RepActividadCli_ProxObj"] != null)) {
                    this.Tables.Add(new RepActividadCli_ProxObjDataTable(ds.Tables["RepActividadCli_ProxObj"]));
                }
                if ((ds.Tables["RepActividad_Ped"] != null)) {
                    this.Tables.Add(new RepActividad_PedDataTable(ds.Tables["RepActividad_Ped"]));
                }
                if ((ds.Tables["RepActividad_Gad"] != null)) {
                    this.Tables.Add(new RepActividad_GadDataTable(ds.Tables["RepActividad_Gad"]));
                }
                if ((ds.Tables["RepActividad_Aten"] != null)) {
                    this.Tables.Add(new RepActividad_AtenDataTable(ds.Tables["RepActividad_Aten"]));
                }
                if ((ds.Tables["RepActividad_Prom"] != null)) {
                    this.Tables.Add(new RepActividad_PromDataTable(ds.Tables["RepActividad_Prom"]));
                }
                if ((ds.Tables["AtencionesComerciales"] != null)) {
                    this.Tables.Add(new AtencionesComercialesDataTable(ds.Tables["AtencionesComerciales"]));
                }
                if ((ds.Tables["NotasGastos"] != null)) {
                    this.Tables.Add(new NotasGastosDataTable(ds.Tables["NotasGastos"]));
                }
                if ((ds.Tables["NotasGastos_Lin"] != null)) {
                    this.Tables.Add(new NotasGastos_LinDataTable(ds.Tables["NotasGastos_Lin"]));
                }
                if ((ds.Tables["AtencionesNotasGastos"] != null)) {
                    this.Tables.Add(new AtencionesNotasGastosDataTable(ds.Tables["AtencionesNotasGastos"]));
                }
                if ((ds.Tables["Bricks"] != null)) {
                    this.Tables.Add(new BricksDataTable(ds.Tables["Bricks"]));
                }
                if ((ds.Tables["Delegados"] != null)) {
                    this.Tables.Add(new DelegadosDataTable(ds.Tables["Delegados"]));
                }
                if ((ds.Tables["Gastos"] != null)) {
                    this.Tables.Add(new GastosDataTable(ds.Tables["Gastos"]));
                }
                if ((ds.Tables["PeriodosPresupuestos"] != null)) {
                    this.Tables.Add(new PeriodosPresupuestosDataTable(ds.Tables["PeriodosPresupuestos"]));
                }
                if ((ds.Tables["Presupuestos"] != null)) {
                    this.Tables.Add(new PresupuestosDataTable(ds.Tables["Presupuestos"]));
                }
                if ((ds.Tables["CodigosPostales"] != null)) {
                    this.Tables.Add(new CodigosPostalesDataTable(ds.Tables["CodigosPostales"]));
                }
                if ((ds.Tables["BrickCodigoPostal"] != null)) {
                    this.Tables.Add(new BrickCodigoPostalDataTable(ds.Tables["BrickCodigoPostal"]));
                }
                if ((ds.Tables["AgendaObserv"] != null)) {
                    this.Tables.Add(new AgendaObservDataTable(ds.Tables["AgendaObserv"]));
                }
                if ((ds.Tables["RedesComerciales"] != null)) {
                    this.Tables.Add(new RedesComercialesDataTable(ds.Tables["RedesComerciales"]));
                }
                if ((ds.Tables["Poblaciones"] != null)) {
                    this.Tables.Add(new PoblacionesDataTable(ds.Tables["Poblaciones"]));
                }
                if ((ds.Tables["Materiales"] != null)) {
                    this.Tables.Add(new MaterialesDataTable(ds.Tables["Materiales"]));
                }
                if ((ds.Tables["Divisiones"] != null)) {
                    this.Tables.Add(new DivisionesDataTable(ds.Tables["Divisiones"]));
                }
                if ((ds.Tables["Productos"] != null)) {
                    this.Tables.Add(new ProductosDataTable(ds.Tables["Productos"]));
                }
                if ((ds.Tables["AccionesMarketing"] != null)) {
                    this.Tables.Add(new AccionesMarketingDataTable(ds.Tables["AccionesMarketing"]));
                }
                if ((ds.Tables["AccionesRedes"] != null)) {
                    this.Tables.Add(new AccionesRedesDataTable(ds.Tables["AccionesRedes"]));
                }
                if ((ds.Tables["TiposPosPedidosSAP"] != null)) {
                    this.Tables.Add(new TiposPosPedidosSAPDataTable(ds.Tables["TiposPosPedidosSAP"]));
                }
                if ((ds.Tables["Tipos"] != null)) {
                    this.Tables.Add(new TiposDataTable(ds.Tables["Tipos"]));
                }
                if ((ds.Tables["LineasTipos"] != null)) {
                    this.Tables.Add(new LineasTiposDataTable(ds.Tables["LineasTipos"]));
                }
                if ((ds.Tables["GetFechasBajada"] != null)) {
                    this.Tables.Add(new GetFechasBajadaDataTable(ds.Tables["GetFechasBajada"]));
                }
                if ((ds.Tables["Errores"] != null)) {
                    this.Tables.Add(new ErroresDataTable(ds.Tables["Errores"]));
                }
                if ((ds.Tables["GetSincroUpdates"] != null)) {
                    this.Tables.Add(new GetSincroUpdatesDataTable(ds.Tables["GetSincroUpdates"]));
                }
                if ((ds.Tables["TipoCargoDelegado"] != null)) {
                    this.Tables.Add(new TipoCargoDelegadoDataTable(ds.Tables["TipoCargoDelegado"]));
                }
                if ((ds.Tables["Configuracion"] != null)) {
                    this.Tables.Add(new ConfiguracionDataTable(ds.Tables["Configuracion"]));
                }
                if ((ds.Tables["Provincias"] != null)) {
                    this.Tables.Add(new ProvinciasDataTable(ds.Tables["Provincias"]));
                }
                if ((ds.Tables["ClientesRedes"] != null)) {
                    this.Tables.Add(new ClientesRedesDataTable(ds.Tables["ClientesRedes"]));
                }
                if ((ds.Tables["BrickClientes"] != null)) {
                    this.Tables.Add(new BrickClientesDataTable(ds.Tables["BrickClientes"]));
                }
                if ((ds.Tables["CPClientes"] != null)) {
                    this.Tables.Add(new CPClientesDataTable(ds.Tables["CPClientes"]));
                }
                if ((ds.Tables["CentrosClientes_COM"] != null)) {
                    this.Tables.Add(new CentrosClientes_COMDataTable(ds.Tables["CentrosClientes_COM"]));
                }
                if ((ds.Tables["CentrosRedes"] != null)) {
                    this.Tables.Add(new CentrosRedesDataTable(ds.Tables["CentrosRedes"]));
                }
                if ((ds.Tables["DelegadoBrick"] != null)) {
                    this.Tables.Add(new DelegadoBrickDataTable(ds.Tables["DelegadoBrick"]));
                }
                if ((ds.Tables["ContactosClientes_SAP"] != null)) {
                    this.Tables.Add(new ContactosClientes_SAPDataTable(ds.Tables["ContactosClientes_SAP"]));
                }
                if ((ds.Tables["CentrosClientes_SAP"] != null)) {
                    this.Tables.Add(new CentrosClientes_SAPDataTable(ds.Tables["CentrosClientes_SAP"]));
                }
                if ((ds.Tables["InterlocutorClientes_SAP"] != null)) {
                    this.Tables.Add(new InterlocutorClientes_SAPDataTable(ds.Tables["InterlocutorClientes_SAP"]));
                }
                if ((ds.Tables["SolicitudGadget"] != null)) {
                    this.Tables.Add(new SolicitudGadgetDataTable(ds.Tables["SolicitudGadget"]));
                }
                if ((ds.Tables["EspecialidadesDelegado"] != null)) {
                    this.Tables.Add(new EspecialidadesDelegadoDataTable(ds.Tables["EspecialidadesDelegado"]));
                }
                if ((ds.Tables["EspecialidadesRedes"] != null)) {
                    this.Tables.Add(new EspecialidadesRedesDataTable(ds.Tables["EspecialidadesRedes"]));
                }
                if ((ds.Tables["PromocionesRedes"] != null)) {
                    this.Tables.Add(new PromocionesRedesDataTable(ds.Tables["PromocionesRedes"]));
                }
                if ((ds.Tables["EstructuraComercial"] != null)) {
                    this.Tables.Add(new EstructuraComercialDataTable(ds.Tables["EstructuraComercial"]));
                }
                if ((ds.Tables["Parrilla"] != null)) {
                    this.Tables.Add(new ParrillaDataTable(ds.Tables["Parrilla"]));
                }
                if ((ds.Tables["MaterialParrilla"] != null)) {
                    this.Tables.Add(new MaterialParrillaDataTable(ds.Tables["MaterialParrilla"]));
                }
                if ((ds.Tables["MaterialCamp"] != null)) {
                    this.Tables.Add(new MaterialCampDataTable(ds.Tables["MaterialCamp"]));
                }
                if ((ds.Tables["AtencionesProductos"] != null)) {
                    this.Tables.Add(new AtencionesProductosDataTable(ds.Tables["AtencionesProductos"]));
                }
                if ((ds.Tables["Descuento_Campanyas"] != null)) {
                    this.Tables.Add(new Descuento_CampanyasDataTable(ds.Tables["Descuento_Campanyas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientesDataTable Clientes {
            get {
                return this.tableClientes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Clientes_COMDataTable Clientes_COM {
            get {
                return this.tableClientes_COM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AficClientes_COMDataTable AficClientes_COM {
            get {
                return this.tableAficClientes_COM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EspecClientes_COMDataTable EspecClientes_COM {
            get {
                return this.tableEspecClientes_COM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProdClientes_COMDataTable ProdClientes_COM {
            get {
                return this.tableProdClientes_COM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccionesMarkClientesDataTable AccionesMarkClientes {
            get {
                return this.tableAccionesMarkClientes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Clientes_SAPDataTable Clientes_SAP {
            get {
                return this.tableClientes_SAP;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosDataTable Centros {
            get {
                return this.tableCentros;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pedidos_CabDataTable Pedidos_Cab {
            get {
                return this.tablePedidos_Cab;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pedidos_LinDataTable Pedidos_Lin {
            get {
                return this.tablePedidos_Lin;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_CabDataTable RepActividad_Cab {
            get {
                return this.tableRepActividad_Cab;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_CliDataTable RepActividad_Cli {
            get {
                return this.tableRepActividad_Cli;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividadCli_ProxObjDataTable RepActividadCli_ProxObj {
            get {
                return this.tableRepActividadCli_ProxObj;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_PedDataTable RepActividad_Ped {
            get {
                return this.tableRepActividad_Ped;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_GadDataTable RepActividad_Gad {
            get {
                return this.tableRepActividad_Gad;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_AtenDataTable RepActividad_Aten {
            get {
                return this.tableRepActividad_Aten;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividad_PromDataTable RepActividad_Prom {
            get {
                return this.tableRepActividad_Prom;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AtencionesComercialesDataTable AtencionesComerciales {
            get {
                return this.tableAtencionesComerciales;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NotasGastosDataTable NotasGastos {
            get {
                return this.tableNotasGastos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NotasGastos_LinDataTable NotasGastos_Lin {
            get {
                return this.tableNotasGastos_Lin;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AtencionesNotasGastosDataTable AtencionesNotasGastos {
            get {
                return this.tableAtencionesNotasGastos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BricksDataTable Bricks {
            get {
                return this.tableBricks;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DelegadosDataTable Delegados {
            get {
                return this.tableDelegados;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GastosDataTable Gastos {
            get {
                return this.tableGastos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PeriodosPresupuestosDataTable PeriodosPresupuestos {
            get {
                return this.tablePeriodosPresupuestos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PresupuestosDataTable Presupuestos {
            get {
                return this.tablePresupuestos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CodigosPostalesDataTable CodigosPostales {
            get {
                return this.tableCodigosPostales;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BrickCodigoPostalDataTable BrickCodigoPostal {
            get {
                return this.tableBrickCodigoPostal;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgendaObservDataTable AgendaObserv {
            get {
                return this.tableAgendaObserv;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RedesComercialesDataTable RedesComerciales {
            get {
                return this.tableRedesComerciales;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PoblacionesDataTable Poblaciones {
            get {
                return this.tablePoblaciones;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialesDataTable Materiales {
            get {
                return this.tableMateriales;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DivisionesDataTable Divisiones {
            get {
                return this.tableDivisiones;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductosDataTable Productos {
            get {
                return this.tableProductos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccionesMarketingDataTable AccionesMarketing {
            get {
                return this.tableAccionesMarketing;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccionesRedesDataTable AccionesRedes {
            get {
                return this.tableAccionesRedes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TiposPosPedidosSAPDataTable TiposPosPedidosSAP {
            get {
                return this.tableTiposPosPedidosSAP;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TiposDataTable Tipos {
            get {
                return this.tableTipos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LineasTiposDataTable LineasTipos {
            get {
                return this.tableLineasTipos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetFechasBajadaDataTable GetFechasBajada {
            get {
                return this.tableGetFechasBajada;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ErroresDataTable Errores {
            get {
                return this.tableErrores;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetSincroUpdatesDataTable GetSincroUpdates {
            get {
                return this.tableGetSincroUpdates;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TipoCargoDelegadoDataTable TipoCargoDelegado {
            get {
                return this.tableTipoCargoDelegado;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConfiguracionDataTable Configuracion {
            get {
                return this.tableConfiguracion;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProvinciasDataTable Provincias {
            get {
                return this.tableProvincias;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientesRedesDataTable ClientesRedes {
            get {
                return this.tableClientesRedes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BrickClientesDataTable BrickClientes {
            get {
                return this.tableBrickClientes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CPClientesDataTable CPClientes {
            get {
                return this.tableCPClientes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosClientes_COMDataTable CentrosClientes_COM {
            get {
                return this.tableCentrosClientes_COM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosRedesDataTable CentrosRedes {
            get {
                return this.tableCentrosRedes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DelegadoBrickDataTable DelegadoBrick {
            get {
                return this.tableDelegadoBrick;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContactosClientes_SAPDataTable ContactosClientes_SAP {
            get {
                return this.tableContactosClientes_SAP;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosClientes_SAPDataTable CentrosClientes_SAP {
            get {
                return this.tableCentrosClientes_SAP;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InterlocutorClientes_SAPDataTable InterlocutorClientes_SAP {
            get {
                return this.tableInterlocutorClientes_SAP;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SolicitudGadgetDataTable SolicitudGadget {
            get {
                return this.tableSolicitudGadget;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EspecialidadesDelegadoDataTable EspecialidadesDelegado {
            get {
                return this.tableEspecialidadesDelegado;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EspecialidadesRedesDataTable EspecialidadesRedes {
            get {
                return this.tableEspecialidadesRedes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PromocionesRedesDataTable PromocionesRedes {
            get {
                return this.tablePromocionesRedes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EstructuraComercialDataTable EstructuraComercial {
            get {
                return this.tableEstructuraComercial;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ParrillaDataTable Parrilla {
            get {
                return this.tableParrilla;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialParrillaDataTable MaterialParrilla {
            get {
                return this.tableMaterialParrilla;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaterialCampDataTable MaterialCamp {
            get {
                return this.tableMaterialCamp;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AtencionesProductosDataTable AtencionesProductos {
            get {
                return this.tableAtencionesProductos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Descuento_CampanyasDataTable Descuento_Campanyas {
            get {
                return this.tableDescuento_Campanyas;
            }
        }
        
        public override DataSet Clone() {
            dsCentral cln = ((dsCentral)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Clientes"] != null)) {
                this.Tables.Add(new ClientesDataTable(ds.Tables["Clientes"]));
            }
            if ((ds.Tables["Clientes_COM"] != null)) {
                this.Tables.Add(new Clientes_COMDataTable(ds.Tables["Clientes_COM"]));
            }
            if ((ds.Tables["AficClientes_COM"] != null)) {
                this.Tables.Add(new AficClientes_COMDataTable(ds.Tables["AficClientes_COM"]));
            }
            if ((ds.Tables["EspecClientes_COM"] != null)) {
                this.Tables.Add(new EspecClientes_COMDataTable(ds.Tables["EspecClientes_COM"]));
            }
            if ((ds.Tables["ProdClientes_COM"] != null)) {
                this.Tables.Add(new ProdClientes_COMDataTable(ds.Tables["ProdClientes_COM"]));
            }
            if ((ds.Tables["AccionesMarkClientes"] != null)) {
                this.Tables.Add(new AccionesMarkClientesDataTable(ds.Tables["AccionesMarkClientes"]));
            }
            if ((ds.Tables["Clientes_SAP"] != null)) {
                this.Tables.Add(new Clientes_SAPDataTable(ds.Tables["Clientes_SAP"]));
            }
            if ((ds.Tables["Centros"] != null)) {
                this.Tables.Add(new CentrosDataTable(ds.Tables["Centros"]));
            }
            if ((ds.Tables["Pedidos_Cab"] != null)) {
                this.Tables.Add(new Pedidos_CabDataTable(ds.Tables["Pedidos_Cab"]));
            }
            if ((ds.Tables["Pedidos_Lin"] != null)) {
                this.Tables.Add(new Pedidos_LinDataTable(ds.Tables["Pedidos_Lin"]));
            }
            if ((ds.Tables["RepActividad_Cab"] != null)) {
                this.Tables.Add(new RepActividad_CabDataTable(ds.Tables["RepActividad_Cab"]));
            }
            if ((ds.Tables["RepActividad_Cli"] != null)) {
                this.Tables.Add(new RepActividad_CliDataTable(ds.Tables["RepActividad_Cli"]));
            }
            if ((ds.Tables["RepActividadCli_ProxObj"] != null)) {
                this.Tables.Add(new RepActividadCli_ProxObjDataTable(ds.Tables["RepActividadCli_ProxObj"]));
            }
            if ((ds.Tables["RepActividad_Ped"] != null)) {
                this.Tables.Add(new RepActividad_PedDataTable(ds.Tables["RepActividad_Ped"]));
            }
            if ((ds.Tables["RepActividad_Gad"] != null)) {
                this.Tables.Add(new RepActividad_GadDataTable(ds.Tables["RepActividad_Gad"]));
            }
            if ((ds.Tables["RepActividad_Aten"] != null)) {
                this.Tables.Add(new RepActividad_AtenDataTable(ds.Tables["RepActividad_Aten"]));
            }
            if ((ds.Tables["RepActividad_Prom"] != null)) {
                this.Tables.Add(new RepActividad_PromDataTable(ds.Tables["RepActividad_Prom"]));
            }
            if ((ds.Tables["AtencionesComerciales"] != null)) {
                this.Tables.Add(new AtencionesComercialesDataTable(ds.Tables["AtencionesComerciales"]));
            }
            if ((ds.Tables["NotasGastos"] != null)) {
                this.Tables.Add(new NotasGastosDataTable(ds.Tables["NotasGastos"]));
            }
            if ((ds.Tables["NotasGastos_Lin"] != null)) {
                this.Tables.Add(new NotasGastos_LinDataTable(ds.Tables["NotasGastos_Lin"]));
            }
            if ((ds.Tables["AtencionesNotasGastos"] != null)) {
                this.Tables.Add(new AtencionesNotasGastosDataTable(ds.Tables["AtencionesNotasGastos"]));
            }
            if ((ds.Tables["Bricks"] != null)) {
                this.Tables.Add(new BricksDataTable(ds.Tables["Bricks"]));
            }
            if ((ds.Tables["Delegados"] != null)) {
                this.Tables.Add(new DelegadosDataTable(ds.Tables["Delegados"]));
            }
            if ((ds.Tables["Gastos"] != null)) {
                this.Tables.Add(new GastosDataTable(ds.Tables["Gastos"]));
            }
            if ((ds.Tables["PeriodosPresupuestos"] != null)) {
                this.Tables.Add(new PeriodosPresupuestosDataTable(ds.Tables["PeriodosPresupuestos"]));
            }
            if ((ds.Tables["Presupuestos"] != null)) {
                this.Tables.Add(new PresupuestosDataTable(ds.Tables["Presupuestos"]));
            }
            if ((ds.Tables["CodigosPostales"] != null)) {
                this.Tables.Add(new CodigosPostalesDataTable(ds.Tables["CodigosPostales"]));
            }
            if ((ds.Tables["BrickCodigoPostal"] != null)) {
                this.Tables.Add(new BrickCodigoPostalDataTable(ds.Tables["BrickCodigoPostal"]));
            }
            if ((ds.Tables["AgendaObserv"] != null)) {
                this.Tables.Add(new AgendaObservDataTable(ds.Tables["AgendaObserv"]));
            }
            if ((ds.Tables["RedesComerciales"] != null)) {
                this.Tables.Add(new RedesComercialesDataTable(ds.Tables["RedesComerciales"]));
            }
            if ((ds.Tables["Poblaciones"] != null)) {
                this.Tables.Add(new PoblacionesDataTable(ds.Tables["Poblaciones"]));
            }
            if ((ds.Tables["Materiales"] != null)) {
                this.Tables.Add(new MaterialesDataTable(ds.Tables["Materiales"]));
            }
            if ((ds.Tables["Divisiones"] != null)) {
                this.Tables.Add(new DivisionesDataTable(ds.Tables["Divisiones"]));
            }
            if ((ds.Tables["Productos"] != null)) {
                this.Tables.Add(new ProductosDataTable(ds.Tables["Productos"]));
            }
            if ((ds.Tables["AccionesMarketing"] != null)) {
                this.Tables.Add(new AccionesMarketingDataTable(ds.Tables["AccionesMarketing"]));
            }
            if ((ds.Tables["AccionesRedes"] != null)) {
                this.Tables.Add(new AccionesRedesDataTable(ds.Tables["AccionesRedes"]));
            }
            if ((ds.Tables["TiposPosPedidosSAP"] != null)) {
                this.Tables.Add(new TiposPosPedidosSAPDataTable(ds.Tables["TiposPosPedidosSAP"]));
            }
            if ((ds.Tables["Tipos"] != null)) {
                this.Tables.Add(new TiposDataTable(ds.Tables["Tipos"]));
            }
            if ((ds.Tables["LineasTipos"] != null)) {
                this.Tables.Add(new LineasTiposDataTable(ds.Tables["LineasTipos"]));
            }
            if ((ds.Tables["GetFechasBajada"] != null)) {
                this.Tables.Add(new GetFechasBajadaDataTable(ds.Tables["GetFechasBajada"]));
            }
            if ((ds.Tables["Errores"] != null)) {
                this.Tables.Add(new ErroresDataTable(ds.Tables["Errores"]));
            }
            if ((ds.Tables["GetSincroUpdates"] != null)) {
                this.Tables.Add(new GetSincroUpdatesDataTable(ds.Tables["GetSincroUpdates"]));
            }
            if ((ds.Tables["TipoCargoDelegado"] != null)) {
                this.Tables.Add(new TipoCargoDelegadoDataTable(ds.Tables["TipoCargoDelegado"]));
            }
            if ((ds.Tables["Configuracion"] != null)) {
                this.Tables.Add(new ConfiguracionDataTable(ds.Tables["Configuracion"]));
            }
            if ((ds.Tables["Provincias"] != null)) {
                this.Tables.Add(new ProvinciasDataTable(ds.Tables["Provincias"]));
            }
            if ((ds.Tables["ClientesRedes"] != null)) {
                this.Tables.Add(new ClientesRedesDataTable(ds.Tables["ClientesRedes"]));
            }
            if ((ds.Tables["BrickClientes"] != null)) {
                this.Tables.Add(new BrickClientesDataTable(ds.Tables["BrickClientes"]));
            }
            if ((ds.Tables["CPClientes"] != null)) {
                this.Tables.Add(new CPClientesDataTable(ds.Tables["CPClientes"]));
            }
            if ((ds.Tables["CentrosClientes_COM"] != null)) {
                this.Tables.Add(new CentrosClientes_COMDataTable(ds.Tables["CentrosClientes_COM"]));
            }
            if ((ds.Tables["CentrosRedes"] != null)) {
                this.Tables.Add(new CentrosRedesDataTable(ds.Tables["CentrosRedes"]));
            }
            if ((ds.Tables["DelegadoBrick"] != null)) {
                this.Tables.Add(new DelegadoBrickDataTable(ds.Tables["DelegadoBrick"]));
            }
            if ((ds.Tables["ContactosClientes_SAP"] != null)) {
                this.Tables.Add(new ContactosClientes_SAPDataTable(ds.Tables["ContactosClientes_SAP"]));
            }
            if ((ds.Tables["CentrosClientes_SAP"] != null)) {
                this.Tables.Add(new CentrosClientes_SAPDataTable(ds.Tables["CentrosClientes_SAP"]));
            }
            if ((ds.Tables["InterlocutorClientes_SAP"] != null)) {
                this.Tables.Add(new InterlocutorClientes_SAPDataTable(ds.Tables["InterlocutorClientes_SAP"]));
            }
            if ((ds.Tables["SolicitudGadget"] != null)) {
                this.Tables.Add(new SolicitudGadgetDataTable(ds.Tables["SolicitudGadget"]));
            }
            if ((ds.Tables["EspecialidadesDelegado"] != null)) {
                this.Tables.Add(new EspecialidadesDelegadoDataTable(ds.Tables["EspecialidadesDelegado"]));
            }
            if ((ds.Tables["EspecialidadesRedes"] != null)) {
                this.Tables.Add(new EspecialidadesRedesDataTable(ds.Tables["EspecialidadesRedes"]));
            }
            if ((ds.Tables["PromocionesRedes"] != null)) {
                this.Tables.Add(new PromocionesRedesDataTable(ds.Tables["PromocionesRedes"]));
            }
            if ((ds.Tables["EstructuraComercial"] != null)) {
                this.Tables.Add(new EstructuraComercialDataTable(ds.Tables["EstructuraComercial"]));
            }
            if ((ds.Tables["Parrilla"] != null)) {
                this.Tables.Add(new ParrillaDataTable(ds.Tables["Parrilla"]));
            }
            if ((ds.Tables["MaterialParrilla"] != null)) {
                this.Tables.Add(new MaterialParrillaDataTable(ds.Tables["MaterialParrilla"]));
            }
            if ((ds.Tables["MaterialCamp"] != null)) {
                this.Tables.Add(new MaterialCampDataTable(ds.Tables["MaterialCamp"]));
            }
            if ((ds.Tables["AtencionesProductos"] != null)) {
                this.Tables.Add(new AtencionesProductosDataTable(ds.Tables["AtencionesProductos"]));
            }
            if ((ds.Tables["Descuento_Campanyas"] != null)) {
                this.Tables.Add(new Descuento_CampanyasDataTable(ds.Tables["Descuento_Campanyas"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableClientes = ((ClientesDataTable)(this.Tables["Clientes"]));
            if ((this.tableClientes != null)) {
                this.tableClientes.InitVars();
            }
            this.tableClientes_COM = ((Clientes_COMDataTable)(this.Tables["Clientes_COM"]));
            if ((this.tableClientes_COM != null)) {
                this.tableClientes_COM.InitVars();
            }
            this.tableAficClientes_COM = ((AficClientes_COMDataTable)(this.Tables["AficClientes_COM"]));
            if ((this.tableAficClientes_COM != null)) {
                this.tableAficClientes_COM.InitVars();
            }
            this.tableEspecClientes_COM = ((EspecClientes_COMDataTable)(this.Tables["EspecClientes_COM"]));
            if ((this.tableEspecClientes_COM != null)) {
                this.tableEspecClientes_COM.InitVars();
            }
            this.tableProdClientes_COM = ((ProdClientes_COMDataTable)(this.Tables["ProdClientes_COM"]));
            if ((this.tableProdClientes_COM != null)) {
                this.tableProdClientes_COM.InitVars();
            }
            this.tableAccionesMarkClientes = ((AccionesMarkClientesDataTable)(this.Tables["AccionesMarkClientes"]));
            if ((this.tableAccionesMarkClientes != null)) {
                this.tableAccionesMarkClientes.InitVars();
            }
            this.tableClientes_SAP = ((Clientes_SAPDataTable)(this.Tables["Clientes_SAP"]));
            if ((this.tableClientes_SAP != null)) {
                this.tableClientes_SAP.InitVars();
            }
            this.tableCentros = ((CentrosDataTable)(this.Tables["Centros"]));
            if ((this.tableCentros != null)) {
                this.tableCentros.InitVars();
            }
            this.tablePedidos_Cab = ((Pedidos_CabDataTable)(this.Tables["Pedidos_Cab"]));
            if ((this.tablePedidos_Cab != null)) {
                this.tablePedidos_Cab.InitVars();
            }
            this.tablePedidos_Lin = ((Pedidos_LinDataTable)(this.Tables["Pedidos_Lin"]));
            if ((this.tablePedidos_Lin != null)) {
                this.tablePedidos_Lin.InitVars();
            }
            this.tableRepActividad_Cab = ((RepActividad_CabDataTable)(this.Tables["RepActividad_Cab"]));
            if ((this.tableRepActividad_Cab != null)) {
                this.tableRepActividad_Cab.InitVars();
            }
            this.tableRepActividad_Cli = ((RepActividad_CliDataTable)(this.Tables["RepActividad_Cli"]));
            if ((this.tableRepActividad_Cli != null)) {
                this.tableRepActividad_Cli.InitVars();
            }
            this.tableRepActividadCli_ProxObj = ((RepActividadCli_ProxObjDataTable)(this.Tables["RepActividadCli_ProxObj"]));
            if ((this.tableRepActividadCli_ProxObj != null)) {
                this.tableRepActividadCli_ProxObj.InitVars();
            }
            this.tableRepActividad_Ped = ((RepActividad_PedDataTable)(this.Tables["RepActividad_Ped"]));
            if ((this.tableRepActividad_Ped != null)) {
                this.tableRepActividad_Ped.InitVars();
            }
            this.tableRepActividad_Gad = ((RepActividad_GadDataTable)(this.Tables["RepActividad_Gad"]));
            if ((this.tableRepActividad_Gad != null)) {
                this.tableRepActividad_Gad.InitVars();
            }
            this.tableRepActividad_Aten = ((RepActividad_AtenDataTable)(this.Tables["RepActividad_Aten"]));
            if ((this.tableRepActividad_Aten != null)) {
                this.tableRepActividad_Aten.InitVars();
            }
            this.tableRepActividad_Prom = ((RepActividad_PromDataTable)(this.Tables["RepActividad_Prom"]));
            if ((this.tableRepActividad_Prom != null)) {
                this.tableRepActividad_Prom.InitVars();
            }
            this.tableAtencionesComerciales = ((AtencionesComercialesDataTable)(this.Tables["AtencionesComerciales"]));
            if ((this.tableAtencionesComerciales != null)) {
                this.tableAtencionesComerciales.InitVars();
            }
            this.tableNotasGastos = ((NotasGastosDataTable)(this.Tables["NotasGastos"]));
            if ((this.tableNotasGastos != null)) {
                this.tableNotasGastos.InitVars();
            }
            this.tableNotasGastos_Lin = ((NotasGastos_LinDataTable)(this.Tables["NotasGastos_Lin"]));
            if ((this.tableNotasGastos_Lin != null)) {
                this.tableNotasGastos_Lin.InitVars();
            }
            this.tableAtencionesNotasGastos = ((AtencionesNotasGastosDataTable)(this.Tables["AtencionesNotasGastos"]));
            if ((this.tableAtencionesNotasGastos != null)) {
                this.tableAtencionesNotasGastos.InitVars();
            }
            this.tableBricks = ((BricksDataTable)(this.Tables["Bricks"]));
            if ((this.tableBricks != null)) {
                this.tableBricks.InitVars();
            }
            this.tableDelegados = ((DelegadosDataTable)(this.Tables["Delegados"]));
            if ((this.tableDelegados != null)) {
                this.tableDelegados.InitVars();
            }
            this.tableGastos = ((GastosDataTable)(this.Tables["Gastos"]));
            if ((this.tableGastos != null)) {
                this.tableGastos.InitVars();
            }
            this.tablePeriodosPresupuestos = ((PeriodosPresupuestosDataTable)(this.Tables["PeriodosPresupuestos"]));
            if ((this.tablePeriodosPresupuestos != null)) {
                this.tablePeriodosPresupuestos.InitVars();
            }
            this.tablePresupuestos = ((PresupuestosDataTable)(this.Tables["Presupuestos"]));
            if ((this.tablePresupuestos != null)) {
                this.tablePresupuestos.InitVars();
            }
            this.tableCodigosPostales = ((CodigosPostalesDataTable)(this.Tables["CodigosPostales"]));
            if ((this.tableCodigosPostales != null)) {
                this.tableCodigosPostales.InitVars();
            }
            this.tableBrickCodigoPostal = ((BrickCodigoPostalDataTable)(this.Tables["BrickCodigoPostal"]));
            if ((this.tableBrickCodigoPostal != null)) {
                this.tableBrickCodigoPostal.InitVars();
            }
            this.tableAgendaObserv = ((AgendaObservDataTable)(this.Tables["AgendaObserv"]));
            if ((this.tableAgendaObserv != null)) {
                this.tableAgendaObserv.InitVars();
            }
            this.tableRedesComerciales = ((RedesComercialesDataTable)(this.Tables["RedesComerciales"]));
            if ((this.tableRedesComerciales != null)) {
                this.tableRedesComerciales.InitVars();
            }
            this.tablePoblaciones = ((PoblacionesDataTable)(this.Tables["Poblaciones"]));
            if ((this.tablePoblaciones != null)) {
                this.tablePoblaciones.InitVars();
            }
            this.tableMateriales = ((MaterialesDataTable)(this.Tables["Materiales"]));
            if ((this.tableMateriales != null)) {
                this.tableMateriales.InitVars();
            }
            this.tableDivisiones = ((DivisionesDataTable)(this.Tables["Divisiones"]));
            if ((this.tableDivisiones != null)) {
                this.tableDivisiones.InitVars();
            }
            this.tableProductos = ((ProductosDataTable)(this.Tables["Productos"]));
            if ((this.tableProductos != null)) {
                this.tableProductos.InitVars();
            }
            this.tableAccionesMarketing = ((AccionesMarketingDataTable)(this.Tables["AccionesMarketing"]));
            if ((this.tableAccionesMarketing != null)) {
                this.tableAccionesMarketing.InitVars();
            }
            this.tableAccionesRedes = ((AccionesRedesDataTable)(this.Tables["AccionesRedes"]));
            if ((this.tableAccionesRedes != null)) {
                this.tableAccionesRedes.InitVars();
            }
            this.tableTiposPosPedidosSAP = ((TiposPosPedidosSAPDataTable)(this.Tables["TiposPosPedidosSAP"]));
            if ((this.tableTiposPosPedidosSAP != null)) {
                this.tableTiposPosPedidosSAP.InitVars();
            }
            this.tableTipos = ((TiposDataTable)(this.Tables["Tipos"]));
            if ((this.tableTipos != null)) {
                this.tableTipos.InitVars();
            }
            this.tableLineasTipos = ((LineasTiposDataTable)(this.Tables["LineasTipos"]));
            if ((this.tableLineasTipos != null)) {
                this.tableLineasTipos.InitVars();
            }
            this.tableGetFechasBajada = ((GetFechasBajadaDataTable)(this.Tables["GetFechasBajada"]));
            if ((this.tableGetFechasBajada != null)) {
                this.tableGetFechasBajada.InitVars();
            }
            this.tableErrores = ((ErroresDataTable)(this.Tables["Errores"]));
            if ((this.tableErrores != null)) {
                this.tableErrores.InitVars();
            }
            this.tableGetSincroUpdates = ((GetSincroUpdatesDataTable)(this.Tables["GetSincroUpdates"]));
            if ((this.tableGetSincroUpdates != null)) {
                this.tableGetSincroUpdates.InitVars();
            }
            this.tableTipoCargoDelegado = ((TipoCargoDelegadoDataTable)(this.Tables["TipoCargoDelegado"]));
            if ((this.tableTipoCargoDelegado != null)) {
                this.tableTipoCargoDelegado.InitVars();
            }
            this.tableConfiguracion = ((ConfiguracionDataTable)(this.Tables["Configuracion"]));
            if ((this.tableConfiguracion != null)) {
                this.tableConfiguracion.InitVars();
            }
            this.tableProvincias = ((ProvinciasDataTable)(this.Tables["Provincias"]));
            if ((this.tableProvincias != null)) {
                this.tableProvincias.InitVars();
            }
            this.tableClientesRedes = ((ClientesRedesDataTable)(this.Tables["ClientesRedes"]));
            if ((this.tableClientesRedes != null)) {
                this.tableClientesRedes.InitVars();
            }
            this.tableBrickClientes = ((BrickClientesDataTable)(this.Tables["BrickClientes"]));
            if ((this.tableBrickClientes != null)) {
                this.tableBrickClientes.InitVars();
            }
            this.tableCPClientes = ((CPClientesDataTable)(this.Tables["CPClientes"]));
            if ((this.tableCPClientes != null)) {
                this.tableCPClientes.InitVars();
            }
            this.tableCentrosClientes_COM = ((CentrosClientes_COMDataTable)(this.Tables["CentrosClientes_COM"]));
            if ((this.tableCentrosClientes_COM != null)) {
                this.tableCentrosClientes_COM.InitVars();
            }
            this.tableCentrosRedes = ((CentrosRedesDataTable)(this.Tables["CentrosRedes"]));
            if ((this.tableCentrosRedes != null)) {
                this.tableCentrosRedes.InitVars();
            }
            this.tableDelegadoBrick = ((DelegadoBrickDataTable)(this.Tables["DelegadoBrick"]));
            if ((this.tableDelegadoBrick != null)) {
                this.tableDelegadoBrick.InitVars();
            }
            this.tableContactosClientes_SAP = ((ContactosClientes_SAPDataTable)(this.Tables["ContactosClientes_SAP"]));
            if ((this.tableContactosClientes_SAP != null)) {
                this.tableContactosClientes_SAP.InitVars();
            }
            this.tableCentrosClientes_SAP = ((CentrosClientes_SAPDataTable)(this.Tables["CentrosClientes_SAP"]));
            if ((this.tableCentrosClientes_SAP != null)) {
                this.tableCentrosClientes_SAP.InitVars();
            }
            this.tableInterlocutorClientes_SAP = ((InterlocutorClientes_SAPDataTable)(this.Tables["InterlocutorClientes_SAP"]));
            if ((this.tableInterlocutorClientes_SAP != null)) {
                this.tableInterlocutorClientes_SAP.InitVars();
            }
            this.tableSolicitudGadget = ((SolicitudGadgetDataTable)(this.Tables["SolicitudGadget"]));
            if ((this.tableSolicitudGadget != null)) {
                this.tableSolicitudGadget.InitVars();
            }
            this.tableEspecialidadesDelegado = ((EspecialidadesDelegadoDataTable)(this.Tables["EspecialidadesDelegado"]));
            if ((this.tableEspecialidadesDelegado != null)) {
                this.tableEspecialidadesDelegado.InitVars();
            }
            this.tableEspecialidadesRedes = ((EspecialidadesRedesDataTable)(this.Tables["EspecialidadesRedes"]));
            if ((this.tableEspecialidadesRedes != null)) {
                this.tableEspecialidadesRedes.InitVars();
            }
            this.tablePromocionesRedes = ((PromocionesRedesDataTable)(this.Tables["PromocionesRedes"]));
            if ((this.tablePromocionesRedes != null)) {
                this.tablePromocionesRedes.InitVars();
            }
            this.tableEstructuraComercial = ((EstructuraComercialDataTable)(this.Tables["EstructuraComercial"]));
            if ((this.tableEstructuraComercial != null)) {
                this.tableEstructuraComercial.InitVars();
            }
            this.tableParrilla = ((ParrillaDataTable)(this.Tables["Parrilla"]));
            if ((this.tableParrilla != null)) {
                this.tableParrilla.InitVars();
            }
            this.tableMaterialParrilla = ((MaterialParrillaDataTable)(this.Tables["MaterialParrilla"]));
            if ((this.tableMaterialParrilla != null)) {
                this.tableMaterialParrilla.InitVars();
            }
            this.tableMaterialCamp = ((MaterialCampDataTable)(this.Tables["MaterialCamp"]));
            if ((this.tableMaterialCamp != null)) {
                this.tableMaterialCamp.InitVars();
            }
            this.tableAtencionesProductos = ((AtencionesProductosDataTable)(this.Tables["AtencionesProductos"]));
            if ((this.tableAtencionesProductos != null)) {
                this.tableAtencionesProductos.InitVars();
            }
            this.tableDescuento_Campanyas = ((Descuento_CampanyasDataTable)(this.Tables["Descuento_Campanyas"]));
            if ((this.tableDescuento_Campanyas != null)) {
                this.tableDescuento_Campanyas.InitVars();
            }
            this.relationNotasGastosAtencionesNotasGastos = this.Relations["NotasGastosAtencionesNotasGastos"];
            this.relationNotasGastosNotasGastos_Lin = this.Relations["NotasGastosNotasGastos_Lin"];
            this.relationRepActividad_CabRepActividad_Prom = this.Relations["RepActividad_CabRepActividad_Prom"];
            this.relationRepActividad_CabRepActividad_Aten = this.Relations["RepActividad_CabRepActividad_Aten"];
            this.relationRepActividad_CabRepActividad_Gad = this.Relations["RepActividad_CabRepActividad_Gad"];
            this.relationRepActividad_CabRepActividad_Ped = this.Relations["RepActividad_CabRepActividad_Ped"];
            this.relationRepActividad_CabRepActividadCli_ProxObj = this.Relations["RepActividad_CabRepActividadCli_ProxObj"];
            this.relationRepActividad_CabRepActividad_Cli = this.Relations["RepActividad_CabRepActividad_Cli"];
            this.relationPedidos_CabPedidos_Lin = this.Relations["Pedidos_CabPedidos_Lin"];
        }
        
        private void InitClass() {
            this.DataSetName = "dsCentral";
            this.Prefix = "";
            this.Namespace = "http://STADACRM/dsCentral.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableClientes = new ClientesDataTable();
            this.Tables.Add(this.tableClientes);
            this.tableClientes_COM = new Clientes_COMDataTable();
            this.Tables.Add(this.tableClientes_COM);
            this.tableAficClientes_COM = new AficClientes_COMDataTable();
            this.Tables.Add(this.tableAficClientes_COM);
            this.tableEspecClientes_COM = new EspecClientes_COMDataTable();
            this.Tables.Add(this.tableEspecClientes_COM);
            this.tableProdClientes_COM = new ProdClientes_COMDataTable();
            this.Tables.Add(this.tableProdClientes_COM);
            this.tableAccionesMarkClientes = new AccionesMarkClientesDataTable();
            this.Tables.Add(this.tableAccionesMarkClientes);
            this.tableClientes_SAP = new Clientes_SAPDataTable();
            this.Tables.Add(this.tableClientes_SAP);
            this.tableCentros = new CentrosDataTable();
            this.Tables.Add(this.tableCentros);
            this.tablePedidos_Cab = new Pedidos_CabDataTable();
            this.Tables.Add(this.tablePedidos_Cab);
            this.tablePedidos_Lin = new Pedidos_LinDataTable();
            this.Tables.Add(this.tablePedidos_Lin);
            this.tableRepActividad_Cab = new RepActividad_CabDataTable();
            this.Tables.Add(this.tableRepActividad_Cab);
            this.tableRepActividad_Cli = new RepActividad_CliDataTable();
            this.Tables.Add(this.tableRepActividad_Cli);
            this.tableRepActividadCli_ProxObj = new RepActividadCli_ProxObjDataTable();
            this.Tables.Add(this.tableRepActividadCli_ProxObj);
            this.tableRepActividad_Ped = new RepActividad_PedDataTable();
            this.Tables.Add(this.tableRepActividad_Ped);
            this.tableRepActividad_Gad = new RepActividad_GadDataTable();
            this.Tables.Add(this.tableRepActividad_Gad);
            this.tableRepActividad_Aten = new RepActividad_AtenDataTable();
            this.Tables.Add(this.tableRepActividad_Aten);
            this.tableRepActividad_Prom = new RepActividad_PromDataTable();
            this.Tables.Add(this.tableRepActividad_Prom);
            this.tableAtencionesComerciales = new AtencionesComercialesDataTable();
            this.Tables.Add(this.tableAtencionesComerciales);
            this.tableNotasGastos = new NotasGastosDataTable();
            this.Tables.Add(this.tableNotasGastos);
            this.tableNotasGastos_Lin = new NotasGastos_LinDataTable();
            this.Tables.Add(this.tableNotasGastos_Lin);
            this.tableAtencionesNotasGastos = new AtencionesNotasGastosDataTable();
            this.Tables.Add(this.tableAtencionesNotasGastos);
            this.tableBricks = new BricksDataTable();
            this.Tables.Add(this.tableBricks);
            this.tableDelegados = new DelegadosDataTable();
            this.Tables.Add(this.tableDelegados);
            this.tableGastos = new GastosDataTable();
            this.Tables.Add(this.tableGastos);
            this.tablePeriodosPresupuestos = new PeriodosPresupuestosDataTable();
            this.Tables.Add(this.tablePeriodosPresupuestos);
            this.tablePresupuestos = new PresupuestosDataTable();
            this.Tables.Add(this.tablePresupuestos);
            this.tableCodigosPostales = new CodigosPostalesDataTable();
            this.Tables.Add(this.tableCodigosPostales);
            this.tableBrickCodigoPostal = new BrickCodigoPostalDataTable();
            this.Tables.Add(this.tableBrickCodigoPostal);
            this.tableAgendaObserv = new AgendaObservDataTable();
            this.Tables.Add(this.tableAgendaObserv);
            this.tableRedesComerciales = new RedesComercialesDataTable();
            this.Tables.Add(this.tableRedesComerciales);
            this.tablePoblaciones = new PoblacionesDataTable();
            this.Tables.Add(this.tablePoblaciones);
            this.tableMateriales = new MaterialesDataTable();
            this.Tables.Add(this.tableMateriales);
            this.tableDivisiones = new DivisionesDataTable();
            this.Tables.Add(this.tableDivisiones);
            this.tableProductos = new ProductosDataTable();
            this.Tables.Add(this.tableProductos);
            this.tableAccionesMarketing = new AccionesMarketingDataTable();
            this.Tables.Add(this.tableAccionesMarketing);
            this.tableAccionesRedes = new AccionesRedesDataTable();
            this.Tables.Add(this.tableAccionesRedes);
            this.tableTiposPosPedidosSAP = new TiposPosPedidosSAPDataTable();
            this.Tables.Add(this.tableTiposPosPedidosSAP);
            this.tableTipos = new TiposDataTable();
            this.Tables.Add(this.tableTipos);
            this.tableLineasTipos = new LineasTiposDataTable();
            this.Tables.Add(this.tableLineasTipos);
            this.tableGetFechasBajada = new GetFechasBajadaDataTable();
            this.Tables.Add(this.tableGetFechasBajada);
            this.tableErrores = new ErroresDataTable();
            this.Tables.Add(this.tableErrores);
            this.tableGetSincroUpdates = new GetSincroUpdatesDataTable();
            this.Tables.Add(this.tableGetSincroUpdates);
            this.tableTipoCargoDelegado = new TipoCargoDelegadoDataTable();
            this.Tables.Add(this.tableTipoCargoDelegado);
            this.tableConfiguracion = new ConfiguracionDataTable();
            this.Tables.Add(this.tableConfiguracion);
            this.tableProvincias = new ProvinciasDataTable();
            this.Tables.Add(this.tableProvincias);
            this.tableClientesRedes = new ClientesRedesDataTable();
            this.Tables.Add(this.tableClientesRedes);
            this.tableBrickClientes = new BrickClientesDataTable();
            this.Tables.Add(this.tableBrickClientes);
            this.tableCPClientes = new CPClientesDataTable();
            this.Tables.Add(this.tableCPClientes);
            this.tableCentrosClientes_COM = new CentrosClientes_COMDataTable();
            this.Tables.Add(this.tableCentrosClientes_COM);
            this.tableCentrosRedes = new CentrosRedesDataTable();
            this.Tables.Add(this.tableCentrosRedes);
            this.tableDelegadoBrick = new DelegadoBrickDataTable();
            this.Tables.Add(this.tableDelegadoBrick);
            this.tableContactosClientes_SAP = new ContactosClientes_SAPDataTable();
            this.Tables.Add(this.tableContactosClientes_SAP);
            this.tableCentrosClientes_SAP = new CentrosClientes_SAPDataTable();
            this.Tables.Add(this.tableCentrosClientes_SAP);
            this.tableInterlocutorClientes_SAP = new InterlocutorClientes_SAPDataTable();
            this.Tables.Add(this.tableInterlocutorClientes_SAP);
            this.tableSolicitudGadget = new SolicitudGadgetDataTable();
            this.Tables.Add(this.tableSolicitudGadget);
            this.tableEspecialidadesDelegado = new EspecialidadesDelegadoDataTable();
            this.Tables.Add(this.tableEspecialidadesDelegado);
            this.tableEspecialidadesRedes = new EspecialidadesRedesDataTable();
            this.Tables.Add(this.tableEspecialidadesRedes);
            this.tablePromocionesRedes = new PromocionesRedesDataTable();
            this.Tables.Add(this.tablePromocionesRedes);
            this.tableEstructuraComercial = new EstructuraComercialDataTable();
            this.Tables.Add(this.tableEstructuraComercial);
            this.tableParrilla = new ParrillaDataTable();
            this.Tables.Add(this.tableParrilla);
            this.tableMaterialParrilla = new MaterialParrillaDataTable();
            this.Tables.Add(this.tableMaterialParrilla);
            this.tableMaterialCamp = new MaterialCampDataTable();
            this.Tables.Add(this.tableMaterialCamp);
            this.tableAtencionesProductos = new AtencionesProductosDataTable();
            this.Tables.Add(this.tableAtencionesProductos);
            this.tableDescuento_Campanyas = new Descuento_CampanyasDataTable();
            this.Tables.Add(this.tableDescuento_Campanyas);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("Pedidos_CabPedidos_Lin", new DataColumn[] {
                        this.tablePedidos_Cab.sIdPedidoColumn}, new DataColumn[] {
                        this.tablePedidos_Lin.sIdPedidoColumn});
            this.tablePedidos_Lin.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividad_CabRepActividad_Cli", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Cli.iIdReportColumn});
            this.tableRepActividad_Cli.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividad_CabRepActividadCli_ProxObj", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadCli_ProxObj.iIdReportColumn});
            this.tableRepActividadCli_ProxObj.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividad_CabRepActividad_Ped", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Ped.iIdReportColumn});
            this.tableRepActividad_Ped.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividad_CabRepActividad_Gad", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Gad.iIdReportColumn});
            this.tableRepActividad_Gad.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividad_CabRepActividad_Aten", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Aten.iIdReportColumn});
            this.tableRepActividad_Aten.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividad_CabRepActividad_Prom", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Prom.iIdReportColumn});
            this.tableRepActividad_Prom.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("NotasGastosNotasGastos_Lin", new DataColumn[] {
                        this.tableNotasGastos.iIdNotaColumn}, new DataColumn[] {
                        this.tableNotasGastos_Lin.iIdNotaColumn});
            this.tableNotasGastos_Lin.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("NotasGastosAtencionesNotasGastos", new DataColumn[] {
                        this.tableNotasGastos.iIdNotaColumn}, new DataColumn[] {
                        this.tableAtencionesNotasGastos.iIdNotaColumn});
            this.tableAtencionesNotasGastos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationNotasGastosAtencionesNotasGastos = new DataRelation("NotasGastosAtencionesNotasGastos", new DataColumn[] {
                        this.tableNotasGastos.iIdNotaColumn}, new DataColumn[] {
                        this.tableAtencionesNotasGastos.iIdNotaColumn}, false);
            this.Relations.Add(this.relationNotasGastosAtencionesNotasGastos);
            this.relationNotasGastosNotasGastos_Lin = new DataRelation("NotasGastosNotasGastos_Lin", new DataColumn[] {
                        this.tableNotasGastos.iIdNotaColumn}, new DataColumn[] {
                        this.tableNotasGastos_Lin.iIdNotaColumn}, false);
            this.Relations.Add(this.relationNotasGastosNotasGastos_Lin);
            this.relationRepActividad_CabRepActividad_Prom = new DataRelation("RepActividad_CabRepActividad_Prom", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Prom.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividad_CabRepActividad_Prom);
            this.relationRepActividad_CabRepActividad_Aten = new DataRelation("RepActividad_CabRepActividad_Aten", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Aten.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividad_CabRepActividad_Aten);
            this.relationRepActividad_CabRepActividad_Gad = new DataRelation("RepActividad_CabRepActividad_Gad", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Gad.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividad_CabRepActividad_Gad);
            this.relationRepActividad_CabRepActividad_Ped = new DataRelation("RepActividad_CabRepActividad_Ped", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Ped.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividad_CabRepActividad_Ped);
            this.relationRepActividad_CabRepActividadCli_ProxObj = new DataRelation("RepActividad_CabRepActividadCli_ProxObj", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadCli_ProxObj.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividad_CabRepActividadCli_ProxObj);
            this.relationRepActividad_CabRepActividad_Cli = new DataRelation("RepActividad_CabRepActividad_Cli", new DataColumn[] {
                        this.tableRepActividad_Cab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividad_Cli.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividad_CabRepActividad_Cli);
            this.relationPedidos_CabPedidos_Lin = new DataRelation("Pedidos_CabPedidos_Lin", new DataColumn[] {
                        this.tablePedidos_Cab.sIdPedidoColumn}, new DataColumn[] {
                        this.tablePedidos_Lin.sIdPedidoColumn}, false);
            this.Relations.Add(this.relationPedidos_CabPedidos_Lin);
        }
        
        private bool ShouldSerializeClientes() {
            return false;
        }
        
        private bool ShouldSerializeClientes_COM() {
            return false;
        }
        
        private bool ShouldSerializeAficClientes_COM() {
            return false;
        }
        
        private bool ShouldSerializeEspecClientes_COM() {
            return false;
        }
        
        private bool ShouldSerializeProdClientes_COM() {
            return false;
        }
        
        private bool ShouldSerializeAccionesMarkClientes() {
            return false;
        }
        
        private bool ShouldSerializeClientes_SAP() {
            return false;
        }
        
        private bool ShouldSerializeCentros() {
            return false;
        }
        
        private bool ShouldSerializePedidos_Cab() {
            return false;
        }
        
        private bool ShouldSerializePedidos_Lin() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Cab() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Cli() {
            return false;
        }
        
        private bool ShouldSerializeRepActividadCli_ProxObj() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Ped() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Gad() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Aten() {
            return false;
        }
        
        private bool ShouldSerializeRepActividad_Prom() {
            return false;
        }
        
        private bool ShouldSerializeAtencionesComerciales() {
            return false;
        }
        
        private bool ShouldSerializeNotasGastos() {
            return false;
        }
        
        private bool ShouldSerializeNotasGastos_Lin() {
            return false;
        }
        
        private bool ShouldSerializeAtencionesNotasGastos() {
            return false;
        }
        
        private bool ShouldSerializeBricks() {
            return false;
        }
        
        private bool ShouldSerializeDelegados() {
            return false;
        }
        
        private bool ShouldSerializeGastos() {
            return false;
        }
        
        private bool ShouldSerializePeriodosPresupuestos() {
            return false;
        }
        
        private bool ShouldSerializePresupuestos() {
            return false;
        }
        
        private bool ShouldSerializeCodigosPostales() {
            return false;
        }
        
        private bool ShouldSerializeBrickCodigoPostal() {
            return false;
        }
        
        private bool ShouldSerializeAgendaObserv() {
            return false;
        }
        
        private bool ShouldSerializeRedesComerciales() {
            return false;
        }
        
        private bool ShouldSerializePoblaciones() {
            return false;
        }
        
        private bool ShouldSerializeMateriales() {
            return false;
        }
        
        private bool ShouldSerializeDivisiones() {
            return false;
        }
        
        private bool ShouldSerializeProductos() {
            return false;
        }
        
        private bool ShouldSerializeAccionesMarketing() {
            return false;
        }
        
        private bool ShouldSerializeAccionesRedes() {
            return false;
        }
        
        private bool ShouldSerializeTiposPosPedidosSAP() {
            return false;
        }
        
        private bool ShouldSerializeTipos() {
            return false;
        }
        
        private bool ShouldSerializeLineasTipos() {
            return false;
        }
        
        private bool ShouldSerializeGetFechasBajada() {
            return false;
        }
        
        private bool ShouldSerializeErrores() {
            return false;
        }
        
        private bool ShouldSerializeGetSincroUpdates() {
            return false;
        }
        
        private bool ShouldSerializeTipoCargoDelegado() {
            return false;
        }
        
        private bool ShouldSerializeConfiguracion() {
            return false;
        }
        
        private bool ShouldSerializeProvincias() {
            return false;
        }
        
        private bool ShouldSerializeClientesRedes() {
            return false;
        }
        
        private bool ShouldSerializeBrickClientes() {
            return false;
        }
        
        private bool ShouldSerializeCPClientes() {
            return false;
        }
        
        private bool ShouldSerializeCentrosClientes_COM() {
            return false;
        }
        
        private bool ShouldSerializeCentrosRedes() {
            return false;
        }
        
        private bool ShouldSerializeDelegadoBrick() {
            return false;
        }
        
        private bool ShouldSerializeContactosClientes_SAP() {
            return false;
        }
        
        private bool ShouldSerializeCentrosClientes_SAP() {
            return false;
        }
        
        private bool ShouldSerializeInterlocutorClientes_SAP() {
            return false;
        }
        
        private bool ShouldSerializeSolicitudGadget() {
            return false;
        }
        
        private bool ShouldSerializeEspecialidadesDelegado() {
            return false;
        }
        
        private bool ShouldSerializeEspecialidadesRedes() {
            return false;
        }
        
        private bool ShouldSerializePromocionesRedes() {
            return false;
        }
        
        private bool ShouldSerializeEstructuraComercial() {
            return false;
        }
        
        private bool ShouldSerializeParrilla() {
            return false;
        }
        
        private bool ShouldSerializeMaterialParrilla() {
            return false;
        }
        
        private bool ShouldSerializeMaterialCamp() {
            return false;
        }
        
        private bool ShouldSerializeAtencionesProductos() {
            return false;
        }
        
        private bool ShouldSerializeDescuento_Campanyas() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ClientesRowChangeEventHandler(object sender, ClientesRowChangeEvent e);
        
        public delegate void Clientes_COMRowChangeEventHandler(object sender, Clientes_COMRowChangeEvent e);
        
        public delegate void AficClientes_COMRowChangeEventHandler(object sender, AficClientes_COMRowChangeEvent e);
        
        public delegate void EspecClientes_COMRowChangeEventHandler(object sender, EspecClientes_COMRowChangeEvent e);
        
        public delegate void ProdClientes_COMRowChangeEventHandler(object sender, ProdClientes_COMRowChangeEvent e);
        
        public delegate void AccionesMarkClientesRowChangeEventHandler(object sender, AccionesMarkClientesRowChangeEvent e);
        
        public delegate void Clientes_SAPRowChangeEventHandler(object sender, Clientes_SAPRowChangeEvent e);
        
        public delegate void CentrosRowChangeEventHandler(object sender, CentrosRowChangeEvent e);
        
        public delegate void Pedidos_CabRowChangeEventHandler(object sender, Pedidos_CabRowChangeEvent e);
        
        public delegate void Pedidos_LinRowChangeEventHandler(object sender, Pedidos_LinRowChangeEvent e);
        
        public delegate void RepActividad_CabRowChangeEventHandler(object sender, RepActividad_CabRowChangeEvent e);
        
        public delegate void RepActividad_CliRowChangeEventHandler(object sender, RepActividad_CliRowChangeEvent e);
        
        public delegate void RepActividadCli_ProxObjRowChangeEventHandler(object sender, RepActividadCli_ProxObjRowChangeEvent e);
        
        public delegate void RepActividad_PedRowChangeEventHandler(object sender, RepActividad_PedRowChangeEvent e);
        
        public delegate void RepActividad_GadRowChangeEventHandler(object sender, RepActividad_GadRowChangeEvent e);
        
        public delegate void RepActividad_AtenRowChangeEventHandler(object sender, RepActividad_AtenRowChangeEvent e);
        
        public delegate void RepActividad_PromRowChangeEventHandler(object sender, RepActividad_PromRowChangeEvent e);
        
        public delegate void AtencionesComercialesRowChangeEventHandler(object sender, AtencionesComercialesRowChangeEvent e);
        
        public delegate void NotasGastosRowChangeEventHandler(object sender, NotasGastosRowChangeEvent e);
        
        public delegate void NotasGastos_LinRowChangeEventHandler(object sender, NotasGastos_LinRowChangeEvent e);
        
        public delegate void AtencionesNotasGastosRowChangeEventHandler(object sender, AtencionesNotasGastosRowChangeEvent e);
        
        public delegate void BricksRowChangeEventHandler(object sender, BricksRowChangeEvent e);
        
        public delegate void DelegadosRowChangeEventHandler(object sender, DelegadosRowChangeEvent e);
        
        public delegate void GastosRowChangeEventHandler(object sender, GastosRowChangeEvent e);
        
        public delegate void PeriodosPresupuestosRowChangeEventHandler(object sender, PeriodosPresupuestosRowChangeEvent e);
        
        public delegate void PresupuestosRowChangeEventHandler(object sender, PresupuestosRowChangeEvent e);
        
        public delegate void CodigosPostalesRowChangeEventHandler(object sender, CodigosPostalesRowChangeEvent e);
        
        public delegate void BrickCodigoPostalRowChangeEventHandler(object sender, BrickCodigoPostalRowChangeEvent e);
        
        public delegate void AgendaObservRowChangeEventHandler(object sender, AgendaObservRowChangeEvent e);
        
        public delegate void RedesComercialesRowChangeEventHandler(object sender, RedesComercialesRowChangeEvent e);
        
        public delegate void PoblacionesRowChangeEventHandler(object sender, PoblacionesRowChangeEvent e);
        
        public delegate void MaterialesRowChangeEventHandler(object sender, MaterialesRowChangeEvent e);
        
        public delegate void DivisionesRowChangeEventHandler(object sender, DivisionesRowChangeEvent e);
        
        public delegate void ProductosRowChangeEventHandler(object sender, ProductosRowChangeEvent e);
        
        public delegate void AccionesMarketingRowChangeEventHandler(object sender, AccionesMarketingRowChangeEvent e);
        
        public delegate void AccionesRedesRowChangeEventHandler(object sender, AccionesRedesRowChangeEvent e);
        
        public delegate void TiposPosPedidosSAPRowChangeEventHandler(object sender, TiposPosPedidosSAPRowChangeEvent e);
        
        public delegate void TiposRowChangeEventHandler(object sender, TiposRowChangeEvent e);
        
        public delegate void LineasTiposRowChangeEventHandler(object sender, LineasTiposRowChangeEvent e);
        
        public delegate void GetFechasBajadaRowChangeEventHandler(object sender, GetFechasBajadaRowChangeEvent e);
        
        public delegate void ErroresRowChangeEventHandler(object sender, ErroresRowChangeEvent e);
        
        public delegate void GetSincroUpdatesRowChangeEventHandler(object sender, GetSincroUpdatesRowChangeEvent e);
        
        public delegate void TipoCargoDelegadoRowChangeEventHandler(object sender, TipoCargoDelegadoRowChangeEvent e);
        
        public delegate void ConfiguracionRowChangeEventHandler(object sender, ConfiguracionRowChangeEvent e);
        
        public delegate void ProvinciasRowChangeEventHandler(object sender, ProvinciasRowChangeEvent e);
        
        public delegate void ClientesRedesRowChangeEventHandler(object sender, ClientesRedesRowChangeEvent e);
        
        public delegate void BrickClientesRowChangeEventHandler(object sender, BrickClientesRowChangeEvent e);
        
        public delegate void CPClientesRowChangeEventHandler(object sender, CPClientesRowChangeEvent e);
        
        public delegate void CentrosClientes_COMRowChangeEventHandler(object sender, CentrosClientes_COMRowChangeEvent e);
        
        public delegate void CentrosRedesRowChangeEventHandler(object sender, CentrosRedesRowChangeEvent e);
        
        public delegate void DelegadoBrickRowChangeEventHandler(object sender, DelegadoBrickRowChangeEvent e);
        
        public delegate void ContactosClientes_SAPRowChangeEventHandler(object sender, ContactosClientes_SAPRowChangeEvent e);
        
        public delegate void CentrosClientes_SAPRowChangeEventHandler(object sender, CentrosClientes_SAPRowChangeEvent e);
        
        public delegate void InterlocutorClientes_SAPRowChangeEventHandler(object sender, InterlocutorClientes_SAPRowChangeEvent e);
        
        public delegate void SolicitudGadgetRowChangeEventHandler(object sender, SolicitudGadgetRowChangeEvent e);
        
        public delegate void EspecialidadesDelegadoRowChangeEventHandler(object sender, EspecialidadesDelegadoRowChangeEvent e);
        
        public delegate void EspecialidadesRedesRowChangeEventHandler(object sender, EspecialidadesRedesRowChangeEvent e);
        
        public delegate void PromocionesRedesRowChangeEventHandler(object sender, PromocionesRedesRowChangeEvent e);
        
        public delegate void EstructuraComercialRowChangeEventHandler(object sender, EstructuraComercialRowChangeEvent e);
        
        public delegate void ParrillaRowChangeEventHandler(object sender, ParrillaRowChangeEvent e);
        
        public delegate void MaterialParrillaRowChangeEventHandler(object sender, MaterialParrillaRowChangeEvent e);
        
        public delegate void MaterialCampRowChangeEventHandler(object sender, MaterialCampRowChangeEvent e);
        
        public delegate void AtencionesProductosRowChangeEventHandler(object sender, AtencionesProductosRowChangeEvent e);
        
        public delegate void Descuento_CampanyasRowChangeEventHandler(object sender, Descuento_CampanyasRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdCliente;
            
            private DataColumn columnsTipoCliente;
            
            private DataColumn columnsIdClienteTemp;
            
            private DataColumn columnsNombre;
            
            private DataColumn columnsApellidos1;
            
            private DataColumn columnsApellidos2;
            
            private DataColumn columnsTelefono;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal ClientesDataTable() : 
                    base("Clientes") {
                this.InitClass();
            }
            
            internal ClientesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdClienteColumn {
                get {
                    return this.columnsIdCliente;
                }
            }
            
            internal DataColumn sTipoClienteColumn {
                get {
                    return this.columnsTipoCliente;
                }
            }
            
            internal DataColumn sIdClienteTempColumn {
                get {
                    return this.columnsIdClienteTemp;
                }
            }
            
            internal DataColumn sNombreColumn {
                get {
                    return this.columnsNombre;
                }
            }
            
            internal DataColumn sApellidos1Column {
                get {
                    return this.columnsApellidos1;
                }
            }
            
            internal DataColumn sApellidos2Column {
                get {
                    return this.columnsApellidos2;
                }
            }
            
            internal DataColumn sTelefonoColumn {
                get {
                    return this.columnsTelefono;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public ClientesRow this[int index] {
                get {
                    return ((ClientesRow)(this.Rows[index]));
                }
            }
            
            public event ClientesRowChangeEventHandler ClientesRowChanged;
            
            public event ClientesRowChangeEventHandler ClientesRowChanging;
            
            public event ClientesRowChangeEventHandler ClientesRowDeleted;
            
            public event ClientesRowChangeEventHandler ClientesRowDeleting;
            
            public void AddClientesRow(ClientesRow row) {
                this.Rows.Add(row);
            }
            
            public ClientesRow AddClientesRow(string sIdCliente, string sTipoCliente, string sIdClienteTemp, string sNombre, string sApellidos1, string sApellidos2, string sTelefono, short iEstado, System.DateTime dFUM) {
                ClientesRow rowClientesRow = ((ClientesRow)(this.NewRow()));
                rowClientesRow.ItemArray = new object[] {
                        null,
                        sIdCliente,
                        sTipoCliente,
                        sIdClienteTemp,
                        sNombre,
                        sApellidos1,
                        sApellidos2,
                        sTelefono,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowClientesRow);
                return rowClientesRow;
            }
            
            public ClientesRow FindByiIdCliente(int iIdCliente) {
                return ((ClientesRow)(this.Rows.Find(new object[] {
                            iIdCliente})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ClientesDataTable cln = ((ClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ClientesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdCliente = this.Columns["sIdCliente"];
                this.columnsTipoCliente = this.Columns["sTipoCliente"];
                this.columnsIdClienteTemp = this.Columns["sIdClienteTemp"];
                this.columnsNombre = this.Columns["sNombre"];
                this.columnsApellidos1 = this.Columns["sApellidos1"];
                this.columnsApellidos2 = this.Columns["sApellidos2"];
                this.columnsTelefono = this.Columns["sTelefono"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdCliente = new DataColumn("sIdCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCliente);
                this.columnsTipoCliente = new DataColumn("sTipoCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoCliente);
                this.columnsIdClienteTemp = new DataColumn("sIdClienteTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdClienteTemp);
                this.columnsNombre = new DataColumn("sNombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombre);
                this.columnsApellidos1 = new DataColumn("sApellidos1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsApellidos1);
                this.columnsApellidos2 = new DataColumn("sApellidos2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsApellidos2);
                this.columnsTelefono = new DataColumn("sTelefono", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTelefono);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey1", new DataColumn[] {
                                this.columniIdCliente}, true));
                this.columniIdCliente.AutoIncrement = true;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCliente.ReadOnly = true;
                this.columniIdCliente.Unique = true;
                this.columnsIdCliente.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public ClientesRow NewClientesRow() {
                return ((ClientesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ClientesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ClientesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientesRowChanged != null)) {
                    this.ClientesRowChanged(this, new ClientesRowChangeEvent(((ClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientesRowChanging != null)) {
                    this.ClientesRowChanging(this, new ClientesRowChangeEvent(((ClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientesRowDeleted != null)) {
                    this.ClientesRowDeleted(this, new ClientesRowChangeEvent(((ClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientesRowDeleting != null)) {
                    this.ClientesRowDeleting(this, new ClientesRowChangeEvent(((ClientesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveClientesRow(ClientesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRow : DataRow {
            
            private ClientesDataTable tableClientes;
            
            internal ClientesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientes = ((ClientesDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableClientes.iIdClienteColumn]));
                }
                set {
                    this[this.tableClientes.iIdClienteColumn] = value;
                }
            }
            
            public string sIdCliente {
                get {
                    return ((string)(this[this.tableClientes.sIdClienteColumn]));
                }
                set {
                    this[this.tableClientes.sIdClienteColumn] = value;
                }
            }
            
            public string sTipoCliente {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sTipoClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sTipoClienteColumn] = value;
                }
            }
            
            public string sIdClienteTemp {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sIdClienteTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sIdClienteTempColumn] = value;
                }
            }
            
            public string sNombre {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sNombreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sNombreColumn] = value;
                }
            }
            
            public string sApellidos1 {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sApellidos1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sApellidos1Column] = value;
                }
            }
            
            public string sApellidos2 {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sApellidos2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sApellidos2Column] = value;
                }
            }
            
            public string sTelefono {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sTelefonoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sTelefonoColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableClientes.iEstadoColumn]));
                }
                set {
                    this[this.tableClientes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableClientes.dFUMColumn]));
                }
                set {
                    this[this.tableClientes.dFUMColumn] = value;
                }
            }
            
            public bool IssTipoClienteNull() {
                return this.IsNull(this.tableClientes.sTipoClienteColumn);
            }
            
            public void SetsTipoClienteNull() {
                this[this.tableClientes.sTipoClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdClienteTempNull() {
                return this.IsNull(this.tableClientes.sIdClienteTempColumn);
            }
            
            public void SetsIdClienteTempNull() {
                this[this.tableClientes.sIdClienteTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssNombreNull() {
                return this.IsNull(this.tableClientes.sNombreColumn);
            }
            
            public void SetsNombreNull() {
                this[this.tableClientes.sNombreColumn] = System.Convert.DBNull;
            }
            
            public bool IssApellidos1Null() {
                return this.IsNull(this.tableClientes.sApellidos1Column);
            }
            
            public void SetsApellidos1Null() {
                this[this.tableClientes.sApellidos1Column] = System.Convert.DBNull;
            }
            
            public bool IssApellidos2Null() {
                return this.IsNull(this.tableClientes.sApellidos2Column);
            }
            
            public void SetsApellidos2Null() {
                this[this.tableClientes.sApellidos2Column] = System.Convert.DBNull;
            }
            
            public bool IssTelefonoNull() {
                return this.IsNull(this.tableClientes.sTelefonoColumn);
            }
            
            public void SetsTelefonoNull() {
                this[this.tableClientes.sTelefonoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRowChangeEvent : EventArgs {
            
            private ClientesRow eventRow;
            
            private DataRowAction eventAction;
            
            public ClientesRowChangeEvent(ClientesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Clientes_COMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsTipoCliente_COM;
            
            private DataColumn columnsNumColegiado;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnsEMail;
            
            private DataColumn columnsFax;
            
            private DataColumn columnsTelMovil;
            
            private DataColumn columnsDireccion;
            
            private DataColumn columniIdPoblacion;
            
            private DataColumn columndFecNacimiento;
            
            private DataColumn columndFecAniversario;
            
            private DataColumn columnsNIF;
            
            private DataColumn columnbAsignado;
            
            private DataColumn columnbOcasional;
            
            private DataColumn columndFUM;
            
            internal Clientes_COMDataTable() : 
                    base("Clientes_COM") {
                this.InitClass();
            }
            
            internal Clientes_COMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sTipoCliente_COMColumn {
                get {
                    return this.columnsTipoCliente_COM;
                }
            }
            
            internal DataColumn sNumColegiadoColumn {
                get {
                    return this.columnsNumColegiado;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn sEMailColumn {
                get {
                    return this.columnsEMail;
                }
            }
            
            internal DataColumn sFaxColumn {
                get {
                    return this.columnsFax;
                }
            }
            
            internal DataColumn sTelMovilColumn {
                get {
                    return this.columnsTelMovil;
                }
            }
            
            internal DataColumn sDireccionColumn {
                get {
                    return this.columnsDireccion;
                }
            }
            
            internal DataColumn iIdPoblacionColumn {
                get {
                    return this.columniIdPoblacion;
                }
            }
            
            internal DataColumn dFecNacimientoColumn {
                get {
                    return this.columndFecNacimiento;
                }
            }
            
            internal DataColumn dFecAniversarioColumn {
                get {
                    return this.columndFecAniversario;
                }
            }
            
            internal DataColumn sNIFColumn {
                get {
                    return this.columnsNIF;
                }
            }
            
            internal DataColumn bAsignadoColumn {
                get {
                    return this.columnbAsignado;
                }
            }
            
            internal DataColumn bOcasionalColumn {
                get {
                    return this.columnbOcasional;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public Clientes_COMRow this[int index] {
                get {
                    return ((Clientes_COMRow)(this.Rows[index]));
                }
            }
            
            public event Clientes_COMRowChangeEventHandler Clientes_COMRowChanged;
            
            public event Clientes_COMRowChangeEventHandler Clientes_COMRowChanging;
            
            public event Clientes_COMRowChangeEventHandler Clientes_COMRowDeleted;
            
            public event Clientes_COMRowChangeEventHandler Clientes_COMRowDeleting;
            
            public void AddClientes_COMRow(Clientes_COMRow row) {
                this.Rows.Add(row);
            }
            
            public Clientes_COMRow AddClientes_COMRow(int iIdCliente, string sTipoCliente_COM, string sNumColegiado, string tObservaciones, string sEMail, string sFax, string sTelMovil, string sDireccion, int iIdPoblacion, System.DateTime dFecNacimiento, System.DateTime dFecAniversario, string sNIF, bool bAsignado, bool bOcasional, System.DateTime dFUM) {
                Clientes_COMRow rowClientes_COMRow = ((Clientes_COMRow)(this.NewRow()));
                rowClientes_COMRow.ItemArray = new object[] {
                        iIdCliente,
                        sTipoCliente_COM,
                        sNumColegiado,
                        tObservaciones,
                        sEMail,
                        sFax,
                        sTelMovil,
                        sDireccion,
                        iIdPoblacion,
                        dFecNacimiento,
                        dFecAniversario,
                        sNIF,
                        bAsignado,
                        bOcasional,
                        dFUM};
                this.Rows.Add(rowClientes_COMRow);
                return rowClientes_COMRow;
            }
            
            public Clientes_COMRow FindByiIdCliente(int iIdCliente) {
                return ((Clientes_COMRow)(this.Rows.Find(new object[] {
                            iIdCliente})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Clientes_COMDataTable cln = ((Clientes_COMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Clientes_COMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsTipoCliente_COM = this.Columns["sTipoCliente_COM"];
                this.columnsNumColegiado = this.Columns["sNumColegiado"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnsEMail = this.Columns["sEMail"];
                this.columnsFax = this.Columns["sFax"];
                this.columnsTelMovil = this.Columns["sTelMovil"];
                this.columnsDireccion = this.Columns["sDireccion"];
                this.columniIdPoblacion = this.Columns["iIdPoblacion"];
                this.columndFecNacimiento = this.Columns["dFecNacimiento"];
                this.columndFecAniversario = this.Columns["dFecAniversario"];
                this.columnsNIF = this.Columns["sNIF"];
                this.columnbAsignado = this.Columns["bAsignado"];
                this.columnbOcasional = this.Columns["bOcasional"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsTipoCliente_COM = new DataColumn("sTipoCliente_COM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoCliente_COM);
                this.columnsNumColegiado = new DataColumn("sNumColegiado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNumColegiado);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnsEMail = new DataColumn("sEMail", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsEMail);
                this.columnsFax = new DataColumn("sFax", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsFax);
                this.columnsTelMovil = new DataColumn("sTelMovil", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTelMovil);
                this.columnsDireccion = new DataColumn("sDireccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDireccion);
                this.columniIdPoblacion = new DataColumn("iIdPoblacion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdPoblacion);
                this.columndFecNacimiento = new DataColumn("dFecNacimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecNacimiento);
                this.columndFecAniversario = new DataColumn("dFecAniversario", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecAniversario);
                this.columnsNIF = new DataColumn("sNIF", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNIF);
                this.columnbAsignado = new DataColumn("bAsignado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbAsignado);
                this.columnbOcasional = new DataColumn("bOcasional", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbOcasional);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey3", new DataColumn[] {
                                this.columniIdCliente}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCliente.Unique = true;
                this.columnbAsignado.AllowDBNull = false;
                this.columnbOcasional.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public Clientes_COMRow NewClientes_COMRow() {
                return ((Clientes_COMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Clientes_COMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Clientes_COMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Clientes_COMRowChanged != null)) {
                    this.Clientes_COMRowChanged(this, new Clientes_COMRowChangeEvent(((Clientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Clientes_COMRowChanging != null)) {
                    this.Clientes_COMRowChanging(this, new Clientes_COMRowChangeEvent(((Clientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Clientes_COMRowDeleted != null)) {
                    this.Clientes_COMRowDeleted(this, new Clientes_COMRowChangeEvent(((Clientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Clientes_COMRowDeleting != null)) {
                    this.Clientes_COMRowDeleting(this, new Clientes_COMRowChangeEvent(((Clientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveClientes_COMRow(Clientes_COMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Clientes_COMRow : DataRow {
            
            private Clientes_COMDataTable tableClientes_COM;
            
            internal Clientes_COMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientes_COM = ((Clientes_COMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableClientes_COM.iIdClienteColumn]));
                }
                set {
                    this[this.tableClientes_COM.iIdClienteColumn] = value;
                }
            }
            
            public string sTipoCliente_COM {
                get {
                    try {
                        return ((string)(this[this.tableClientes_COM.sTipoCliente_COMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.sTipoCliente_COMColumn] = value;
                }
            }
            
            public string sNumColegiado {
                get {
                    try {
                        return ((string)(this[this.tableClientes_COM.sNumColegiadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.sNumColegiadoColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableClientes_COM.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.tObservacionesColumn] = value;
                }
            }
            
            public string sEMail {
                get {
                    try {
                        return ((string)(this[this.tableClientes_COM.sEMailColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.sEMailColumn] = value;
                }
            }
            
            public string sFax {
                get {
                    try {
                        return ((string)(this[this.tableClientes_COM.sFaxColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.sFaxColumn] = value;
                }
            }
            
            public string sTelMovil {
                get {
                    try {
                        return ((string)(this[this.tableClientes_COM.sTelMovilColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.sTelMovilColumn] = value;
                }
            }
            
            public string sDireccion {
                get {
                    try {
                        return ((string)(this[this.tableClientes_COM.sDireccionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.sDireccionColumn] = value;
                }
            }
            
            public int iIdPoblacion {
                get {
                    try {
                        return ((int)(this[this.tableClientes_COM.iIdPoblacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.iIdPoblacionColumn] = value;
                }
            }
            
            public System.DateTime dFecNacimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableClientes_COM.dFecNacimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.dFecNacimientoColumn] = value;
                }
            }
            
            public System.DateTime dFecAniversario {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableClientes_COM.dFecAniversarioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.dFecAniversarioColumn] = value;
                }
            }
            
            public string sNIF {
                get {
                    try {
                        return ((string)(this[this.tableClientes_COM.sNIFColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_COM.sNIFColumn] = value;
                }
            }
            
            public bool bAsignado {
                get {
                    return ((bool)(this[this.tableClientes_COM.bAsignadoColumn]));
                }
                set {
                    this[this.tableClientes_COM.bAsignadoColumn] = value;
                }
            }
            
            public bool bOcasional {
                get {
                    return ((bool)(this[this.tableClientes_COM.bOcasionalColumn]));
                }
                set {
                    this[this.tableClientes_COM.bOcasionalColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableClientes_COM.dFUMColumn]));
                }
                set {
                    this[this.tableClientes_COM.dFUMColumn] = value;
                }
            }
            
            public bool IssTipoCliente_COMNull() {
                return this.IsNull(this.tableClientes_COM.sTipoCliente_COMColumn);
            }
            
            public void SetsTipoCliente_COMNull() {
                this[this.tableClientes_COM.sTipoCliente_COMColumn] = System.Convert.DBNull;
            }
            
            public bool IssNumColegiadoNull() {
                return this.IsNull(this.tableClientes_COM.sNumColegiadoColumn);
            }
            
            public void SetsNumColegiadoNull() {
                this[this.tableClientes_COM.sNumColegiadoColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableClientes_COM.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableClientes_COM.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IssEMailNull() {
                return this.IsNull(this.tableClientes_COM.sEMailColumn);
            }
            
            public void SetsEMailNull() {
                this[this.tableClientes_COM.sEMailColumn] = System.Convert.DBNull;
            }
            
            public bool IssFaxNull() {
                return this.IsNull(this.tableClientes_COM.sFaxColumn);
            }
            
            public void SetsFaxNull() {
                this[this.tableClientes_COM.sFaxColumn] = System.Convert.DBNull;
            }
            
            public bool IssTelMovilNull() {
                return this.IsNull(this.tableClientes_COM.sTelMovilColumn);
            }
            
            public void SetsTelMovilNull() {
                this[this.tableClientes_COM.sTelMovilColumn] = System.Convert.DBNull;
            }
            
            public bool IssDireccionNull() {
                return this.IsNull(this.tableClientes_COM.sDireccionColumn);
            }
            
            public void SetsDireccionNull() {
                this[this.tableClientes_COM.sDireccionColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdPoblacionNull() {
                return this.IsNull(this.tableClientes_COM.iIdPoblacionColumn);
            }
            
            public void SetiIdPoblacionNull() {
                this[this.tableClientes_COM.iIdPoblacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFecNacimientoNull() {
                return this.IsNull(this.tableClientes_COM.dFecNacimientoColumn);
            }
            
            public void SetdFecNacimientoNull() {
                this[this.tableClientes_COM.dFecNacimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFecAniversarioNull() {
                return this.IsNull(this.tableClientes_COM.dFecAniversarioColumn);
            }
            
            public void SetdFecAniversarioNull() {
                this[this.tableClientes_COM.dFecAniversarioColumn] = System.Convert.DBNull;
            }
            
            public bool IssNIFNull() {
                return this.IsNull(this.tableClientes_COM.sNIFColumn);
            }
            
            public void SetsNIFNull() {
                this[this.tableClientes_COM.sNIFColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Clientes_COMRowChangeEvent : EventArgs {
            
            private Clientes_COMRow eventRow;
            
            private DataRowAction eventAction;
            
            public Clientes_COMRowChangeEvent(Clientes_COMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Clientes_COMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AficClientes_COMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdAficion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal AficClientes_COMDataTable() : 
                    base("AficClientes_COM") {
                this.InitClass();
            }
            
            internal AficClientes_COMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdAficionColumn {
                get {
                    return this.columnsIdAficion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public AficClientes_COMRow this[int index] {
                get {
                    return ((AficClientes_COMRow)(this.Rows[index]));
                }
            }
            
            public event AficClientes_COMRowChangeEventHandler AficClientes_COMRowChanged;
            
            public event AficClientes_COMRowChangeEventHandler AficClientes_COMRowChanging;
            
            public event AficClientes_COMRowChangeEventHandler AficClientes_COMRowDeleted;
            
            public event AficClientes_COMRowChangeEventHandler AficClientes_COMRowDeleting;
            
            public void AddAficClientes_COMRow(AficClientes_COMRow row) {
                this.Rows.Add(row);
            }
            
            public AficClientes_COMRow AddAficClientes_COMRow(int iIdCliente, string sIdAficion, System.DateTime dFUM, short iEstado) {
                AficClientes_COMRow rowAficClientes_COMRow = ((AficClientes_COMRow)(this.NewRow()));
                rowAficClientes_COMRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdAficion,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowAficClientes_COMRow);
                return rowAficClientes_COMRow;
            }
            
            public AficClientes_COMRow FindByiIdClientesIdAficion(int iIdCliente, string sIdAficion) {
                return ((AficClientes_COMRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdAficion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AficClientes_COMDataTable cln = ((AficClientes_COMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AficClientes_COMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdAficion = this.Columns["sIdAficion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdAficion = new DataColumn("sIdAficion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAficion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey5", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdAficion}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdAficion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public AficClientes_COMRow NewAficClientes_COMRow() {
                return ((AficClientes_COMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AficClientes_COMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AficClientes_COMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AficClientes_COMRowChanged != null)) {
                    this.AficClientes_COMRowChanged(this, new AficClientes_COMRowChangeEvent(((AficClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AficClientes_COMRowChanging != null)) {
                    this.AficClientes_COMRowChanging(this, new AficClientes_COMRowChangeEvent(((AficClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AficClientes_COMRowDeleted != null)) {
                    this.AficClientes_COMRowDeleted(this, new AficClientes_COMRowChangeEvent(((AficClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AficClientes_COMRowDeleting != null)) {
                    this.AficClientes_COMRowDeleting(this, new AficClientes_COMRowChangeEvent(((AficClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAficClientes_COMRow(AficClientes_COMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AficClientes_COMRow : DataRow {
            
            private AficClientes_COMDataTable tableAficClientes_COM;
            
            internal AficClientes_COMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAficClientes_COM = ((AficClientes_COMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableAficClientes_COM.iIdClienteColumn]));
                }
                set {
                    this[this.tableAficClientes_COM.iIdClienteColumn] = value;
                }
            }
            
            public string sIdAficion {
                get {
                    return ((string)(this[this.tableAficClientes_COM.sIdAficionColumn]));
                }
                set {
                    this[this.tableAficClientes_COM.sIdAficionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableAficClientes_COM.dFUMColumn]));
                }
                set {
                    this[this.tableAficClientes_COM.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableAficClientes_COM.iEstadoColumn]));
                }
                set {
                    this[this.tableAficClientes_COM.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AficClientes_COMRowChangeEvent : EventArgs {
            
            private AficClientes_COMRow eventRow;
            
            private DataRowAction eventAction;
            
            public AficClientes_COMRowChangeEvent(AficClientes_COMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AficClientes_COMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecClientes_COMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdEspecialidad;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal EspecClientes_COMDataTable() : 
                    base("EspecClientes_COM") {
                this.InitClass();
            }
            
            internal EspecClientes_COMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdEspecialidadColumn {
                get {
                    return this.columnsIdEspecialidad;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public EspecClientes_COMRow this[int index] {
                get {
                    return ((EspecClientes_COMRow)(this.Rows[index]));
                }
            }
            
            public event EspecClientes_COMRowChangeEventHandler EspecClientes_COMRowChanged;
            
            public event EspecClientes_COMRowChangeEventHandler EspecClientes_COMRowChanging;
            
            public event EspecClientes_COMRowChangeEventHandler EspecClientes_COMRowDeleted;
            
            public event EspecClientes_COMRowChangeEventHandler EspecClientes_COMRowDeleting;
            
            public void AddEspecClientes_COMRow(EspecClientes_COMRow row) {
                this.Rows.Add(row);
            }
            
            public EspecClientes_COMRow AddEspecClientes_COMRow(int iIdCliente, string sIdEspecialidad, System.DateTime dFUM, short iEstado) {
                EspecClientes_COMRow rowEspecClientes_COMRow = ((EspecClientes_COMRow)(this.NewRow()));
                rowEspecClientes_COMRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdEspecialidad,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowEspecClientes_COMRow);
                return rowEspecClientes_COMRow;
            }
            
            public EspecClientes_COMRow FindByiIdClientesIdEspecialidad(int iIdCliente, string sIdEspecialidad) {
                return ((EspecClientes_COMRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdEspecialidad})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EspecClientes_COMDataTable cln = ((EspecClientes_COMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EspecClientes_COMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdEspecialidad = this.Columns["sIdEspecialidad"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdEspecialidad = new DataColumn("sIdEspecialidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEspecialidad);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey6", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdEspecialidad}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdEspecialidad.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public EspecClientes_COMRow NewEspecClientes_COMRow() {
                return ((EspecClientes_COMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EspecClientes_COMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EspecClientes_COMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EspecClientes_COMRowChanged != null)) {
                    this.EspecClientes_COMRowChanged(this, new EspecClientes_COMRowChangeEvent(((EspecClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EspecClientes_COMRowChanging != null)) {
                    this.EspecClientes_COMRowChanging(this, new EspecClientes_COMRowChangeEvent(((EspecClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EspecClientes_COMRowDeleted != null)) {
                    this.EspecClientes_COMRowDeleted(this, new EspecClientes_COMRowChangeEvent(((EspecClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EspecClientes_COMRowDeleting != null)) {
                    this.EspecClientes_COMRowDeleting(this, new EspecClientes_COMRowChangeEvent(((EspecClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEspecClientes_COMRow(EspecClientes_COMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecClientes_COMRow : DataRow {
            
            private EspecClientes_COMDataTable tableEspecClientes_COM;
            
            internal EspecClientes_COMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEspecClientes_COM = ((EspecClientes_COMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableEspecClientes_COM.iIdClienteColumn]));
                }
                set {
                    this[this.tableEspecClientes_COM.iIdClienteColumn] = value;
                }
            }
            
            public string sIdEspecialidad {
                get {
                    return ((string)(this[this.tableEspecClientes_COM.sIdEspecialidadColumn]));
                }
                set {
                    this[this.tableEspecClientes_COM.sIdEspecialidadColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableEspecClientes_COM.dFUMColumn]));
                }
                set {
                    this[this.tableEspecClientes_COM.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableEspecClientes_COM.iEstadoColumn]));
                }
                set {
                    this[this.tableEspecClientes_COM.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecClientes_COMRowChangeEvent : EventArgs {
            
            private EspecClientes_COMRow eventRow;
            
            private DataRowAction eventAction;
            
            public EspecClientes_COMRowChangeEvent(EspecClientes_COMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EspecClientes_COMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProdClientes_COMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columniPrioridad;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal ProdClientes_COMDataTable() : 
                    base("ProdClientes_COM") {
                this.InitClass();
            }
            
            internal ProdClientes_COMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn iPrioridadColumn {
                get {
                    return this.columniPrioridad;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public ProdClientes_COMRow this[int index] {
                get {
                    return ((ProdClientes_COMRow)(this.Rows[index]));
                }
            }
            
            public event ProdClientes_COMRowChangeEventHandler ProdClientes_COMRowChanged;
            
            public event ProdClientes_COMRowChangeEventHandler ProdClientes_COMRowChanging;
            
            public event ProdClientes_COMRowChangeEventHandler ProdClientes_COMRowDeleted;
            
            public event ProdClientes_COMRowChangeEventHandler ProdClientes_COMRowDeleting;
            
            public void AddProdClientes_COMRow(ProdClientes_COMRow row) {
                this.Rows.Add(row);
            }
            
            public ProdClientes_COMRow AddProdClientes_COMRow(int iIdCliente, string sIdProducto, short iPrioridad, System.DateTime dFUM, short iEstado) {
                ProdClientes_COMRow rowProdClientes_COMRow = ((ProdClientes_COMRow)(this.NewRow()));
                rowProdClientes_COMRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdProducto,
                        iPrioridad,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowProdClientes_COMRow);
                return rowProdClientes_COMRow;
            }
            
            public ProdClientes_COMRow FindByiIdClientesIdProducto(int iIdCliente, string sIdProducto) {
                return ((ProdClientes_COMRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdProducto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ProdClientes_COMDataTable cln = ((ProdClientes_COMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ProdClientes_COMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columniPrioridad = this.Columns["iPrioridad"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columniPrioridad = new DataColumn("iPrioridad", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniPrioridad);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey7", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdProducto}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdProducto.AllowDBNull = false;
                this.columniPrioridad.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public ProdClientes_COMRow NewProdClientes_COMRow() {
                return ((ProdClientes_COMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ProdClientes_COMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ProdClientes_COMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProdClientes_COMRowChanged != null)) {
                    this.ProdClientes_COMRowChanged(this, new ProdClientes_COMRowChangeEvent(((ProdClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProdClientes_COMRowChanging != null)) {
                    this.ProdClientes_COMRowChanging(this, new ProdClientes_COMRowChangeEvent(((ProdClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProdClientes_COMRowDeleted != null)) {
                    this.ProdClientes_COMRowDeleted(this, new ProdClientes_COMRowChangeEvent(((ProdClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProdClientes_COMRowDeleting != null)) {
                    this.ProdClientes_COMRowDeleting(this, new ProdClientes_COMRowChangeEvent(((ProdClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveProdClientes_COMRow(ProdClientes_COMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProdClientes_COMRow : DataRow {
            
            private ProdClientes_COMDataTable tableProdClientes_COM;
            
            internal ProdClientes_COMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableProdClientes_COM = ((ProdClientes_COMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableProdClientes_COM.iIdClienteColumn]));
                }
                set {
                    this[this.tableProdClientes_COM.iIdClienteColumn] = value;
                }
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tableProdClientes_COM.sIdProductoColumn]));
                }
                set {
                    this[this.tableProdClientes_COM.sIdProductoColumn] = value;
                }
            }
            
            public short iPrioridad {
                get {
                    return ((short)(this[this.tableProdClientes_COM.iPrioridadColumn]));
                }
                set {
                    this[this.tableProdClientes_COM.iPrioridadColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableProdClientes_COM.dFUMColumn]));
                }
                set {
                    this[this.tableProdClientes_COM.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableProdClientes_COM.iEstadoColumn]));
                }
                set {
                    this[this.tableProdClientes_COM.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProdClientes_COMRowChangeEvent : EventArgs {
            
            private ProdClientes_COMRow eventRow;
            
            private DataRowAction eventAction;
            
            public ProdClientes_COMRowChangeEvent(ProdClientes_COMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ProdClientes_COMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarkClientesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdAccion;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columndFechaEntrega;
            
            private DataColumn columnfCantidad;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnsCCoste;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            private DataColumn columniIdDelegado;
            
            internal AccionesMarkClientesDataTable() : 
                    base("AccionesMarkClientes") {
                this.InitClass();
            }
            
            internal AccionesMarkClientesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdAccionColumn {
                get {
                    return this.columniIdAccion;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn dFechaEntregaColumn {
                get {
                    return this.columndFechaEntrega;
                }
            }
            
            internal DataColumn fCantidadColumn {
                get {
                    return this.columnfCantidad;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn sCCosteColumn {
                get {
                    return this.columnsCCoste;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            public AccionesMarkClientesRow this[int index] {
                get {
                    return ((AccionesMarkClientesRow)(this.Rows[index]));
                }
            }
            
            public event AccionesMarkClientesRowChangeEventHandler AccionesMarkClientesRowChanged;
            
            public event AccionesMarkClientesRowChangeEventHandler AccionesMarkClientesRowChanging;
            
            public event AccionesMarkClientesRowChangeEventHandler AccionesMarkClientesRowDeleted;
            
            public event AccionesMarkClientesRowChangeEventHandler AccionesMarkClientesRowDeleting;
            
            public void AddAccionesMarkClientesRow(AccionesMarkClientesRow row) {
                this.Rows.Add(row);
            }
            
            public AccionesMarkClientesRow AddAccionesMarkClientesRow(int iIdAccion, int iIdCliente, System.DateTime dFechaEntrega, System.Double fCantidad, string tObservaciones, string sCCoste, System.DateTime dFUM, short iEstado, int iIdDelegado) {
                AccionesMarkClientesRow rowAccionesMarkClientesRow = ((AccionesMarkClientesRow)(this.NewRow()));
                rowAccionesMarkClientesRow.ItemArray = new object[] {
                        iIdAccion,
                        iIdCliente,
                        dFechaEntrega,
                        fCantidad,
                        tObservaciones,
                        sCCoste,
                        dFUM,
                        iEstado,
                        iIdDelegado};
                this.Rows.Add(rowAccionesMarkClientesRow);
                return rowAccionesMarkClientesRow;
            }
            
            public AccionesMarkClientesRow FindByiIdAccioniIdClientedFechaEntrega(int iIdAccion, int iIdCliente, System.DateTime dFechaEntrega) {
                return ((AccionesMarkClientesRow)(this.Rows.Find(new object[] {
                            iIdAccion,
                            iIdCliente,
                            dFechaEntrega})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AccionesMarkClientesDataTable cln = ((AccionesMarkClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AccionesMarkClientesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdAccion = this.Columns["iIdAccion"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columndFechaEntrega = this.Columns["dFechaEntrega"];
                this.columnfCantidad = this.Columns["fCantidad"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnsCCoste = this.Columns["sCCoste"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
            }
            
            private void InitClass() {
                this.columniIdAccion = new DataColumn("iIdAccion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAccion);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columndFechaEntrega = new DataColumn("dFechaEntrega", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaEntrega);
                this.columnfCantidad = new DataColumn("fCantidad", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfCantidad);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnsCCoste = new DataColumn("sCCoste", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCCoste);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey8", new DataColumn[] {
                                this.columniIdAccion,
                                this.columniIdCliente,
                                this.columndFechaEntrega}, true));
                this.columniIdAccion.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columndFechaEntrega.AllowDBNull = false;
                this.columnfCantidad.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public AccionesMarkClientesRow NewAccionesMarkClientesRow() {
                return ((AccionesMarkClientesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AccionesMarkClientesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AccionesMarkClientesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccionesMarkClientesRowChanged != null)) {
                    this.AccionesMarkClientesRowChanged(this, new AccionesMarkClientesRowChangeEvent(((AccionesMarkClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccionesMarkClientesRowChanging != null)) {
                    this.AccionesMarkClientesRowChanging(this, new AccionesMarkClientesRowChangeEvent(((AccionesMarkClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccionesMarkClientesRowDeleted != null)) {
                    this.AccionesMarkClientesRowDeleted(this, new AccionesMarkClientesRowChangeEvent(((AccionesMarkClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccionesMarkClientesRowDeleting != null)) {
                    this.AccionesMarkClientesRowDeleting(this, new AccionesMarkClientesRowChangeEvent(((AccionesMarkClientesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAccionesMarkClientesRow(AccionesMarkClientesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarkClientesRow : DataRow {
            
            private AccionesMarkClientesDataTable tableAccionesMarkClientes;
            
            internal AccionesMarkClientesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccionesMarkClientes = ((AccionesMarkClientesDataTable)(this.Table));
            }
            
            public int iIdAccion {
                get {
                    return ((int)(this[this.tableAccionesMarkClientes.iIdAccionColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.iIdAccionColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableAccionesMarkClientes.iIdClienteColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.iIdClienteColumn] = value;
                }
            }
            
            public System.DateTime dFechaEntrega {
                get {
                    return ((System.DateTime)(this[this.tableAccionesMarkClientes.dFechaEntregaColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.dFechaEntregaColumn] = value;
                }
            }
            
            public System.Double fCantidad {
                get {
                    return ((System.Double)(this[this.tableAccionesMarkClientes.fCantidadColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.fCantidadColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableAccionesMarkClientes.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarkClientes.tObservacionesColumn] = value;
                }
            }
            
            public string sCCoste {
                get {
                    try {
                        return ((string)(this[this.tableAccionesMarkClientes.sCCosteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarkClientes.sCCosteColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableAccionesMarkClientes.dFUMColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableAccionesMarkClientes.iEstadoColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.iEstadoColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    try {
                        return ((int)(this[this.tableAccionesMarkClientes.iIdDelegadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarkClientes.iIdDelegadoColumn] = value;
                }
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableAccionesMarkClientes.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableAccionesMarkClientes.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IssCCosteNull() {
                return this.IsNull(this.tableAccionesMarkClientes.sCCosteColumn);
            }
            
            public void SetsCCosteNull() {
                this[this.tableAccionesMarkClientes.sCCosteColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdDelegadoNull() {
                return this.IsNull(this.tableAccionesMarkClientes.iIdDelegadoColumn);
            }
            
            public void SetiIdDelegadoNull() {
                this[this.tableAccionesMarkClientes.iIdDelegadoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarkClientesRowChangeEvent : EventArgs {
            
            private AccionesMarkClientesRow eventRow;
            
            private DataRowAction eventAction;
            
            public AccionesMarkClientesRowChangeEvent(AccionesMarkClientesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AccionesMarkClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Clientes_SAPDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsNIF;
            
            private DataColumn columnsDatosBancarios;
            
            private DataColumn columnsDireccion;
            
            private DataColumn columnsPoblacion;
            
            private DataColumn columnsCP;
            
            private DataColumn columnsPais;
            
            private DataColumn columnsRegion;
            
            private DataColumn columnsTeles;
            
            private DataColumn columnsTelefono2;
            
            private DataColumn columnsTelefax;
            
            private DataColumn columnsCodPago;
            
            private DataColumn columnsZonaCliente;
            
            private DataColumn columnsOficinaVentas;
            
            private DataColumn columnsGrupoVendedores;
            
            private DataColumn columnsGrupoClientes;
            
            private DataColumn columnsOrgVentas;
            
            private DataColumn columnsSector;
            
            private DataColumn columnsCanal;
            
            private DataColumn columnsMoneda;
            
            private DataColumn columnsCondExp;
            
            private DataColumn columnsCentroSuministro;
            
            private DataColumn columnsIncoterms1;
            
            private DataColumn columnsIncoterms2;
            
            private DataColumn columnsAreaControlCred;
            
            private DataColumn columnsGarantias;
            
            private DataColumn columnsEncComercial;
            
            private DataColumn columnsRespPedido;
            
            private DataColumn columnsCiaTransporte;
            
            private DataColumn columnfDescuento;
            
            private DataColumn columnfBonificacion;
            
            private DataColumn columnfRappel;
            
            private DataColumn columnsTR;
            
            private DataColumn columnbPotencial;
            
            internal Clientes_SAPDataTable() : 
                    base("Clientes_SAP") {
                this.InitClass();
            }
            
            internal Clientes_SAPDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sNIFColumn {
                get {
                    return this.columnsNIF;
                }
            }
            
            internal DataColumn sDatosBancariosColumn {
                get {
                    return this.columnsDatosBancarios;
                }
            }
            
            internal DataColumn sDireccionColumn {
                get {
                    return this.columnsDireccion;
                }
            }
            
            internal DataColumn sPoblacionColumn {
                get {
                    return this.columnsPoblacion;
                }
            }
            
            internal DataColumn sCPColumn {
                get {
                    return this.columnsCP;
                }
            }
            
            internal DataColumn sPaisColumn {
                get {
                    return this.columnsPais;
                }
            }
            
            internal DataColumn sRegionColumn {
                get {
                    return this.columnsRegion;
                }
            }
            
            internal DataColumn sTelesColumn {
                get {
                    return this.columnsTeles;
                }
            }
            
            internal DataColumn sTelefono2Column {
                get {
                    return this.columnsTelefono2;
                }
            }
            
            internal DataColumn sTelefaxColumn {
                get {
                    return this.columnsTelefax;
                }
            }
            
            internal DataColumn sCodPagoColumn {
                get {
                    return this.columnsCodPago;
                }
            }
            
            internal DataColumn sZonaClienteColumn {
                get {
                    return this.columnsZonaCliente;
                }
            }
            
            internal DataColumn sOficinaVentasColumn {
                get {
                    return this.columnsOficinaVentas;
                }
            }
            
            internal DataColumn sGrupoVendedoresColumn {
                get {
                    return this.columnsGrupoVendedores;
                }
            }
            
            internal DataColumn sGrupoClientesColumn {
                get {
                    return this.columnsGrupoClientes;
                }
            }
            
            internal DataColumn sOrgVentasColumn {
                get {
                    return this.columnsOrgVentas;
                }
            }
            
            internal DataColumn sSectorColumn {
                get {
                    return this.columnsSector;
                }
            }
            
            internal DataColumn sCanalColumn {
                get {
                    return this.columnsCanal;
                }
            }
            
            internal DataColumn sMonedaColumn {
                get {
                    return this.columnsMoneda;
                }
            }
            
            internal DataColumn sCondExpColumn {
                get {
                    return this.columnsCondExp;
                }
            }
            
            internal DataColumn sCentroSuministroColumn {
                get {
                    return this.columnsCentroSuministro;
                }
            }
            
            internal DataColumn sIncoterms1Column {
                get {
                    return this.columnsIncoterms1;
                }
            }
            
            internal DataColumn sIncoterms2Column {
                get {
                    return this.columnsIncoterms2;
                }
            }
            
            internal DataColumn sAreaControlCredColumn {
                get {
                    return this.columnsAreaControlCred;
                }
            }
            
            internal DataColumn sGarantiasColumn {
                get {
                    return this.columnsGarantias;
                }
            }
            
            internal DataColumn sEncComercialColumn {
                get {
                    return this.columnsEncComercial;
                }
            }
            
            internal DataColumn sRespPedidoColumn {
                get {
                    return this.columnsRespPedido;
                }
            }
            
            internal DataColumn sCiaTransporteColumn {
                get {
                    return this.columnsCiaTransporte;
                }
            }
            
            internal DataColumn fDescuentoColumn {
                get {
                    return this.columnfDescuento;
                }
            }
            
            internal DataColumn fBonificacionColumn {
                get {
                    return this.columnfBonificacion;
                }
            }
            
            internal DataColumn fRappelColumn {
                get {
                    return this.columnfRappel;
                }
            }
            
            internal DataColumn sTRColumn {
                get {
                    return this.columnsTR;
                }
            }
            
            internal DataColumn bPotencialColumn {
                get {
                    return this.columnbPotencial;
                }
            }
            
            public Clientes_SAPRow this[int index] {
                get {
                    return ((Clientes_SAPRow)(this.Rows[index]));
                }
            }
            
            public event Clientes_SAPRowChangeEventHandler Clientes_SAPRowChanged;
            
            public event Clientes_SAPRowChangeEventHandler Clientes_SAPRowChanging;
            
            public event Clientes_SAPRowChangeEventHandler Clientes_SAPRowDeleted;
            
            public event Clientes_SAPRowChangeEventHandler Clientes_SAPRowDeleting;
            
            public void AddClientes_SAPRow(Clientes_SAPRow row) {
                this.Rows.Add(row);
            }
            
            public Clientes_SAPRow AddClientes_SAPRow(
                        int iIdCliente, 
                        string sNIF, 
                        string sDatosBancarios, 
                        string sDireccion, 
                        string sPoblacion, 
                        string sCP, 
                        string sPais, 
                        string sRegion, 
                        string sTeles, 
                        string sTelefono2, 
                        string sTelefax, 
                        string sCodPago, 
                        string sZonaCliente, 
                        string sOficinaVentas, 
                        string sGrupoVendedores, 
                        string sGrupoClientes, 
                        string sOrgVentas, 
                        string sSector, 
                        string sCanal, 
                        string sMoneda, 
                        string sCondExp, 
                        string sCentroSuministro, 
                        string sIncoterms1, 
                        string sIncoterms2, 
                        string sAreaControlCred, 
                        string sGarantias, 
                        string sEncComercial, 
                        string sRespPedido, 
                        string sCiaTransporte, 
                        System.Double fDescuento, 
                        System.Double fBonificacion, 
                        System.Double fRappel, 
                        string sTR, 
                        bool bPotencial) {
                Clientes_SAPRow rowClientes_SAPRow = ((Clientes_SAPRow)(this.NewRow()));
                rowClientes_SAPRow.ItemArray = new object[] {
                        iIdCliente,
                        sNIF,
                        sDatosBancarios,
                        sDireccion,
                        sPoblacion,
                        sCP,
                        sPais,
                        sRegion,
                        sTeles,
                        sTelefono2,
                        sTelefax,
                        sCodPago,
                        sZonaCliente,
                        sOficinaVentas,
                        sGrupoVendedores,
                        sGrupoClientes,
                        sOrgVentas,
                        sSector,
                        sCanal,
                        sMoneda,
                        sCondExp,
                        sCentroSuministro,
                        sIncoterms1,
                        sIncoterms2,
                        sAreaControlCred,
                        sGarantias,
                        sEncComercial,
                        sRespPedido,
                        sCiaTransporte,
                        fDescuento,
                        fBonificacion,
                        fRappel,
                        sTR,
                        bPotencial};
                this.Rows.Add(rowClientes_SAPRow);
                return rowClientes_SAPRow;
            }
            
            public Clientes_SAPRow FindByiIdCliente(int iIdCliente) {
                return ((Clientes_SAPRow)(this.Rows.Find(new object[] {
                            iIdCliente})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Clientes_SAPDataTable cln = ((Clientes_SAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Clientes_SAPDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsNIF = this.Columns["sNIF"];
                this.columnsDatosBancarios = this.Columns["sDatosBancarios"];
                this.columnsDireccion = this.Columns["sDireccion"];
                this.columnsPoblacion = this.Columns["sPoblacion"];
                this.columnsCP = this.Columns["sCP"];
                this.columnsPais = this.Columns["sPais"];
                this.columnsRegion = this.Columns["sRegion"];
                this.columnsTeles = this.Columns["sTeles"];
                this.columnsTelefono2 = this.Columns["sTelefono2"];
                this.columnsTelefax = this.Columns["sTelefax"];
                this.columnsCodPago = this.Columns["sCodPago"];
                this.columnsZonaCliente = this.Columns["sZonaCliente"];
                this.columnsOficinaVentas = this.Columns["sOficinaVentas"];
                this.columnsGrupoVendedores = this.Columns["sGrupoVendedores"];
                this.columnsGrupoClientes = this.Columns["sGrupoClientes"];
                this.columnsOrgVentas = this.Columns["sOrgVentas"];
                this.columnsSector = this.Columns["sSector"];
                this.columnsCanal = this.Columns["sCanal"];
                this.columnsMoneda = this.Columns["sMoneda"];
                this.columnsCondExp = this.Columns["sCondExp"];
                this.columnsCentroSuministro = this.Columns["sCentroSuministro"];
                this.columnsIncoterms1 = this.Columns["sIncoterms1"];
                this.columnsIncoterms2 = this.Columns["sIncoterms2"];
                this.columnsAreaControlCred = this.Columns["sAreaControlCred"];
                this.columnsGarantias = this.Columns["sGarantias"];
                this.columnsEncComercial = this.Columns["sEncComercial"];
                this.columnsRespPedido = this.Columns["sRespPedido"];
                this.columnsCiaTransporte = this.Columns["sCiaTransporte"];
                this.columnfDescuento = this.Columns["fDescuento"];
                this.columnfBonificacion = this.Columns["fBonificacion"];
                this.columnfRappel = this.Columns["fRappel"];
                this.columnsTR = this.Columns["sTR"];
                this.columnbPotencial = this.Columns["bPotencial"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsNIF = new DataColumn("sNIF", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNIF);
                this.columnsDatosBancarios = new DataColumn("sDatosBancarios", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDatosBancarios);
                this.columnsDireccion = new DataColumn("sDireccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDireccion);
                this.columnsPoblacion = new DataColumn("sPoblacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsPoblacion);
                this.columnsCP = new DataColumn("sCP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCP);
                this.columnsPais = new DataColumn("sPais", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsPais);
                this.columnsRegion = new DataColumn("sRegion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsRegion);
                this.columnsTeles = new DataColumn("sTeles", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTeles);
                this.columnsTelefono2 = new DataColumn("sTelefono2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTelefono2);
                this.columnsTelefax = new DataColumn("sTelefax", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTelefax);
                this.columnsCodPago = new DataColumn("sCodPago", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCodPago);
                this.columnsZonaCliente = new DataColumn("sZonaCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsZonaCliente);
                this.columnsOficinaVentas = new DataColumn("sOficinaVentas", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsOficinaVentas);
                this.columnsGrupoVendedores = new DataColumn("sGrupoVendedores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsGrupoVendedores);
                this.columnsGrupoClientes = new DataColumn("sGrupoClientes", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsGrupoClientes);
                this.columnsOrgVentas = new DataColumn("sOrgVentas", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsOrgVentas);
                this.columnsSector = new DataColumn("sSector", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsSector);
                this.columnsCanal = new DataColumn("sCanal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCanal);
                this.columnsMoneda = new DataColumn("sMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsMoneda);
                this.columnsCondExp = new DataColumn("sCondExp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCondExp);
                this.columnsCentroSuministro = new DataColumn("sCentroSuministro", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCentroSuministro);
                this.columnsIncoterms1 = new DataColumn("sIncoterms1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIncoterms1);
                this.columnsIncoterms2 = new DataColumn("sIncoterms2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIncoterms2);
                this.columnsAreaControlCred = new DataColumn("sAreaControlCred", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsAreaControlCred);
                this.columnsGarantias = new DataColumn("sGarantias", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsGarantias);
                this.columnsEncComercial = new DataColumn("sEncComercial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsEncComercial);
                this.columnsRespPedido = new DataColumn("sRespPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsRespPedido);
                this.columnsCiaTransporte = new DataColumn("sCiaTransporte", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCiaTransporte);
                this.columnfDescuento = new DataColumn("fDescuento", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfDescuento);
                this.columnfBonificacion = new DataColumn("fBonificacion", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfBonificacion);
                this.columnfRappel = new DataColumn("fRappel", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfRappel);
                this.columnsTR = new DataColumn("sTR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTR);
                this.columnbPotencial = new DataColumn("bPotencial", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbPotencial);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey9", new DataColumn[] {
                                this.columniIdCliente}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCliente.Unique = true;
                this.columnsCP.AllowDBNull = false;
                this.columnsPais.AllowDBNull = false;
                this.columnfDescuento.AllowDBNull = false;
                this.columnfBonificacion.AllowDBNull = false;
                this.columnfRappel.AllowDBNull = false;
                this.columnbPotencial.AllowDBNull = false;
            }
            
            public Clientes_SAPRow NewClientes_SAPRow() {
                return ((Clientes_SAPRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Clientes_SAPRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Clientes_SAPRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Clientes_SAPRowChanged != null)) {
                    this.Clientes_SAPRowChanged(this, new Clientes_SAPRowChangeEvent(((Clientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Clientes_SAPRowChanging != null)) {
                    this.Clientes_SAPRowChanging(this, new Clientes_SAPRowChangeEvent(((Clientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Clientes_SAPRowDeleted != null)) {
                    this.Clientes_SAPRowDeleted(this, new Clientes_SAPRowChangeEvent(((Clientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Clientes_SAPRowDeleting != null)) {
                    this.Clientes_SAPRowDeleting(this, new Clientes_SAPRowChangeEvent(((Clientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveClientes_SAPRow(Clientes_SAPRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Clientes_SAPRow : DataRow {
            
            private Clientes_SAPDataTable tableClientes_SAP;
            
            internal Clientes_SAPRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientes_SAP = ((Clientes_SAPDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableClientes_SAP.iIdClienteColumn]));
                }
                set {
                    this[this.tableClientes_SAP.iIdClienteColumn] = value;
                }
            }
            
            public string sNIF {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sNIFColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sNIFColumn] = value;
                }
            }
            
            public string sDatosBancarios {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sDatosBancariosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sDatosBancariosColumn] = value;
                }
            }
            
            public string sDireccion {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sDireccionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sDireccionColumn] = value;
                }
            }
            
            public string sPoblacion {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sPoblacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sPoblacionColumn] = value;
                }
            }
            
            public string sCP {
                get {
                    return ((string)(this[this.tableClientes_SAP.sCPColumn]));
                }
                set {
                    this[this.tableClientes_SAP.sCPColumn] = value;
                }
            }
            
            public string sPais {
                get {
                    return ((string)(this[this.tableClientes_SAP.sPaisColumn]));
                }
                set {
                    this[this.tableClientes_SAP.sPaisColumn] = value;
                }
            }
            
            public string sRegion {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sRegionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sRegionColumn] = value;
                }
            }
            
            public string sTeles {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sTelesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sTelesColumn] = value;
                }
            }
            
            public string sTelefono2 {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sTelefono2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sTelefono2Column] = value;
                }
            }
            
            public string sTelefax {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sTelefaxColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sTelefaxColumn] = value;
                }
            }
            
            public string sCodPago {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sCodPagoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sCodPagoColumn] = value;
                }
            }
            
            public string sZonaCliente {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sZonaClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sZonaClienteColumn] = value;
                }
            }
            
            public string sOficinaVentas {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sOficinaVentasColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sOficinaVentasColumn] = value;
                }
            }
            
            public string sGrupoVendedores {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sGrupoVendedoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sGrupoVendedoresColumn] = value;
                }
            }
            
            public string sGrupoClientes {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sGrupoClientesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sGrupoClientesColumn] = value;
                }
            }
            
            public string sOrgVentas {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sOrgVentasColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sOrgVentasColumn] = value;
                }
            }
            
            public string sSector {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sSectorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sSectorColumn] = value;
                }
            }
            
            public string sCanal {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sCanalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sCanalColumn] = value;
                }
            }
            
            public string sMoneda {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sMonedaColumn] = value;
                }
            }
            
            public string sCondExp {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sCondExpColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sCondExpColumn] = value;
                }
            }
            
            public string sCentroSuministro {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sCentroSuministroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sCentroSuministroColumn] = value;
                }
            }
            
            public string sIncoterms1 {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sIncoterms1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sIncoterms1Column] = value;
                }
            }
            
            public string sIncoterms2 {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sIncoterms2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sIncoterms2Column] = value;
                }
            }
            
            public string sAreaControlCred {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sAreaControlCredColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sAreaControlCredColumn] = value;
                }
            }
            
            public string sGarantias {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sGarantiasColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sGarantiasColumn] = value;
                }
            }
            
            public string sEncComercial {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sEncComercialColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sEncComercialColumn] = value;
                }
            }
            
            public string sRespPedido {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sRespPedidoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sRespPedidoColumn] = value;
                }
            }
            
            public string sCiaTransporte {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sCiaTransporteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sCiaTransporteColumn] = value;
                }
            }
            
            public System.Double fDescuento {
                get {
                    return ((System.Double)(this[this.tableClientes_SAP.fDescuentoColumn]));
                }
                set {
                    this[this.tableClientes_SAP.fDescuentoColumn] = value;
                }
            }
            
            public System.Double fBonificacion {
                get {
                    return ((System.Double)(this[this.tableClientes_SAP.fBonificacionColumn]));
                }
                set {
                    this[this.tableClientes_SAP.fBonificacionColumn] = value;
                }
            }
            
            public System.Double fRappel {
                get {
                    return ((System.Double)(this[this.tableClientes_SAP.fRappelColumn]));
                }
                set {
                    this[this.tableClientes_SAP.fRappelColumn] = value;
                }
            }
            
            public string sTR {
                get {
                    try {
                        return ((string)(this[this.tableClientes_SAP.sTRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes_SAP.sTRColumn] = value;
                }
            }
            
            public bool bPotencial {
                get {
                    return ((bool)(this[this.tableClientes_SAP.bPotencialColumn]));
                }
                set {
                    this[this.tableClientes_SAP.bPotencialColumn] = value;
                }
            }
            
            public bool IssNIFNull() {
                return this.IsNull(this.tableClientes_SAP.sNIFColumn);
            }
            
            public void SetsNIFNull() {
                this[this.tableClientes_SAP.sNIFColumn] = System.Convert.DBNull;
            }
            
            public bool IssDatosBancariosNull() {
                return this.IsNull(this.tableClientes_SAP.sDatosBancariosColumn);
            }
            
            public void SetsDatosBancariosNull() {
                this[this.tableClientes_SAP.sDatosBancariosColumn] = System.Convert.DBNull;
            }
            
            public bool IssDireccionNull() {
                return this.IsNull(this.tableClientes_SAP.sDireccionColumn);
            }
            
            public void SetsDireccionNull() {
                this[this.tableClientes_SAP.sDireccionColumn] = System.Convert.DBNull;
            }
            
            public bool IssPoblacionNull() {
                return this.IsNull(this.tableClientes_SAP.sPoblacionColumn);
            }
            
            public void SetsPoblacionNull() {
                this[this.tableClientes_SAP.sPoblacionColumn] = System.Convert.DBNull;
            }
            
            public bool IssRegionNull() {
                return this.IsNull(this.tableClientes_SAP.sRegionColumn);
            }
            
            public void SetsRegionNull() {
                this[this.tableClientes_SAP.sRegionColumn] = System.Convert.DBNull;
            }
            
            public bool IssTelesNull() {
                return this.IsNull(this.tableClientes_SAP.sTelesColumn);
            }
            
            public void SetsTelesNull() {
                this[this.tableClientes_SAP.sTelesColumn] = System.Convert.DBNull;
            }
            
            public bool IssTelefono2Null() {
                return this.IsNull(this.tableClientes_SAP.sTelefono2Column);
            }
            
            public void SetsTelefono2Null() {
                this[this.tableClientes_SAP.sTelefono2Column] = System.Convert.DBNull;
            }
            
            public bool IssTelefaxNull() {
                return this.IsNull(this.tableClientes_SAP.sTelefaxColumn);
            }
            
            public void SetsTelefaxNull() {
                this[this.tableClientes_SAP.sTelefaxColumn] = System.Convert.DBNull;
            }
            
            public bool IssCodPagoNull() {
                return this.IsNull(this.tableClientes_SAP.sCodPagoColumn);
            }
            
            public void SetsCodPagoNull() {
                this[this.tableClientes_SAP.sCodPagoColumn] = System.Convert.DBNull;
            }
            
            public bool IssZonaClienteNull() {
                return this.IsNull(this.tableClientes_SAP.sZonaClienteColumn);
            }
            
            public void SetsZonaClienteNull() {
                this[this.tableClientes_SAP.sZonaClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IssOficinaVentasNull() {
                return this.IsNull(this.tableClientes_SAP.sOficinaVentasColumn);
            }
            
            public void SetsOficinaVentasNull() {
                this[this.tableClientes_SAP.sOficinaVentasColumn] = System.Convert.DBNull;
            }
            
            public bool IssGrupoVendedoresNull() {
                return this.IsNull(this.tableClientes_SAP.sGrupoVendedoresColumn);
            }
            
            public void SetsGrupoVendedoresNull() {
                this[this.tableClientes_SAP.sGrupoVendedoresColumn] = System.Convert.DBNull;
            }
            
            public bool IssGrupoClientesNull() {
                return this.IsNull(this.tableClientes_SAP.sGrupoClientesColumn);
            }
            
            public void SetsGrupoClientesNull() {
                this[this.tableClientes_SAP.sGrupoClientesColumn] = System.Convert.DBNull;
            }
            
            public bool IssOrgVentasNull() {
                return this.IsNull(this.tableClientes_SAP.sOrgVentasColumn);
            }
            
            public void SetsOrgVentasNull() {
                this[this.tableClientes_SAP.sOrgVentasColumn] = System.Convert.DBNull;
            }
            
            public bool IssSectorNull() {
                return this.IsNull(this.tableClientes_SAP.sSectorColumn);
            }
            
            public void SetsSectorNull() {
                this[this.tableClientes_SAP.sSectorColumn] = System.Convert.DBNull;
            }
            
            public bool IssCanalNull() {
                return this.IsNull(this.tableClientes_SAP.sCanalColumn);
            }
            
            public void SetsCanalNull() {
                this[this.tableClientes_SAP.sCanalColumn] = System.Convert.DBNull;
            }
            
            public bool IssMonedaNull() {
                return this.IsNull(this.tableClientes_SAP.sMonedaColumn);
            }
            
            public void SetsMonedaNull() {
                this[this.tableClientes_SAP.sMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IssCondExpNull() {
                return this.IsNull(this.tableClientes_SAP.sCondExpColumn);
            }
            
            public void SetsCondExpNull() {
                this[this.tableClientes_SAP.sCondExpColumn] = System.Convert.DBNull;
            }
            
            public bool IssCentroSuministroNull() {
                return this.IsNull(this.tableClientes_SAP.sCentroSuministroColumn);
            }
            
            public void SetsCentroSuministroNull() {
                this[this.tableClientes_SAP.sCentroSuministroColumn] = System.Convert.DBNull;
            }
            
            public bool IssIncoterms1Null() {
                return this.IsNull(this.tableClientes_SAP.sIncoterms1Column);
            }
            
            public void SetsIncoterms1Null() {
                this[this.tableClientes_SAP.sIncoterms1Column] = System.Convert.DBNull;
            }
            
            public bool IssIncoterms2Null() {
                return this.IsNull(this.tableClientes_SAP.sIncoterms2Column);
            }
            
            public void SetsIncoterms2Null() {
                this[this.tableClientes_SAP.sIncoterms2Column] = System.Convert.DBNull;
            }
            
            public bool IssAreaControlCredNull() {
                return this.IsNull(this.tableClientes_SAP.sAreaControlCredColumn);
            }
            
            public void SetsAreaControlCredNull() {
                this[this.tableClientes_SAP.sAreaControlCredColumn] = System.Convert.DBNull;
            }
            
            public bool IssGarantiasNull() {
                return this.IsNull(this.tableClientes_SAP.sGarantiasColumn);
            }
            
            public void SetsGarantiasNull() {
                this[this.tableClientes_SAP.sGarantiasColumn] = System.Convert.DBNull;
            }
            
            public bool IssEncComercialNull() {
                return this.IsNull(this.tableClientes_SAP.sEncComercialColumn);
            }
            
            public void SetsEncComercialNull() {
                this[this.tableClientes_SAP.sEncComercialColumn] = System.Convert.DBNull;
            }
            
            public bool IssRespPedidoNull() {
                return this.IsNull(this.tableClientes_SAP.sRespPedidoColumn);
            }
            
            public void SetsRespPedidoNull() {
                this[this.tableClientes_SAP.sRespPedidoColumn] = System.Convert.DBNull;
            }
            
            public bool IssCiaTransporteNull() {
                return this.IsNull(this.tableClientes_SAP.sCiaTransporteColumn);
            }
            
            public void SetsCiaTransporteNull() {
                this[this.tableClientes_SAP.sCiaTransporteColumn] = System.Convert.DBNull;
            }
            
            public bool IssTRNull() {
                return this.IsNull(this.tableClientes_SAP.sTRColumn);
            }
            
            public void SetsTRNull() {
                this[this.tableClientes_SAP.sTRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Clientes_SAPRowChangeEvent : EventArgs {
            
            private Clientes_SAPRow eventRow;
            
            private DataRowAction eventAction;
            
            public Clientes_SAPRowChangeEvent(Clientes_SAPRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Clientes_SAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCentro;
            
            private DataColumn columnsIdCentro;
            
            private DataColumn columnsIdCentroTemp;
            
            private DataColumn columnsIdTipoCentro;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columnsDireccion;
            
            private DataColumn columniIdPoblacion;
            
            private DataColumn columnsFax;
            
            private DataColumn columnsTelefono;
            
            private DataColumn columnsIdPolPrescripcion;
            
            private DataColumn columnsIdTipoClasificacion;
            
            private DataColumn columnsIdSistInformatico;
            
            private DataColumn columnbPactoPrescripcion;
            
            private DataColumn columnbVisitaColectiva;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal CentrosDataTable() : 
                    base("Centros") {
                this.InitClass();
            }
            
            internal CentrosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn sIdCentroColumn {
                get {
                    return this.columnsIdCentro;
                }
            }
            
            internal DataColumn sIdCentroTempColumn {
                get {
                    return this.columnsIdCentroTemp;
                }
            }
            
            internal DataColumn sIdTipoCentroColumn {
                get {
                    return this.columnsIdTipoCentro;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn sDireccionColumn {
                get {
                    return this.columnsDireccion;
                }
            }
            
            internal DataColumn iIdPoblacionColumn {
                get {
                    return this.columniIdPoblacion;
                }
            }
            
            internal DataColumn sFaxColumn {
                get {
                    return this.columnsFax;
                }
            }
            
            internal DataColumn sTelefonoColumn {
                get {
                    return this.columnsTelefono;
                }
            }
            
            internal DataColumn sIdPolPrescripcionColumn {
                get {
                    return this.columnsIdPolPrescripcion;
                }
            }
            
            internal DataColumn sIdTipoClasificacionColumn {
                get {
                    return this.columnsIdTipoClasificacion;
                }
            }
            
            internal DataColumn sIdSistInformaticoColumn {
                get {
                    return this.columnsIdSistInformatico;
                }
            }
            
            internal DataColumn bPactoPrescripcionColumn {
                get {
                    return this.columnbPactoPrescripcion;
                }
            }
            
            internal DataColumn bVisitaColectivaColumn {
                get {
                    return this.columnbVisitaColectiva;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public CentrosRow this[int index] {
                get {
                    return ((CentrosRow)(this.Rows[index]));
                }
            }
            
            public event CentrosRowChangeEventHandler CentrosRowChanged;
            
            public event CentrosRowChangeEventHandler CentrosRowChanging;
            
            public event CentrosRowChangeEventHandler CentrosRowDeleted;
            
            public event CentrosRowChangeEventHandler CentrosRowDeleting;
            
            public void AddCentrosRow(CentrosRow row) {
                this.Rows.Add(row);
            }
            
            public CentrosRow AddCentrosRow(string sIdCentro, string sIdCentroTemp, string sIdTipoCentro, string sDescripcion, string sDireccion, int iIdPoblacion, string sFax, string sTelefono, string sIdPolPrescripcion, string sIdTipoClasificacion, string sIdSistInformatico, bool bPactoPrescripcion, bool bVisitaColectiva, System.DateTime dFUM, short iEstado) {
                CentrosRow rowCentrosRow = ((CentrosRow)(this.NewRow()));
                rowCentrosRow.ItemArray = new object[] {
                        null,
                        sIdCentro,
                        sIdCentroTemp,
                        sIdTipoCentro,
                        sDescripcion,
                        sDireccion,
                        iIdPoblacion,
                        sFax,
                        sTelefono,
                        sIdPolPrescripcion,
                        sIdTipoClasificacion,
                        sIdSistInformatico,
                        bPactoPrescripcion,
                        bVisitaColectiva,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowCentrosRow);
                return rowCentrosRow;
            }
            
            public CentrosRow FindByiIdCentro(int iIdCentro) {
                return ((CentrosRow)(this.Rows.Find(new object[] {
                            iIdCentro})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CentrosDataTable cln = ((CentrosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CentrosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columnsIdCentro = this.Columns["sIdCentro"];
                this.columnsIdCentroTemp = this.Columns["sIdCentroTemp"];
                this.columnsIdTipoCentro = this.Columns["sIdTipoCentro"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columnsDireccion = this.Columns["sDireccion"];
                this.columniIdPoblacion = this.Columns["iIdPoblacion"];
                this.columnsFax = this.Columns["sFax"];
                this.columnsTelefono = this.Columns["sTelefono"];
                this.columnsIdPolPrescripcion = this.Columns["sIdPolPrescripcion"];
                this.columnsIdTipoClasificacion = this.Columns["sIdTipoClasificacion"];
                this.columnsIdSistInformatico = this.Columns["sIdSistInformatico"];
                this.columnbPactoPrescripcion = this.Columns["bPactoPrescripcion"];
                this.columnbVisitaColectiva = this.Columns["bVisitaColectiva"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columnsIdCentro = new DataColumn("sIdCentro", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentro);
                this.columnsIdCentroTemp = new DataColumn("sIdCentroTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentroTemp);
                this.columnsIdTipoCentro = new DataColumn("sIdTipoCentro", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoCentro);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columnsDireccion = new DataColumn("sDireccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDireccion);
                this.columniIdPoblacion = new DataColumn("iIdPoblacion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdPoblacion);
                this.columnsFax = new DataColumn("sFax", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsFax);
                this.columnsTelefono = new DataColumn("sTelefono", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTelefono);
                this.columnsIdPolPrescripcion = new DataColumn("sIdPolPrescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPolPrescripcion);
                this.columnsIdTipoClasificacion = new DataColumn("sIdTipoClasificacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoClasificacion);
                this.columnsIdSistInformatico = new DataColumn("sIdSistInformatico", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdSistInformatico);
                this.columnbPactoPrescripcion = new DataColumn("bPactoPrescripcion", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbPactoPrescripcion);
                this.columnbVisitaColectiva = new DataColumn("bVisitaColectiva", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbVisitaColectiva);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey13", new DataColumn[] {
                                this.columniIdCentro}, true));
                this.columniIdCentro.AutoIncrement = true;
                this.columniIdCentro.AllowDBNull = false;
                this.columniIdCentro.ReadOnly = true;
                this.columniIdCentro.Unique = true;
                this.columnsIdCentro.AllowDBNull = false;
                this.columnsIdCentroTemp.AllowDBNull = false;
                this.columnsDescripcion.AllowDBNull = false;
                this.columnsDireccion.AllowDBNull = false;
                this.columniIdPoblacion.AllowDBNull = false;
                this.columnbPactoPrescripcion.AllowDBNull = false;
                this.columnbVisitaColectiva.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public CentrosRow NewCentrosRow() {
                return ((CentrosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CentrosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CentrosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosRowChanged != null)) {
                    this.CentrosRowChanged(this, new CentrosRowChangeEvent(((CentrosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosRowChanging != null)) {
                    this.CentrosRowChanging(this, new CentrosRowChangeEvent(((CentrosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosRowDeleted != null)) {
                    this.CentrosRowDeleted(this, new CentrosRowChangeEvent(((CentrosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosRowDeleting != null)) {
                    this.CentrosRowDeleting(this, new CentrosRowChangeEvent(((CentrosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCentrosRow(CentrosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRow : DataRow {
            
            private CentrosDataTable tableCentros;
            
            internal CentrosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentros = ((CentrosDataTable)(this.Table));
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableCentros.iIdCentroColumn]));
                }
                set {
                    this[this.tableCentros.iIdCentroColumn] = value;
                }
            }
            
            public string sIdCentro {
                get {
                    return ((string)(this[this.tableCentros.sIdCentroColumn]));
                }
                set {
                    this[this.tableCentros.sIdCentroColumn] = value;
                }
            }
            
            public string sIdCentroTemp {
                get {
                    return ((string)(this[this.tableCentros.sIdCentroTempColumn]));
                }
                set {
                    this[this.tableCentros.sIdCentroTempColumn] = value;
                }
            }
            
            public string sIdTipoCentro {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sIdTipoCentroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sIdTipoCentroColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    return ((string)(this[this.tableCentros.sDescripcionColumn]));
                }
                set {
                    this[this.tableCentros.sDescripcionColumn] = value;
                }
            }
            
            public string sDireccion {
                get {
                    return ((string)(this[this.tableCentros.sDireccionColumn]));
                }
                set {
                    this[this.tableCentros.sDireccionColumn] = value;
                }
            }
            
            public int iIdPoblacion {
                get {
                    return ((int)(this[this.tableCentros.iIdPoblacionColumn]));
                }
                set {
                    this[this.tableCentros.iIdPoblacionColumn] = value;
                }
            }
            
            public string sFax {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sFaxColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sFaxColumn] = value;
                }
            }
            
            public string sTelefono {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sTelefonoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sTelefonoColumn] = value;
                }
            }
            
            public string sIdPolPrescripcion {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sIdPolPrescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sIdPolPrescripcionColumn] = value;
                }
            }
            
            public string sIdTipoClasificacion {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sIdTipoClasificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sIdTipoClasificacionColumn] = value;
                }
            }
            
            public string sIdSistInformatico {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sIdSistInformaticoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sIdSistInformaticoColumn] = value;
                }
            }
            
            public bool bPactoPrescripcion {
                get {
                    return ((bool)(this[this.tableCentros.bPactoPrescripcionColumn]));
                }
                set {
                    this[this.tableCentros.bPactoPrescripcionColumn] = value;
                }
            }
            
            public bool bVisitaColectiva {
                get {
                    return ((bool)(this[this.tableCentros.bVisitaColectivaColumn]));
                }
                set {
                    this[this.tableCentros.bVisitaColectivaColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableCentros.dFUMColumn]));
                }
                set {
                    this[this.tableCentros.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCentros.iEstadoColumn]));
                }
                set {
                    this[this.tableCentros.iEstadoColumn] = value;
                }
            }
            
            public bool IssIdTipoCentroNull() {
                return this.IsNull(this.tableCentros.sIdTipoCentroColumn);
            }
            
            public void SetsIdTipoCentroNull() {
                this[this.tableCentros.sIdTipoCentroColumn] = System.Convert.DBNull;
            }
            
            public bool IssFaxNull() {
                return this.IsNull(this.tableCentros.sFaxColumn);
            }
            
            public void SetsFaxNull() {
                this[this.tableCentros.sFaxColumn] = System.Convert.DBNull;
            }
            
            public bool IssTelefonoNull() {
                return this.IsNull(this.tableCentros.sTelefonoColumn);
            }
            
            public void SetsTelefonoNull() {
                this[this.tableCentros.sTelefonoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdPolPrescripcionNull() {
                return this.IsNull(this.tableCentros.sIdPolPrescripcionColumn);
            }
            
            public void SetsIdPolPrescripcionNull() {
                this[this.tableCentros.sIdPolPrescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoClasificacionNull() {
                return this.IsNull(this.tableCentros.sIdTipoClasificacionColumn);
            }
            
            public void SetsIdTipoClasificacionNull() {
                this[this.tableCentros.sIdTipoClasificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdSistInformaticoNull() {
                return this.IsNull(this.tableCentros.sIdSistInformaticoColumn);
            }
            
            public void SetsIdSistInformaticoNull() {
                this[this.tableCentros.sIdSistInformaticoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRowChangeEvent : EventArgs {
            
            private CentrosRow eventRow;
            
            private DataRowAction eventAction;
            
            public CentrosRowChangeEvent(CentrosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CentrosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdPedido;
            
            private DataColumn columnsIdPedidoTemp;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdTipoPedido;
            
            private DataColumn columnsIdEstEntPedido;
            
            private DataColumn columnsIdEstFacPedido;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdDestinatario;
            
            private DataColumn columndFechaPedido;
            
            private DataColumn columndFechaPreferente;
            
            private DataColumn columndFechaFijada;
            
            private DataColumn columnsOrgVentas;
            
            private DataColumn columnsGrupoVendedor;
            
            private DataColumn columnsCanal;
            
            private DataColumn columnsSector;
            
            private DataColumn columnfImporte;
            
            private DataColumn columnfDescuento;
            
            private DataColumn columnsIdTipoCampanya;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columniEstado;
            
            private DataColumn columnfFUM;
            
            internal Pedidos_CabDataTable() : 
                    base("Pedidos_Cab") {
                this.InitClass();
            }
            
            internal Pedidos_CabDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            internal DataColumn sIdPedidoTempColumn {
                get {
                    return this.columnsIdPedidoTemp;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdTipoPedidoColumn {
                get {
                    return this.columnsIdTipoPedido;
                }
            }
            
            internal DataColumn sIdEstEntPedidoColumn {
                get {
                    return this.columnsIdEstEntPedido;
                }
            }
            
            internal DataColumn sIdEstFacPedidoColumn {
                get {
                    return this.columnsIdEstFacPedido;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdDestinatarioColumn {
                get {
                    return this.columniIdDestinatario;
                }
            }
            
            internal DataColumn dFechaPedidoColumn {
                get {
                    return this.columndFechaPedido;
                }
            }
            
            internal DataColumn dFechaPreferenteColumn {
                get {
                    return this.columndFechaPreferente;
                }
            }
            
            internal DataColumn dFechaFijadaColumn {
                get {
                    return this.columndFechaFijada;
                }
            }
            
            internal DataColumn sOrgVentasColumn {
                get {
                    return this.columnsOrgVentas;
                }
            }
            
            internal DataColumn sGrupoVendedorColumn {
                get {
                    return this.columnsGrupoVendedor;
                }
            }
            
            internal DataColumn sCanalColumn {
                get {
                    return this.columnsCanal;
                }
            }
            
            internal DataColumn sSectorColumn {
                get {
                    return this.columnsSector;
                }
            }
            
            internal DataColumn fImporteColumn {
                get {
                    return this.columnfImporte;
                }
            }
            
            internal DataColumn fDescuentoColumn {
                get {
                    return this.columnfDescuento;
                }
            }
            
            internal DataColumn sIdTipoCampanyaColumn {
                get {
                    return this.columnsIdTipoCampanya;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn fFUMColumn {
                get {
                    return this.columnfFUM;
                }
            }
            
            public Pedidos_CabRow this[int index] {
                get {
                    return ((Pedidos_CabRow)(this.Rows[index]));
                }
            }
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowChanged;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowChanging;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowDeleted;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowDeleting;
            
            public void AddPedidos_CabRow(Pedidos_CabRow row) {
                this.Rows.Add(row);
            }
            
            public Pedidos_CabRow AddPedidos_CabRow(
                        string sIdPedido, 
                        string sIdPedidoTemp, 
                        int iIdDelegado, 
                        string sIdTipoPedido, 
                        string sIdEstEntPedido, 
                        string sIdEstFacPedido, 
                        int iIdCliente, 
                        int iIdDestinatario, 
                        System.DateTime dFechaPedido, 
                        System.DateTime dFechaPreferente, 
                        System.DateTime dFechaFijada, 
                        string sOrgVentas, 
                        string sGrupoVendedor, 
                        string sCanal, 
                        string sSector, 
                        System.Double fImporte, 
                        System.Double fDescuento, 
                        string sIdTipoCampanya, 
                        string tObservaciones, 
                        short iEstado, 
                        System.DateTime fFUM) {
                Pedidos_CabRow rowPedidos_CabRow = ((Pedidos_CabRow)(this.NewRow()));
                rowPedidos_CabRow.ItemArray = new object[] {
                        sIdPedido,
                        sIdPedidoTemp,
                        iIdDelegado,
                        sIdTipoPedido,
                        sIdEstEntPedido,
                        sIdEstFacPedido,
                        iIdCliente,
                        iIdDestinatario,
                        dFechaPedido,
                        dFechaPreferente,
                        dFechaFijada,
                        sOrgVentas,
                        sGrupoVendedor,
                        sCanal,
                        sSector,
                        fImporte,
                        fDescuento,
                        sIdTipoCampanya,
                        tObservaciones,
                        iEstado,
                        fFUM};
                this.Rows.Add(rowPedidos_CabRow);
                return rowPedidos_CabRow;
            }
            
            public Pedidos_CabRow FindBysIdPedido(string sIdPedido) {
                return ((Pedidos_CabRow)(this.Rows.Find(new object[] {
                            sIdPedido})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pedidos_CabDataTable cln = ((Pedidos_CabDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pedidos_CabDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdPedido = this.Columns["sIdPedido"];
                this.columnsIdPedidoTemp = this.Columns["sIdPedidoTemp"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdTipoPedido = this.Columns["sIdTipoPedido"];
                this.columnsIdEstEntPedido = this.Columns["sIdEstEntPedido"];
                this.columnsIdEstFacPedido = this.Columns["sIdEstFacPedido"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdDestinatario = this.Columns["iIdDestinatario"];
                this.columndFechaPedido = this.Columns["dFechaPedido"];
                this.columndFechaPreferente = this.Columns["dFechaPreferente"];
                this.columndFechaFijada = this.Columns["dFechaFijada"];
                this.columnsOrgVentas = this.Columns["sOrgVentas"];
                this.columnsGrupoVendedor = this.Columns["sGrupoVendedor"];
                this.columnsCanal = this.Columns["sCanal"];
                this.columnsSector = this.Columns["sSector"];
                this.columnfImporte = this.Columns["fImporte"];
                this.columnfDescuento = this.Columns["fDescuento"];
                this.columnsIdTipoCampanya = this.Columns["sIdTipoCampanya"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columniEstado = this.Columns["iEstado"];
                this.columnfFUM = this.Columns["fFUM"];
            }
            
            private void InitClass() {
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.columnsIdPedidoTemp = new DataColumn("sIdPedidoTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedidoTemp);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdTipoPedido = new DataColumn("sIdTipoPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoPedido);
                this.columnsIdEstEntPedido = new DataColumn("sIdEstEntPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEstEntPedido);
                this.columnsIdEstFacPedido = new DataColumn("sIdEstFacPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEstFacPedido);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdDestinatario = new DataColumn("iIdDestinatario", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDestinatario);
                this.columndFechaPedido = new DataColumn("dFechaPedido", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPedido);
                this.columndFechaPreferente = new DataColumn("dFechaPreferente", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPreferente);
                this.columndFechaFijada = new DataColumn("dFechaFijada", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaFijada);
                this.columnsOrgVentas = new DataColumn("sOrgVentas", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsOrgVentas);
                this.columnsGrupoVendedor = new DataColumn("sGrupoVendedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsGrupoVendedor);
                this.columnsCanal = new DataColumn("sCanal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCanal);
                this.columnsSector = new DataColumn("sSector", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsSector);
                this.columnfImporte = new DataColumn("fImporte", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporte);
                this.columnfDescuento = new DataColumn("fDescuento", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfDescuento);
                this.columnsIdTipoCampanya = new DataColumn("sIdTipoCampanya", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoCampanya);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columnfFUM = new DataColumn("fFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey17", new DataColumn[] {
                                this.columnsIdPedido}, true));
                this.columnsIdPedido.AllowDBNull = false;
                this.columnsIdPedido.Unique = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columnsIdTipoPedido.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdDestinatario.AllowDBNull = false;
                this.columndFechaPedido.AllowDBNull = false;
                this.columndFechaPreferente.AllowDBNull = false;
                this.columndFechaFijada.AllowDBNull = false;
                this.columnsOrgVentas.AllowDBNull = false;
                this.columnsGrupoVendedor.AllowDBNull = false;
                this.columnsCanal.AllowDBNull = false;
                this.columnsSector.AllowDBNull = false;
                this.columnfImporte.AllowDBNull = false;
                this.columnfDescuento.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columnfFUM.AllowDBNull = false;
            }
            
            public Pedidos_CabRow NewPedidos_CabRow() {
                return ((Pedidos_CabRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pedidos_CabRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pedidos_CabRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pedidos_CabRowChanged != null)) {
                    this.Pedidos_CabRowChanged(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pedidos_CabRowChanging != null)) {
                    this.Pedidos_CabRowChanging(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pedidos_CabRowDeleted != null)) {
                    this.Pedidos_CabRowDeleted(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pedidos_CabRowDeleting != null)) {
                    this.Pedidos_CabRowDeleting(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePedidos_CabRow(Pedidos_CabRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabRow : DataRow {
            
            private Pedidos_CabDataTable tablePedidos_Cab;
            
            internal Pedidos_CabRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePedidos_Cab = ((Pedidos_CabDataTable)(this.Table));
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sIdPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sIdPedidoColumn] = value;
                }
            }
            
            public string sIdPedidoTemp {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdPedidoTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdPedidoTempColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdDelegadoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdTipoPedido {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sIdTipoPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sIdTipoPedidoColumn] = value;
                }
            }
            
            public string sIdEstEntPedido {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdEstEntPedidoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdEstEntPedidoColumn] = value;
                }
            }
            
            public string sIdEstFacPedido {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdEstFacPedidoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdEstFacPedidoColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdClienteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdClienteColumn] = value;
                }
            }
            
            public int iIdDestinatario {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdDestinatarioColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdDestinatarioColumn] = value;
                }
            }
            
            public System.DateTime dFechaPedido {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaPedidoColumn] = value;
                }
            }
            
            public System.DateTime dFechaPreferente {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaPreferenteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaPreferenteColumn] = value;
                }
            }
            
            public System.DateTime dFechaFijada {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaFijadaColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaFijadaColumn] = value;
                }
            }
            
            public string sOrgVentas {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sOrgVentasColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sOrgVentasColumn] = value;
                }
            }
            
            public string sGrupoVendedor {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sGrupoVendedorColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sGrupoVendedorColumn] = value;
                }
            }
            
            public string sCanal {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sCanalColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sCanalColumn] = value;
                }
            }
            
            public string sSector {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sSectorColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sSectorColumn] = value;
                }
            }
            
            public System.Double fImporte {
                get {
                    return ((System.Double)(this[this.tablePedidos_Cab.fImporteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fImporteColumn] = value;
                }
            }
            
            public System.Double fDescuento {
                get {
                    return ((System.Double)(this[this.tablePedidos_Cab.fDescuentoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fDescuentoColumn] = value;
                }
            }
            
            public string sIdTipoCampanya {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdTipoCampanyaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdTipoCampanyaColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.tObservacionesColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tablePedidos_Cab.iEstadoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime fFUM {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.fFUMColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fFUMColumn] = value;
                }
            }
            
            public bool IssIdPedidoTempNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdPedidoTempColumn);
            }
            
            public void SetsIdPedidoTempNull() {
                this[this.tablePedidos_Cab.sIdPedidoTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdEstEntPedidoNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdEstEntPedidoColumn);
            }
            
            public void SetsIdEstEntPedidoNull() {
                this[this.tablePedidos_Cab.sIdEstEntPedidoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdEstFacPedidoNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdEstFacPedidoColumn);
            }
            
            public void SetsIdEstFacPedidoNull() {
                this[this.tablePedidos_Cab.sIdEstFacPedidoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoCampanyaNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdTipoCampanyaColumn);
            }
            
            public void SetsIdTipoCampanyaNull() {
                this[this.tablePedidos_Cab.sIdTipoCampanyaColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tablePedidos_Cab.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tablePedidos_Cab.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public Pedidos_LinRow[] GetPedidos_LinRows() {
                return ((Pedidos_LinRow[])(this.GetChildRows(this.Table.ChildRelations["Pedidos_CabPedidos_Lin"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabRowChangeEvent : EventArgs {
            
            private Pedidos_CabRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pedidos_CabRowChangeEvent(Pedidos_CabRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pedidos_CabRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdPedido;
            
            private DataColumn columniIdLinea;
            
            private DataColumn columnsIdMaterial;
            
            private DataColumn columniCantidad;
            
            private DataColumn columnfPrecio;
            
            private DataColumn columnsIdTipoPosicion;
            
            private DataColumn columnbEntregado;
            
            private DataColumn columndFechaPreferente;
            
            private DataColumn columnsCentro;
            
            private DataColumn columnsAlmacen;
            
            private DataColumn columnfDescuento;
            
            private DataColumn columniBonificacion;
            
            internal Pedidos_LinDataTable() : 
                    base("Pedidos_Lin") {
                this.InitClass();
            }
            
            internal Pedidos_LinDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            internal DataColumn iIdLineaColumn {
                get {
                    return this.columniIdLinea;
                }
            }
            
            internal DataColumn sIdMaterialColumn {
                get {
                    return this.columnsIdMaterial;
                }
            }
            
            internal DataColumn iCantidadColumn {
                get {
                    return this.columniCantidad;
                }
            }
            
            internal DataColumn fPrecioColumn {
                get {
                    return this.columnfPrecio;
                }
            }
            
            internal DataColumn sIdTipoPosicionColumn {
                get {
                    return this.columnsIdTipoPosicion;
                }
            }
            
            internal DataColumn bEntregadoColumn {
                get {
                    return this.columnbEntregado;
                }
            }
            
            internal DataColumn dFechaPreferenteColumn {
                get {
                    return this.columndFechaPreferente;
                }
            }
            
            internal DataColumn sCentroColumn {
                get {
                    return this.columnsCentro;
                }
            }
            
            internal DataColumn sAlmacenColumn {
                get {
                    return this.columnsAlmacen;
                }
            }
            
            internal DataColumn fDescuentoColumn {
                get {
                    return this.columnfDescuento;
                }
            }
            
            internal DataColumn iBonificacionColumn {
                get {
                    return this.columniBonificacion;
                }
            }
            
            public Pedidos_LinRow this[int index] {
                get {
                    return ((Pedidos_LinRow)(this.Rows[index]));
                }
            }
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowChanged;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowChanging;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowDeleted;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowDeleting;
            
            public void AddPedidos_LinRow(Pedidos_LinRow row) {
                this.Rows.Add(row);
            }
            
            public Pedidos_LinRow AddPedidos_LinRow(Pedidos_CabRow parentPedidos_CabRowByPedidos_CabPedidos_Lin, int iIdLinea, string sIdMaterial, int iCantidad, System.Double fPrecio, string sIdTipoPosicion, bool bEntregado, System.DateTime dFechaPreferente, string sCentro, string sAlmacen, System.Double fDescuento, int iBonificacion) {
                Pedidos_LinRow rowPedidos_LinRow = ((Pedidos_LinRow)(this.NewRow()));
                rowPedidos_LinRow.ItemArray = new object[] {
                        parentPedidos_CabRowByPedidos_CabPedidos_Lin[0],
                        iIdLinea,
                        sIdMaterial,
                        iCantidad,
                        fPrecio,
                        sIdTipoPosicion,
                        bEntregado,
                        dFechaPreferente,
                        sCentro,
                        sAlmacen,
                        fDescuento,
                        iBonificacion};
                this.Rows.Add(rowPedidos_LinRow);
                return rowPedidos_LinRow;
            }
            
            public Pedidos_LinRow FindBysIdPedidoiIdLinea(string sIdPedido, int iIdLinea) {
                return ((Pedidos_LinRow)(this.Rows.Find(new object[] {
                            sIdPedido,
                            iIdLinea})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pedidos_LinDataTable cln = ((Pedidos_LinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pedidos_LinDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdPedido = this.Columns["sIdPedido"];
                this.columniIdLinea = this.Columns["iIdLinea"];
                this.columnsIdMaterial = this.Columns["sIdMaterial"];
                this.columniCantidad = this.Columns["iCantidad"];
                this.columnfPrecio = this.Columns["fPrecio"];
                this.columnsIdTipoPosicion = this.Columns["sIdTipoPosicion"];
                this.columnbEntregado = this.Columns["bEntregado"];
                this.columndFechaPreferente = this.Columns["dFechaPreferente"];
                this.columnsCentro = this.Columns["sCentro"];
                this.columnsAlmacen = this.Columns["sAlmacen"];
                this.columnfDescuento = this.Columns["fDescuento"];
                this.columniBonificacion = this.Columns["iBonificacion"];
            }
            
            private void InitClass() {
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.columniIdLinea = new DataColumn("iIdLinea", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdLinea);
                this.columnsIdMaterial = new DataColumn("sIdMaterial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdMaterial);
                this.columniCantidad = new DataColumn("iCantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidad);
                this.columnfPrecio = new DataColumn("fPrecio", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPrecio);
                this.columnsIdTipoPosicion = new DataColumn("sIdTipoPosicion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoPosicion);
                this.columnbEntregado = new DataColumn("bEntregado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEntregado);
                this.columndFechaPreferente = new DataColumn("dFechaPreferente", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPreferente);
                this.columnsCentro = new DataColumn("sCentro", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCentro);
                this.columnsAlmacen = new DataColumn("sAlmacen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsAlmacen);
                this.columnfDescuento = new DataColumn("fDescuento", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfDescuento);
                this.columniBonificacion = new DataColumn("iBonificacion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniBonificacion);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey18", new DataColumn[] {
                                this.columnsIdPedido,
                                this.columniIdLinea}, true));
                this.columnsIdPedido.AllowDBNull = false;
                this.columniIdLinea.AllowDBNull = false;
                this.columnsIdMaterial.AllowDBNull = false;
                this.columniCantidad.AllowDBNull = false;
                this.columnfPrecio.AllowDBNull = false;
                this.columnsIdTipoPosicion.AllowDBNull = false;
                this.columnbEntregado.AllowDBNull = false;
                this.columndFechaPreferente.AllowDBNull = false;
                this.columnsCentro.AllowDBNull = false;
                this.columnsAlmacen.AllowDBNull = false;
                this.columnfDescuento.AllowDBNull = false;
                this.columniBonificacion.AllowDBNull = false;
            }
            
            public Pedidos_LinRow NewPedidos_LinRow() {
                return ((Pedidos_LinRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pedidos_LinRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pedidos_LinRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pedidos_LinRowChanged != null)) {
                    this.Pedidos_LinRowChanged(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pedidos_LinRowChanging != null)) {
                    this.Pedidos_LinRowChanging(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pedidos_LinRowDeleted != null)) {
                    this.Pedidos_LinRowDeleted(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pedidos_LinRowDeleting != null)) {
                    this.Pedidos_LinRowDeleting(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePedidos_LinRow(Pedidos_LinRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinRow : DataRow {
            
            private Pedidos_LinDataTable tablePedidos_Lin;
            
            internal Pedidos_LinRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePedidos_Lin = ((Pedidos_LinDataTable)(this.Table));
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sIdPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sIdPedidoColumn] = value;
                }
            }
            
            public int iIdLinea {
                get {
                    return ((int)(this[this.tablePedidos_Lin.iIdLineaColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.iIdLineaColumn] = value;
                }
            }
            
            public string sIdMaterial {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sIdMaterialColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sIdMaterialColumn] = value;
                }
            }
            
            public int iCantidad {
                get {
                    return ((int)(this[this.tablePedidos_Lin.iCantidadColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.iCantidadColumn] = value;
                }
            }
            
            public System.Double fPrecio {
                get {
                    return ((System.Double)(this[this.tablePedidos_Lin.fPrecioColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.fPrecioColumn] = value;
                }
            }
            
            public string sIdTipoPosicion {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sIdTipoPosicionColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sIdTipoPosicionColumn] = value;
                }
            }
            
            public bool bEntregado {
                get {
                    return ((bool)(this[this.tablePedidos_Lin.bEntregadoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.bEntregadoColumn] = value;
                }
            }
            
            public System.DateTime dFechaPreferente {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Lin.dFechaPreferenteColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.dFechaPreferenteColumn] = value;
                }
            }
            
            public string sCentro {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sCentroColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sCentroColumn] = value;
                }
            }
            
            public string sAlmacen {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sAlmacenColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sAlmacenColumn] = value;
                }
            }
            
            public System.Double fDescuento {
                get {
                    return ((System.Double)(this[this.tablePedidos_Lin.fDescuentoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.fDescuentoColumn] = value;
                }
            }
            
            public int iBonificacion {
                get {
                    return ((int)(this[this.tablePedidos_Lin.iBonificacionColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.iBonificacionColumn] = value;
                }
            }
            
            public Pedidos_CabRow Pedidos_CabRow {
                get {
                    return ((Pedidos_CabRow)(this.GetParentRow(this.Table.ParentRelations["Pedidos_CabPedidos_Lin"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Pedidos_CabPedidos_Lin"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinRowChangeEvent : EventArgs {
            
            private Pedidos_LinRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pedidos_LinRowChangeEvent(Pedidos_LinRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pedidos_LinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CabDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdReportTemp;
            
            private DataColumn columnsTipoRActividad;
            
            private DataColumn columnsIdTipoCliente;
            
            private DataColumn columniIdCentro;
            
            private DataColumn columndFecha;
            
            private DataColumn columniHorario;
            
            private DataColumn columntObjetivo;
            
            private DataColumn columntProxObjetivo;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnbPlanificacion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal RepActividad_CabDataTable() : 
                    base("RepActividad_Cab") {
                this.InitClass();
            }
            
            internal RepActividad_CabDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdReportTempColumn {
                get {
                    return this.columnsIdReportTemp;
                }
            }
            
            internal DataColumn sTipoRActividadColumn {
                get {
                    return this.columnsTipoRActividad;
                }
            }
            
            internal DataColumn sIdTipoClienteColumn {
                get {
                    return this.columnsIdTipoCliente;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            internal DataColumn iHorarioColumn {
                get {
                    return this.columniHorario;
                }
            }
            
            internal DataColumn tObjetivoColumn {
                get {
                    return this.columntObjetivo;
                }
            }
            
            internal DataColumn tProxObjetivoColumn {
                get {
                    return this.columntProxObjetivo;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn bPlanificacionColumn {
                get {
                    return this.columnbPlanificacion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public RepActividad_CabRow this[int index] {
                get {
                    return ((RepActividad_CabRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_CabRowChangeEventHandler RepActividad_CabRowChanged;
            
            public event RepActividad_CabRowChangeEventHandler RepActividad_CabRowChanging;
            
            public event RepActividad_CabRowChangeEventHandler RepActividad_CabRowDeleted;
            
            public event RepActividad_CabRowChangeEventHandler RepActividad_CabRowDeleting;
            
            public void AddRepActividad_CabRow(RepActividad_CabRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_CabRow AddRepActividad_CabRow(int iIdDelegado, string sIdReportTemp, string sTipoRActividad, string sIdTipoCliente, int iIdCentro, System.DateTime dFecha, string iHorario, string tObjetivo, string tProxObjetivo, string tObservaciones, short bPlanificacion, System.DateTime dFUM, short iEstado) {
                RepActividad_CabRow rowRepActividad_CabRow = ((RepActividad_CabRow)(this.NewRow()));
                rowRepActividad_CabRow.ItemArray = new object[] {
                        null,
                        iIdDelegado,
                        sIdReportTemp,
                        sTipoRActividad,
                        sIdTipoCliente,
                        iIdCentro,
                        dFecha,
                        iHorario,
                        tObjetivo,
                        tProxObjetivo,
                        tObservaciones,
                        bPlanificacion,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowRepActividad_CabRow);
                return rowRepActividad_CabRow;
            }
            
            public RepActividad_CabRow FindByiIdReport(int iIdReport) {
                return ((RepActividad_CabRow)(this.Rows.Find(new object[] {
                            iIdReport})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_CabDataTable cln = ((RepActividad_CabDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_CabDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdReportTemp = this.Columns["sIdReportTemp"];
                this.columnsTipoRActividad = this.Columns["sTipoRActividad"];
                this.columnsIdTipoCliente = this.Columns["sIdTipoCliente"];
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columndFecha = this.Columns["dFecha"];
                this.columniHorario = this.Columns["iHorario"];
                this.columntObjetivo = this.Columns["tObjetivo"];
                this.columntProxObjetivo = this.Columns["tProxObjetivo"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnbPlanificacion = this.Columns["bPlanificacion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdReportTemp = new DataColumn("sIdReportTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdReportTemp);
                this.columnsTipoRActividad = new DataColumn("sTipoRActividad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoRActividad);
                this.columnsIdTipoCliente = new DataColumn("sIdTipoCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoCliente);
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.columniHorario = new DataColumn("iHorario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniHorario);
                this.columntObjetivo = new DataColumn("tObjetivo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObjetivo);
                this.columntProxObjetivo = new DataColumn("tProxObjetivo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObjetivo);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnbPlanificacion = new DataColumn("bPlanificacion", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbPlanificacion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey19", new DataColumn[] {
                                this.columniIdReport}, true));
                this.columniIdReport.AutoIncrement = true;
                this.columniIdReport.AllowDBNull = false;
                this.columniIdReport.ReadOnly = true;
                this.columniIdReport.Unique = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columndFecha.AllowDBNull = false;
                this.columnbPlanificacion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public RepActividad_CabRow NewRepActividad_CabRow() {
                return ((RepActividad_CabRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_CabRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_CabRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_CabRowChanged != null)) {
                    this.RepActividad_CabRowChanged(this, new RepActividad_CabRowChangeEvent(((RepActividad_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_CabRowChanging != null)) {
                    this.RepActividad_CabRowChanging(this, new RepActividad_CabRowChangeEvent(((RepActividad_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_CabRowDeleted != null)) {
                    this.RepActividad_CabRowDeleted(this, new RepActividad_CabRowChangeEvent(((RepActividad_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_CabRowDeleting != null)) {
                    this.RepActividad_CabRowDeleting(this, new RepActividad_CabRowChangeEvent(((RepActividad_CabRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_CabRow(RepActividad_CabRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CabRow : DataRow {
            
            private RepActividad_CabDataTable tableRepActividad_Cab;
            
            internal RepActividad_CabRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Cab = ((RepActividad_CabDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Cab.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.iIdReportColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableRepActividad_Cab.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdReportTemp {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.sIdReportTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.sIdReportTempColumn] = value;
                }
            }
            
            public string sTipoRActividad {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.sTipoRActividadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.sTipoRActividadColumn] = value;
                }
            }
            
            public string sIdTipoCliente {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.sIdTipoClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.sIdTipoClienteColumn] = value;
                }
            }
            
            public int iIdCentro {
                get {
                    try {
                        return ((int)(this[this.tableRepActividad_Cab.iIdCentroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.iIdCentroColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableRepActividad_Cab.dFechaColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.dFechaColumn] = value;
                }
            }
            
            public string iHorario {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.iHorarioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.iHorarioColumn] = value;
                }
            }
            
            public string tObjetivo {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.tObjetivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.tObjetivoColumn] = value;
                }
            }
            
            public string tProxObjetivo {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.tProxObjetivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.tProxObjetivoColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cab.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cab.tObservacionesColumn] = value;
                }
            }
            
            public short bPlanificacion {
                get {
                    return ((short)(this[this.tableRepActividad_Cab.bPlanificacionColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.bPlanificacionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableRepActividad_Cab.dFUMColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableRepActividad_Cab.iEstadoColumn]));
                }
                set {
                    this[this.tableRepActividad_Cab.iEstadoColumn] = value;
                }
            }
            
            public bool IssIdReportTempNull() {
                return this.IsNull(this.tableRepActividad_Cab.sIdReportTempColumn);
            }
            
            public void SetsIdReportTempNull() {
                this[this.tableRepActividad_Cab.sIdReportTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssTipoRActividadNull() {
                return this.IsNull(this.tableRepActividad_Cab.sTipoRActividadColumn);
            }
            
            public void SetsTipoRActividadNull() {
                this[this.tableRepActividad_Cab.sTipoRActividadColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoClienteNull() {
                return this.IsNull(this.tableRepActividad_Cab.sIdTipoClienteColumn);
            }
            
            public void SetsIdTipoClienteNull() {
                this[this.tableRepActividad_Cab.sIdTipoClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdCentroNull() {
                return this.IsNull(this.tableRepActividad_Cab.iIdCentroColumn);
            }
            
            public void SetiIdCentroNull() {
                this[this.tableRepActividad_Cab.iIdCentroColumn] = System.Convert.DBNull;
            }
            
            public bool IsiHorarioNull() {
                return this.IsNull(this.tableRepActividad_Cab.iHorarioColumn);
            }
            
            public void SetiHorarioNull() {
                this[this.tableRepActividad_Cab.iHorarioColumn] = System.Convert.DBNull;
            }
            
            public bool IstObjetivoNull() {
                return this.IsNull(this.tableRepActividad_Cab.tObjetivoColumn);
            }
            
            public void SettObjetivoNull() {
                this[this.tableRepActividad_Cab.tObjetivoColumn] = System.Convert.DBNull;
            }
            
            public bool IstProxObjetivoNull() {
                return this.IsNull(this.tableRepActividad_Cab.tProxObjetivoColumn);
            }
            
            public void SettProxObjetivoNull() {
                this[this.tableRepActividad_Cab.tProxObjetivoColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableRepActividad_Cab.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableRepActividad_Cab.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public RepActividad_PromRow[] GetRepActividad_PromRows() {
                return ((RepActividad_PromRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividad_CabRepActividad_Prom"])));
            }
            
            public RepActividad_AtenRow[] GetRepActividad_AtenRows() {
                return ((RepActividad_AtenRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividad_CabRepActividad_Aten"])));
            }
            
            public RepActividad_GadRow[] GetRepActividad_GadRows() {
                return ((RepActividad_GadRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividad_CabRepActividad_Gad"])));
            }
            
            public RepActividad_PedRow[] GetRepActividad_PedRows() {
                return ((RepActividad_PedRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividad_CabRepActividad_Ped"])));
            }
            
            public RepActividadCli_ProxObjRow[] GetRepActividadCli_ProxObjRows() {
                return ((RepActividadCli_ProxObjRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividad_CabRepActividadCli_ProxObj"])));
            }
            
            public RepActividad_CliRow[] GetRepActividad_CliRows() {
                return ((RepActividad_CliRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividad_CabRepActividad_Cli"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CabRowChangeEvent : EventArgs {
            
            private RepActividad_CabRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_CabRowChangeEvent(RepActividad_CabRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_CabRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CliDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columntObjetivos;
            
            private DataColumn columntProxObj;
            
            private DataColumn columnbSustituto;
            
            internal RepActividad_CliDataTable() : 
                    base("RepActividad_Cli") {
                this.InitClass();
            }
            
            internal RepActividad_CliDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn tObjetivosColumn {
                get {
                    return this.columntObjetivos;
                }
            }
            
            internal DataColumn tProxObjColumn {
                get {
                    return this.columntProxObj;
                }
            }
            
            internal DataColumn bSustitutoColumn {
                get {
                    return this.columnbSustituto;
                }
            }
            
            public RepActividad_CliRow this[int index] {
                get {
                    return ((RepActividad_CliRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_CliRowChangeEventHandler RepActividad_CliRowChanged;
            
            public event RepActividad_CliRowChangeEventHandler RepActividad_CliRowChanging;
            
            public event RepActividad_CliRowChangeEventHandler RepActividad_CliRowDeleted;
            
            public event RepActividad_CliRowChangeEventHandler RepActividad_CliRowDeleting;
            
            public void AddRepActividad_CliRow(RepActividad_CliRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_CliRow AddRepActividad_CliRow(RepActividad_CabRow parentRepActividad_CabRowByRepActividad_CabRepActividad_Cli, int iIdCliente, string tObservaciones, string tObjetivos, string tProxObj, bool bSustituto) {
                RepActividad_CliRow rowRepActividad_CliRow = ((RepActividad_CliRow)(this.NewRow()));
                rowRepActividad_CliRow.ItemArray = new object[] {
                        parentRepActividad_CabRowByRepActividad_CabRepActividad_Cli[0],
                        iIdCliente,
                        tObservaciones,
                        tObjetivos,
                        tProxObj,
                        bSustituto};
                this.Rows.Add(rowRepActividad_CliRow);
                return rowRepActividad_CliRow;
            }
            
            public RepActividad_CliRow FindByiIdReportiIdCliente(int iIdReport, int iIdCliente) {
                return ((RepActividad_CliRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            iIdCliente})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_CliDataTable cln = ((RepActividad_CliDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_CliDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columntObjetivos = this.Columns["tObjetivos"];
                this.columntProxObj = this.Columns["tProxObj"];
                this.columnbSustituto = this.Columns["bSustituto"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columntObjetivos = new DataColumn("tObjetivos", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObjetivos);
                this.columntProxObj = new DataColumn("tProxObj", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObj);
                this.columnbSustituto = new DataColumn("bSustituto", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbSustituto);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey20", new DataColumn[] {
                                this.columniIdReport,
                                this.columniIdCliente}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columnbSustituto.AllowDBNull = false;
            }
            
            public RepActividad_CliRow NewRepActividad_CliRow() {
                return ((RepActividad_CliRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_CliRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_CliRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_CliRowChanged != null)) {
                    this.RepActividad_CliRowChanged(this, new RepActividad_CliRowChangeEvent(((RepActividad_CliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_CliRowChanging != null)) {
                    this.RepActividad_CliRowChanging(this, new RepActividad_CliRowChangeEvent(((RepActividad_CliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_CliRowDeleted != null)) {
                    this.RepActividad_CliRowDeleted(this, new RepActividad_CliRowChangeEvent(((RepActividad_CliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_CliRowDeleting != null)) {
                    this.RepActividad_CliRowDeleting(this, new RepActividad_CliRowChangeEvent(((RepActividad_CliRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_CliRow(RepActividad_CliRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CliRow : DataRow {
            
            private RepActividad_CliDataTable tableRepActividad_Cli;
            
            internal RepActividad_CliRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Cli = ((RepActividad_CliDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Cli.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Cli.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividad_Cli.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividad_Cli.iIdClienteColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cli.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cli.tObservacionesColumn] = value;
                }
            }
            
            public string tObjetivos {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cli.tObjetivosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cli.tObjetivosColumn] = value;
                }
            }
            
            public string tProxObj {
                get {
                    try {
                        return ((string)(this[this.tableRepActividad_Cli.tProxObjColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividad_Cli.tProxObjColumn] = value;
                }
            }
            
            public bool bSustituto {
                get {
                    return ((bool)(this[this.tableRepActividad_Cli.bSustitutoColumn]));
                }
                set {
                    this[this.tableRepActividad_Cli.bSustitutoColumn] = value;
                }
            }
            
            public RepActividad_CabRow RepActividad_CabRow {
                get {
                    return ((RepActividad_CabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividad_CabRepActividad_Cli"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividad_CabRepActividad_Cli"]);
                }
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableRepActividad_Cli.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableRepActividad_Cli.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IstObjetivosNull() {
                return this.IsNull(this.tableRepActividad_Cli.tObjetivosColumn);
            }
            
            public void SettObjetivosNull() {
                this[this.tableRepActividad_Cli.tObjetivosColumn] = System.Convert.DBNull;
            }
            
            public bool IstProxObjNull() {
                return this.IsNull(this.tableRepActividad_Cli.tProxObjColumn);
            }
            
            public void SettProxObjNull() {
                this[this.tableRepActividad_Cli.tProxObjColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_CliRowChangeEvent : EventArgs {
            
            private RepActividad_CliRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_CliRowChangeEvent(RepActividad_CliRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_CliRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCli_ProxObjDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCentro;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdReport;
            
            private DataColumn columntProxObj;
            
            private DataColumn columndFecha;
            
            internal RepActividadCli_ProxObjDataTable() : 
                    base("RepActividadCli_ProxObj") {
                this.InitClass();
            }
            
            internal RepActividadCli_ProxObjDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn tProxObjColumn {
                get {
                    return this.columntProxObj;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            public RepActividadCli_ProxObjRow this[int index] {
                get {
                    return ((RepActividadCli_ProxObjRow)(this.Rows[index]));
                }
            }
            
            public event RepActividadCli_ProxObjRowChangeEventHandler RepActividadCli_ProxObjRowChanged;
            
            public event RepActividadCli_ProxObjRowChangeEventHandler RepActividadCli_ProxObjRowChanging;
            
            public event RepActividadCli_ProxObjRowChangeEventHandler RepActividadCli_ProxObjRowDeleted;
            
            public event RepActividadCli_ProxObjRowChangeEventHandler RepActividadCli_ProxObjRowDeleting;
            
            public void AddRepActividadCli_ProxObjRow(RepActividadCli_ProxObjRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividadCli_ProxObjRow AddRepActividadCli_ProxObjRow(int iIdCentro, int iIdCliente, RepActividad_CabRow parentRepActividad_CabRowByRepActividad_CabRepActividadCli_ProxObj, string tProxObj, System.DateTime dFecha) {
                RepActividadCli_ProxObjRow rowRepActividadCli_ProxObjRow = ((RepActividadCli_ProxObjRow)(this.NewRow()));
                rowRepActividadCli_ProxObjRow.ItemArray = new object[] {
                        iIdCentro,
                        iIdCliente,
                        parentRepActividad_CabRowByRepActividad_CabRepActividadCli_ProxObj[0],
                        tProxObj,
                        dFecha};
                this.Rows.Add(rowRepActividadCli_ProxObjRow);
                return rowRepActividadCli_ProxObjRow;
            }
            
            public RepActividadCli_ProxObjRow FindByiIdCentroiIdClienteiIdReport(int iIdCentro, int iIdCliente, int iIdReport) {
                return ((RepActividadCli_ProxObjRow)(this.Rows.Find(new object[] {
                            iIdCentro,
                            iIdCliente,
                            iIdReport})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividadCli_ProxObjDataTable cln = ((RepActividadCli_ProxObjDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividadCli_ProxObjDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdReport = this.Columns["iIdReport"];
                this.columntProxObj = this.Columns["tProxObj"];
                this.columndFecha = this.Columns["dFecha"];
            }
            
            private void InitClass() {
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columntProxObj = new DataColumn("tProxObj", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObj);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey21", new DataColumn[] {
                                this.columniIdCentro,
                                this.columniIdCliente,
                                this.columniIdReport}, true));
                this.columniIdCentro.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdReport.AllowDBNull = false;
                this.columntProxObj.AllowDBNull = false;
                this.columndFecha.AllowDBNull = false;
            }
            
            public RepActividadCli_ProxObjRow NewRepActividadCli_ProxObjRow() {
                return ((RepActividadCli_ProxObjRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividadCli_ProxObjRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividadCli_ProxObjRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividadCli_ProxObjRowChanged != null)) {
                    this.RepActividadCli_ProxObjRowChanged(this, new RepActividadCli_ProxObjRowChangeEvent(((RepActividadCli_ProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividadCli_ProxObjRowChanging != null)) {
                    this.RepActividadCli_ProxObjRowChanging(this, new RepActividadCli_ProxObjRowChangeEvent(((RepActividadCli_ProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividadCli_ProxObjRowDeleted != null)) {
                    this.RepActividadCli_ProxObjRowDeleted(this, new RepActividadCli_ProxObjRowChangeEvent(((RepActividadCli_ProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividadCli_ProxObjRowDeleting != null)) {
                    this.RepActividadCli_ProxObjRowDeleting(this, new RepActividadCli_ProxObjRowChangeEvent(((RepActividadCli_ProxObjRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividadCli_ProxObjRow(RepActividadCli_ProxObjRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCli_ProxObjRow : DataRow {
            
            private RepActividadCli_ProxObjDataTable tableRepActividadCli_ProxObj;
            
            internal RepActividadCli_ProxObjRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividadCli_ProxObj = ((RepActividadCli_ProxObjDataTable)(this.Table));
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableRepActividadCli_ProxObj.iIdCentroColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.iIdCentroColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividadCli_ProxObj.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.iIdClienteColumn] = value;
                }
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividadCli_ProxObj.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.iIdReportColumn] = value;
                }
            }
            
            public string tProxObj {
                get {
                    return ((string)(this[this.tableRepActividadCli_ProxObj.tProxObjColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.tProxObjColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableRepActividadCli_ProxObj.dFechaColumn]));
                }
                set {
                    this[this.tableRepActividadCli_ProxObj.dFechaColumn] = value;
                }
            }
            
            public RepActividad_CabRow RepActividad_CabRow {
                get {
                    return ((RepActividad_CabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividad_CabRepActividadCli_ProxObj"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividad_CabRepActividadCli_ProxObj"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCli_ProxObjRowChangeEvent : EventArgs {
            
            private RepActividadCli_ProxObjRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividadCli_ProxObjRowChangeEvent(RepActividadCli_ProxObjRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividadCli_ProxObjRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PedDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columnsIdPedido;
            
            internal RepActividad_PedDataTable() : 
                    base("RepActividad_Ped") {
                this.InitClass();
            }
            
            internal RepActividad_PedDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            public RepActividad_PedRow this[int index] {
                get {
                    return ((RepActividad_PedRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_PedRowChangeEventHandler RepActividad_PedRowChanged;
            
            public event RepActividad_PedRowChangeEventHandler RepActividad_PedRowChanging;
            
            public event RepActividad_PedRowChangeEventHandler RepActividad_PedRowDeleted;
            
            public event RepActividad_PedRowChangeEventHandler RepActividad_PedRowDeleting;
            
            public void AddRepActividad_PedRow(RepActividad_PedRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_PedRow AddRepActividad_PedRow(RepActividad_CabRow parentRepActividad_CabRowByRepActividad_CabRepActividad_Ped, string sIdPedido) {
                RepActividad_PedRow rowRepActividad_PedRow = ((RepActividad_PedRow)(this.NewRow()));
                rowRepActividad_PedRow.ItemArray = new object[] {
                        parentRepActividad_CabRowByRepActividad_CabRepActividad_Ped[0],
                        sIdPedido};
                this.Rows.Add(rowRepActividad_PedRow);
                return rowRepActividad_PedRow;
            }
            
            public RepActividad_PedRow FindByiIdReportsIdPedido(int iIdReport, string sIdPedido) {
                return ((RepActividad_PedRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            sIdPedido})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_PedDataTable cln = ((RepActividad_PedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_PedDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columnsIdPedido = this.Columns["sIdPedido"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey22", new DataColumn[] {
                                this.columniIdReport,
                                this.columnsIdPedido}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columnsIdPedido.AllowDBNull = false;
            }
            
            public RepActividad_PedRow NewRepActividad_PedRow() {
                return ((RepActividad_PedRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_PedRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_PedRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_PedRowChanged != null)) {
                    this.RepActividad_PedRowChanged(this, new RepActividad_PedRowChangeEvent(((RepActividad_PedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_PedRowChanging != null)) {
                    this.RepActividad_PedRowChanging(this, new RepActividad_PedRowChangeEvent(((RepActividad_PedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_PedRowDeleted != null)) {
                    this.RepActividad_PedRowDeleted(this, new RepActividad_PedRowChangeEvent(((RepActividad_PedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_PedRowDeleting != null)) {
                    this.RepActividad_PedRowDeleting(this, new RepActividad_PedRowChangeEvent(((RepActividad_PedRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_PedRow(RepActividad_PedRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PedRow : DataRow {
            
            private RepActividad_PedDataTable tableRepActividad_Ped;
            
            internal RepActividad_PedRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Ped = ((RepActividad_PedDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Ped.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Ped.iIdReportColumn] = value;
                }
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tableRepActividad_Ped.sIdPedidoColumn]));
                }
                set {
                    this[this.tableRepActividad_Ped.sIdPedidoColumn] = value;
                }
            }
            
            public RepActividad_CabRow RepActividad_CabRow {
                get {
                    return ((RepActividad_CabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividad_CabRepActividad_Ped"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividad_CabRepActividad_Ped"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PedRowChangeEvent : EventArgs {
            
            private RepActividad_PedRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_PedRowChangeEvent(RepActividad_PedRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_PedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_GadDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdAccion;
            
            private DataColumn columniCantidad;
            
            internal RepActividad_GadDataTable() : 
                    base("RepActividad_Gad") {
                this.InitClass();
            }
            
            internal RepActividad_GadDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdAccionColumn {
                get {
                    return this.columniIdAccion;
                }
            }
            
            internal DataColumn iCantidadColumn {
                get {
                    return this.columniCantidad;
                }
            }
            
            public RepActividad_GadRow this[int index] {
                get {
                    return ((RepActividad_GadRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_GadRowChangeEventHandler RepActividad_GadRowChanged;
            
            public event RepActividad_GadRowChangeEventHandler RepActividad_GadRowChanging;
            
            public event RepActividad_GadRowChangeEventHandler RepActividad_GadRowDeleted;
            
            public event RepActividad_GadRowChangeEventHandler RepActividad_GadRowDeleting;
            
            public void AddRepActividad_GadRow(RepActividad_GadRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_GadRow AddRepActividad_GadRow(RepActividad_CabRow parentRepActividad_CabRowByRepActividad_CabRepActividad_Gad, int iIdCliente, int iIdAccion, int iCantidad) {
                RepActividad_GadRow rowRepActividad_GadRow = ((RepActividad_GadRow)(this.NewRow()));
                rowRepActividad_GadRow.ItemArray = new object[] {
                        parentRepActividad_CabRowByRepActividad_CabRepActividad_Gad[0],
                        iIdCliente,
                        iIdAccion,
                        iCantidad};
                this.Rows.Add(rowRepActividad_GadRow);
                return rowRepActividad_GadRow;
            }
            
            public RepActividad_GadRow FindByiIdReportiIdClienteiIdAccion(int iIdReport, int iIdCliente, int iIdAccion) {
                return ((RepActividad_GadRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            iIdCliente,
                            iIdAccion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_GadDataTable cln = ((RepActividad_GadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_GadDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdAccion = this.Columns["iIdAccion"];
                this.columniCantidad = this.Columns["iCantidad"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdAccion = new DataColumn("iIdAccion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAccion);
                this.columniCantidad = new DataColumn("iCantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidad);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey23", new DataColumn[] {
                                this.columniIdReport,
                                this.columniIdCliente,
                                this.columniIdAccion}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdAccion.AllowDBNull = false;
                this.columniCantidad.AllowDBNull = false;
            }
            
            public RepActividad_GadRow NewRepActividad_GadRow() {
                return ((RepActividad_GadRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_GadRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_GadRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_GadRowChanged != null)) {
                    this.RepActividad_GadRowChanged(this, new RepActividad_GadRowChangeEvent(((RepActividad_GadRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_GadRowChanging != null)) {
                    this.RepActividad_GadRowChanging(this, new RepActividad_GadRowChangeEvent(((RepActividad_GadRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_GadRowDeleted != null)) {
                    this.RepActividad_GadRowDeleted(this, new RepActividad_GadRowChangeEvent(((RepActividad_GadRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_GadRowDeleting != null)) {
                    this.RepActividad_GadRowDeleting(this, new RepActividad_GadRowChangeEvent(((RepActividad_GadRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_GadRow(RepActividad_GadRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_GadRow : DataRow {
            
            private RepActividad_GadDataTable tableRepActividad_Gad;
            
            internal RepActividad_GadRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Gad = ((RepActividad_GadDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Gad.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Gad.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividad_Gad.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividad_Gad.iIdClienteColumn] = value;
                }
            }
            
            public int iIdAccion {
                get {
                    return ((int)(this[this.tableRepActividad_Gad.iIdAccionColumn]));
                }
                set {
                    this[this.tableRepActividad_Gad.iIdAccionColumn] = value;
                }
            }
            
            public int iCantidad {
                get {
                    return ((int)(this[this.tableRepActividad_Gad.iCantidadColumn]));
                }
                set {
                    this[this.tableRepActividad_Gad.iCantidadColumn] = value;
                }
            }
            
            public RepActividad_CabRow RepActividad_CabRow {
                get {
                    return ((RepActividad_CabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividad_CabRepActividad_Gad"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividad_CabRepActividad_Gad"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_GadRowChangeEvent : EventArgs {
            
            private RepActividad_GadRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_GadRowChangeEvent(RepActividad_GadRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_GadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_AtenDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdAtencion;
            
            private DataColumn columniNumAtencion;
            
            private DataColumn columnfImporte;
            
            internal RepActividad_AtenDataTable() : 
                    base("RepActividad_Aten") {
                this.InitClass();
            }
            
            internal RepActividad_AtenDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdAtencionColumn {
                get {
                    return this.columniIdAtencion;
                }
            }
            
            internal DataColumn iNumAtencionColumn {
                get {
                    return this.columniNumAtencion;
                }
            }
            
            internal DataColumn fImporteColumn {
                get {
                    return this.columnfImporte;
                }
            }
            
            public RepActividad_AtenRow this[int index] {
                get {
                    return ((RepActividad_AtenRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_AtenRowChangeEventHandler RepActividad_AtenRowChanged;
            
            public event RepActividad_AtenRowChangeEventHandler RepActividad_AtenRowChanging;
            
            public event RepActividad_AtenRowChangeEventHandler RepActividad_AtenRowDeleted;
            
            public event RepActividad_AtenRowChangeEventHandler RepActividad_AtenRowDeleting;
            
            public void AddRepActividad_AtenRow(RepActividad_AtenRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_AtenRow AddRepActividad_AtenRow(RepActividad_CabRow parentRepActividad_CabRowByRepActividad_CabRepActividad_Aten, int iIdCliente, int iIdAtencion, int iNumAtencion, System.Double fImporte) {
                RepActividad_AtenRow rowRepActividad_AtenRow = ((RepActividad_AtenRow)(this.NewRow()));
                rowRepActividad_AtenRow.ItemArray = new object[] {
                        parentRepActividad_CabRowByRepActividad_CabRepActividad_Aten[0],
                        iIdCliente,
                        iIdAtencion,
                        iNumAtencion,
                        fImporte};
                this.Rows.Add(rowRepActividad_AtenRow);
                return rowRepActividad_AtenRow;
            }
            
            public RepActividad_AtenRow FindByiIdReportiIdClienteiIdAtencioniNumAtencion(int iIdReport, int iIdCliente, int iIdAtencion, int iNumAtencion) {
                return ((RepActividad_AtenRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            iIdCliente,
                            iIdAtencion,
                            iNumAtencion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_AtenDataTable cln = ((RepActividad_AtenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_AtenDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdAtencion = this.Columns["iIdAtencion"];
                this.columniNumAtencion = this.Columns["iNumAtencion"];
                this.columnfImporte = this.Columns["fImporte"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdAtencion = new DataColumn("iIdAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAtencion);
                this.columniNumAtencion = new DataColumn("iNumAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniNumAtencion);
                this.columnfImporte = new DataColumn("fImporte", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporte);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey24", new DataColumn[] {
                                this.columniIdReport,
                                this.columniIdCliente,
                                this.columniIdAtencion,
                                this.columniNumAtencion}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdAtencion.AllowDBNull = false;
                this.columniNumAtencion.AllowDBNull = false;
                this.columnfImporte.AllowDBNull = false;
            }
            
            public RepActividad_AtenRow NewRepActividad_AtenRow() {
                return ((RepActividad_AtenRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_AtenRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_AtenRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_AtenRowChanged != null)) {
                    this.RepActividad_AtenRowChanged(this, new RepActividad_AtenRowChangeEvent(((RepActividad_AtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_AtenRowChanging != null)) {
                    this.RepActividad_AtenRowChanging(this, new RepActividad_AtenRowChangeEvent(((RepActividad_AtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_AtenRowDeleted != null)) {
                    this.RepActividad_AtenRowDeleted(this, new RepActividad_AtenRowChangeEvent(((RepActividad_AtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_AtenRowDeleting != null)) {
                    this.RepActividad_AtenRowDeleting(this, new RepActividad_AtenRowChangeEvent(((RepActividad_AtenRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_AtenRow(RepActividad_AtenRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_AtenRow : DataRow {
            
            private RepActividad_AtenDataTable tableRepActividad_Aten;
            
            internal RepActividad_AtenRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Aten = ((RepActividad_AtenDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Aten.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividad_Aten.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.iIdClienteColumn] = value;
                }
            }
            
            public int iIdAtencion {
                get {
                    return ((int)(this[this.tableRepActividad_Aten.iIdAtencionColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.iIdAtencionColumn] = value;
                }
            }
            
            public int iNumAtencion {
                get {
                    return ((int)(this[this.tableRepActividad_Aten.iNumAtencionColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.iNumAtencionColumn] = value;
                }
            }
            
            public System.Double fImporte {
                get {
                    return ((System.Double)(this[this.tableRepActividad_Aten.fImporteColumn]));
                }
                set {
                    this[this.tableRepActividad_Aten.fImporteColumn] = value;
                }
            }
            
            public RepActividad_CabRow RepActividad_CabRow {
                get {
                    return ((RepActividad_CabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividad_CabRepActividad_Aten"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividad_CabRepActividad_Aten"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_AtenRowChangeEvent : EventArgs {
            
            private RepActividad_AtenRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_AtenRowChangeEvent(RepActividad_AtenRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_AtenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PromDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columniCantidad;
            
            private DataColumn columnOrden;
            
            internal RepActividad_PromDataTable() : 
                    base("RepActividad_Prom") {
                this.InitClass();
            }
            
            internal RepActividad_PromDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn iCantidadColumn {
                get {
                    return this.columniCantidad;
                }
            }
            
            internal DataColumn OrdenColumn {
                get {
                    return this.columnOrden;
                }
            }
            
            public RepActividad_PromRow this[int index] {
                get {
                    return ((RepActividad_PromRow)(this.Rows[index]));
                }
            }
            
            public event RepActividad_PromRowChangeEventHandler RepActividad_PromRowChanged;
            
            public event RepActividad_PromRowChangeEventHandler RepActividad_PromRowChanging;
            
            public event RepActividad_PromRowChangeEventHandler RepActividad_PromRowDeleted;
            
            public event RepActividad_PromRowChangeEventHandler RepActividad_PromRowDeleting;
            
            public void AddRepActividad_PromRow(RepActividad_PromRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividad_PromRow AddRepActividad_PromRow(RepActividad_CabRow parentRepActividad_CabRowByRepActividad_CabRepActividad_Prom, int iIdCliente, string sIdProducto, int iCantidad, int Orden) {
                RepActividad_PromRow rowRepActividad_PromRow = ((RepActividad_PromRow)(this.NewRow()));
                rowRepActividad_PromRow.ItemArray = new object[] {
                        parentRepActividad_CabRowByRepActividad_CabRepActividad_Prom[0],
                        iIdCliente,
                        sIdProducto,
                        iCantidad,
                        Orden};
                this.Rows.Add(rowRepActividad_PromRow);
                return rowRepActividad_PromRow;
            }
            
            public RepActividad_PromRow FindByiIdReportiIdClientesIdProducto(int iIdReport, int iIdCliente, string sIdProducto) {
                return ((RepActividad_PromRow)(this.Rows.Find(new object[] {
                            iIdReport,
                            iIdCliente,
                            sIdProducto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividad_PromDataTable cln = ((RepActividad_PromDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividad_PromDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columniCantidad = this.Columns["iCantidad"];
                this.columnOrden = this.Columns["Orden"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columniCantidad = new DataColumn("iCantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidad);
                this.columnOrden = new DataColumn("Orden", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrden);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey25", new DataColumn[] {
                                this.columniIdReport,
                                this.columniIdCliente,
                                this.columnsIdProducto}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdProducto.AllowDBNull = false;
                this.columniCantidad.AllowDBNull = false;
                this.columnOrden.AllowDBNull = false;
            }
            
            public RepActividad_PromRow NewRepActividad_PromRow() {
                return ((RepActividad_PromRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividad_PromRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividad_PromRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividad_PromRowChanged != null)) {
                    this.RepActividad_PromRowChanged(this, new RepActividad_PromRowChangeEvent(((RepActividad_PromRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividad_PromRowChanging != null)) {
                    this.RepActividad_PromRowChanging(this, new RepActividad_PromRowChangeEvent(((RepActividad_PromRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividad_PromRowDeleted != null)) {
                    this.RepActividad_PromRowDeleted(this, new RepActividad_PromRowChangeEvent(((RepActividad_PromRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividad_PromRowDeleting != null)) {
                    this.RepActividad_PromRowDeleting(this, new RepActividad_PromRowChangeEvent(((RepActividad_PromRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividad_PromRow(RepActividad_PromRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PromRow : DataRow {
            
            private RepActividad_PromDataTable tableRepActividad_Prom;
            
            internal RepActividad_PromRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividad_Prom = ((RepActividad_PromDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividad_Prom.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividad_Prom.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividad_Prom.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividad_Prom.iIdClienteColumn] = value;
                }
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tableRepActividad_Prom.sIdProductoColumn]));
                }
                set {
                    this[this.tableRepActividad_Prom.sIdProductoColumn] = value;
                }
            }
            
            public int iCantidad {
                get {
                    return ((int)(this[this.tableRepActividad_Prom.iCantidadColumn]));
                }
                set {
                    this[this.tableRepActividad_Prom.iCantidadColumn] = value;
                }
            }
            
            public int Orden {
                get {
                    return ((int)(this[this.tableRepActividad_Prom.OrdenColumn]));
                }
                set {
                    this[this.tableRepActividad_Prom.OrdenColumn] = value;
                }
            }
            
            public RepActividad_CabRow RepActividad_CabRow {
                get {
                    return ((RepActividad_CabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividad_CabRepActividad_Prom"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividad_CabRepActividad_Prom"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividad_PromRowChangeEvent : EventArgs {
            
            private RepActividad_PromRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividad_PromRowChangeEvent(RepActividad_PromRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividad_PromRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesComercialesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdAtencion;
            
            private DataColumn columnsIdAtencionTemp;
            
            private DataColumn columnsIdAtencion;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnsIdTipoAtencion;
            
            private DataColumn columnbBolsaViaje;
            
            private DataColumn columnbLiqNotaGastos;
            
            private DataColumn columnsIdCentroCoste;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdEstAtencion;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnfImportePrev;
            
            private DataColumn columnfImporteReal;
            
            private DataColumn columndFechaCreacion;
            
            private DataColumn columndFechaPrev;
            
            private DataColumn columndFechaAprob1;
            
            private DataColumn columndFechaAprob2;
            
            private DataColumn columndFechaReal;
            
            private DataColumn columndFechaLiq;
            
            private DataColumn columndFechaCierre;
            
            private DataColumn columnsUsuAprob1;
            
            private DataColumn columnsUsuAprob2;
            
            private DataColumn columnsUsuLiq;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFechaAprob3;
            
            private DataColumn columndFechaAprob4;
            
            private DataColumn columnsUsuAprob3;
            
            private DataColumn columnsUsuAprob4;
            
            internal AtencionesComercialesDataTable() : 
                    base("AtencionesComerciales") {
                this.InitClass();
            }
            
            internal AtencionesComercialesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdAtencionColumn {
                get {
                    return this.columniIdAtencion;
                }
            }
            
            internal DataColumn sIdAtencionTempColumn {
                get {
                    return this.columnsIdAtencionTemp;
                }
            }
            
            internal DataColumn sIdAtencionColumn {
                get {
                    return this.columnsIdAtencion;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn sIdTipoAtencionColumn {
                get {
                    return this.columnsIdTipoAtencion;
                }
            }
            
            internal DataColumn bBolsaViajeColumn {
                get {
                    return this.columnbBolsaViaje;
                }
            }
            
            internal DataColumn bLiqNotaGastosColumn {
                get {
                    return this.columnbLiqNotaGastos;
                }
            }
            
            internal DataColumn sIdCentroCosteColumn {
                get {
                    return this.columnsIdCentroCoste;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdEstAtencionColumn {
                get {
                    return this.columnsIdEstAtencion;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn fImportePrevColumn {
                get {
                    return this.columnfImportePrev;
                }
            }
            
            internal DataColumn fImporteRealColumn {
                get {
                    return this.columnfImporteReal;
                }
            }
            
            internal DataColumn dFechaCreacionColumn {
                get {
                    return this.columndFechaCreacion;
                }
            }
            
            internal DataColumn dFechaPrevColumn {
                get {
                    return this.columndFechaPrev;
                }
            }
            
            internal DataColumn dFechaAprob1Column {
                get {
                    return this.columndFechaAprob1;
                }
            }
            
            internal DataColumn dFechaAprob2Column {
                get {
                    return this.columndFechaAprob2;
                }
            }
            
            internal DataColumn dFechaRealColumn {
                get {
                    return this.columndFechaReal;
                }
            }
            
            internal DataColumn dFechaLiqColumn {
                get {
                    return this.columndFechaLiq;
                }
            }
            
            internal DataColumn dFechaCierreColumn {
                get {
                    return this.columndFechaCierre;
                }
            }
            
            internal DataColumn sUsuAprob1Column {
                get {
                    return this.columnsUsuAprob1;
                }
            }
            
            internal DataColumn sUsuAprob2Column {
                get {
                    return this.columnsUsuAprob2;
                }
            }
            
            internal DataColumn sUsuLiqColumn {
                get {
                    return this.columnsUsuLiq;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFechaAprob3Column {
                get {
                    return this.columndFechaAprob3;
                }
            }
            
            internal DataColumn dFechaAprob4Column {
                get {
                    return this.columndFechaAprob4;
                }
            }
            
            internal DataColumn sUsuAprob3Column {
                get {
                    return this.columnsUsuAprob3;
                }
            }
            
            internal DataColumn sUsuAprob4Column {
                get {
                    return this.columnsUsuAprob4;
                }
            }
            
            public AtencionesComercialesRow this[int index] {
                get {
                    return ((AtencionesComercialesRow)(this.Rows[index]));
                }
            }
            
            public event AtencionesComercialesRowChangeEventHandler AtencionesComercialesRowChanged;
            
            public event AtencionesComercialesRowChangeEventHandler AtencionesComercialesRowChanging;
            
            public event AtencionesComercialesRowChangeEventHandler AtencionesComercialesRowDeleted;
            
            public event AtencionesComercialesRowChangeEventHandler AtencionesComercialesRowDeleting;
            
            public void AddAtencionesComercialesRow(AtencionesComercialesRow row) {
                this.Rows.Add(row);
            }
            
            public AtencionesComercialesRow AddAtencionesComercialesRow(
                        string sIdAtencionTemp, 
                        string sIdAtencion, 
                        string sDescripcion, 
                        string tObservaciones, 
                        string sIdTipoAtencion, 
                        bool bBolsaViaje, 
                        bool bLiqNotaGastos, 
                        string sIdCentroCoste, 
                        int iIdDelegado, 
                        string sIdEstAtencion, 
                        int iIdCliente, 
                        System.Double fImportePrev, 
                        System.Double fImporteReal, 
                        System.DateTime dFechaCreacion, 
                        System.DateTime dFechaPrev, 
                        System.DateTime dFechaAprob1, 
                        System.DateTime dFechaAprob2, 
                        System.DateTime dFechaReal, 
                        System.DateTime dFechaLiq, 
                        System.DateTime dFechaCierre, 
                        string sUsuAprob1, 
                        string sUsuAprob2, 
                        string sUsuLiq, 
                        System.DateTime dFUM, 
                        short iEstado, 
                        System.DateTime dFechaAprob3, 
                        System.DateTime dFechaAprob4, 
                        string sUsuAprob3, 
                        string sUsuAprob4) {
                AtencionesComercialesRow rowAtencionesComercialesRow = ((AtencionesComercialesRow)(this.NewRow()));
                rowAtencionesComercialesRow.ItemArray = new object[] {
                        null,
                        sIdAtencionTemp,
                        sIdAtencion,
                        sDescripcion,
                        tObservaciones,
                        sIdTipoAtencion,
                        bBolsaViaje,
                        bLiqNotaGastos,
                        sIdCentroCoste,
                        iIdDelegado,
                        sIdEstAtencion,
                        iIdCliente,
                        fImportePrev,
                        fImporteReal,
                        dFechaCreacion,
                        dFechaPrev,
                        dFechaAprob1,
                        dFechaAprob2,
                        dFechaReal,
                        dFechaLiq,
                        dFechaCierre,
                        sUsuAprob1,
                        sUsuAprob2,
                        sUsuLiq,
                        dFUM,
                        iEstado,
                        dFechaAprob3,
                        dFechaAprob4,
                        sUsuAprob3,
                        sUsuAprob4};
                this.Rows.Add(rowAtencionesComercialesRow);
                return rowAtencionesComercialesRow;
            }
            
            public AtencionesComercialesRow FindByiIdAtencion(int iIdAtencion) {
                return ((AtencionesComercialesRow)(this.Rows.Find(new object[] {
                            iIdAtencion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AtencionesComercialesDataTable cln = ((AtencionesComercialesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AtencionesComercialesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdAtencion = this.Columns["iIdAtencion"];
                this.columnsIdAtencionTemp = this.Columns["sIdAtencionTemp"];
                this.columnsIdAtencion = this.Columns["sIdAtencion"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnsIdTipoAtencion = this.Columns["sIdTipoAtencion"];
                this.columnbBolsaViaje = this.Columns["bBolsaViaje"];
                this.columnbLiqNotaGastos = this.Columns["bLiqNotaGastos"];
                this.columnsIdCentroCoste = this.Columns["sIdCentroCoste"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdEstAtencion = this.Columns["sIdEstAtencion"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnfImportePrev = this.Columns["fImportePrev"];
                this.columnfImporteReal = this.Columns["fImporteReal"];
                this.columndFechaCreacion = this.Columns["dFechaCreacion"];
                this.columndFechaPrev = this.Columns["dFechaPrev"];
                this.columndFechaAprob1 = this.Columns["dFechaAprob1"];
                this.columndFechaAprob2 = this.Columns["dFechaAprob2"];
                this.columndFechaReal = this.Columns["dFechaReal"];
                this.columndFechaLiq = this.Columns["dFechaLiq"];
                this.columndFechaCierre = this.Columns["dFechaCierre"];
                this.columnsUsuAprob1 = this.Columns["sUsuAprob1"];
                this.columnsUsuAprob2 = this.Columns["sUsuAprob2"];
                this.columnsUsuLiq = this.Columns["sUsuLiq"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFechaAprob3 = this.Columns["dFechaAprob3"];
                this.columndFechaAprob4 = this.Columns["dFechaAprob4"];
                this.columnsUsuAprob3 = this.Columns["sUsuAprob3"];
                this.columnsUsuAprob4 = this.Columns["sUsuAprob4"];
            }
            
            private void InitClass() {
                this.columniIdAtencion = new DataColumn("iIdAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAtencion);
                this.columnsIdAtencionTemp = new DataColumn("sIdAtencionTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAtencionTemp);
                this.columnsIdAtencion = new DataColumn("sIdAtencion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAtencion);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnsIdTipoAtencion = new DataColumn("sIdTipoAtencion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoAtencion);
                this.columnbBolsaViaje = new DataColumn("bBolsaViaje", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbBolsaViaje);
                this.columnbLiqNotaGastos = new DataColumn("bLiqNotaGastos", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbLiqNotaGastos);
                this.columnsIdCentroCoste = new DataColumn("sIdCentroCoste", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentroCoste);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdEstAtencion = new DataColumn("sIdEstAtencion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEstAtencion);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnfImportePrev = new DataColumn("fImportePrev", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImportePrev);
                this.columnfImporteReal = new DataColumn("fImporteReal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporteReal);
                this.columndFechaCreacion = new DataColumn("dFechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaCreacion);
                this.columndFechaPrev = new DataColumn("dFechaPrev", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPrev);
                this.columndFechaAprob1 = new DataColumn("dFechaAprob1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob1);
                this.columndFechaAprob2 = new DataColumn("dFechaAprob2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob2);
                this.columndFechaReal = new DataColumn("dFechaReal", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaReal);
                this.columndFechaLiq = new DataColumn("dFechaLiq", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaLiq);
                this.columndFechaCierre = new DataColumn("dFechaCierre", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaCierre);
                this.columnsUsuAprob1 = new DataColumn("sUsuAprob1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuAprob1);
                this.columnsUsuAprob2 = new DataColumn("sUsuAprob2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuAprob2);
                this.columnsUsuLiq = new DataColumn("sUsuLiq", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuLiq);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFechaAprob3 = new DataColumn("dFechaAprob3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob3);
                this.columndFechaAprob4 = new DataColumn("dFechaAprob4", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob4);
                this.columnsUsuAprob3 = new DataColumn("sUsuAprob3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuAprob3);
                this.columnsUsuAprob4 = new DataColumn("sUsuAprob4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuAprob4);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey26", new DataColumn[] {
                                this.columniIdAtencion}, true));
                this.columniIdAtencion.AutoIncrement = true;
                this.columniIdAtencion.AllowDBNull = false;
                this.columniIdAtencion.ReadOnly = true;
                this.columniIdAtencion.Unique = true;
                this.columnsIdAtencionTemp.AllowDBNull = false;
                this.columnsIdAtencion.AllowDBNull = false;
                this.columnbBolsaViaje.AllowDBNull = false;
                this.columnbLiqNotaGastos.AllowDBNull = false;
                this.columnfImportePrev.AllowDBNull = false;
                this.columndFechaCreacion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public AtencionesComercialesRow NewAtencionesComercialesRow() {
                return ((AtencionesComercialesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AtencionesComercialesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AtencionesComercialesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AtencionesComercialesRowChanged != null)) {
                    this.AtencionesComercialesRowChanged(this, new AtencionesComercialesRowChangeEvent(((AtencionesComercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AtencionesComercialesRowChanging != null)) {
                    this.AtencionesComercialesRowChanging(this, new AtencionesComercialesRowChangeEvent(((AtencionesComercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AtencionesComercialesRowDeleted != null)) {
                    this.AtencionesComercialesRowDeleted(this, new AtencionesComercialesRowChangeEvent(((AtencionesComercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AtencionesComercialesRowDeleting != null)) {
                    this.AtencionesComercialesRowDeleting(this, new AtencionesComercialesRowChangeEvent(((AtencionesComercialesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAtencionesComercialesRow(AtencionesComercialesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesComercialesRow : DataRow {
            
            private AtencionesComercialesDataTable tableAtencionesComerciales;
            
            internal AtencionesComercialesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAtencionesComerciales = ((AtencionesComercialesDataTable)(this.Table));
            }
            
            public int iIdAtencion {
                get {
                    return ((int)(this[this.tableAtencionesComerciales.iIdAtencionColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.iIdAtencionColumn] = value;
                }
            }
            
            public string sIdAtencionTemp {
                get {
                    return ((string)(this[this.tableAtencionesComerciales.sIdAtencionTempColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.sIdAtencionTempColumn] = value;
                }
            }
            
            public string sIdAtencion {
                get {
                    return ((string)(this[this.tableAtencionesComerciales.sIdAtencionColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.sIdAtencionColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sDescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sDescripcionColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.tObservacionesColumn] = value;
                }
            }
            
            public string sIdTipoAtencion {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sIdTipoAtencionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sIdTipoAtencionColumn] = value;
                }
            }
            
            public bool bBolsaViaje {
                get {
                    return ((bool)(this[this.tableAtencionesComerciales.bBolsaViajeColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.bBolsaViajeColumn] = value;
                }
            }
            
            public bool bLiqNotaGastos {
                get {
                    return ((bool)(this[this.tableAtencionesComerciales.bLiqNotaGastosColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.bLiqNotaGastosColumn] = value;
                }
            }
            
            public string sIdCentroCoste {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sIdCentroCosteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sIdCentroCosteColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    try {
                        return ((int)(this[this.tableAtencionesComerciales.iIdDelegadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdEstAtencion {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sIdEstAtencionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sIdEstAtencionColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    try {
                        return ((int)(this[this.tableAtencionesComerciales.iIdClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.iIdClienteColumn] = value;
                }
            }
            
            public System.Double fImportePrev {
                get {
                    return ((System.Double)(this[this.tableAtencionesComerciales.fImportePrevColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.fImportePrevColumn] = value;
                }
            }
            
            public System.Double fImporteReal {
                get {
                    try {
                        return ((System.Double)(this[this.tableAtencionesComerciales.fImporteRealColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.fImporteRealColumn] = value;
                }
            }
            
            public System.DateTime dFechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaCreacionColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaCreacionColumn] = value;
                }
            }
            
            public System.DateTime dFechaPrev {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaPrevColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaPrevColumn] = value;
                }
            }
            
            public System.DateTime dFechaAprob1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaAprob1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaAprob1Column] = value;
                }
            }
            
            public System.DateTime dFechaAprob2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaAprob2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaAprob2Column] = value;
                }
            }
            
            public System.DateTime dFechaReal {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaRealColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaRealColumn] = value;
                }
            }
            
            public System.DateTime dFechaLiq {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaLiqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaLiqColumn] = value;
                }
            }
            
            public System.DateTime dFechaCierre {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaCierreColumn] = value;
                }
            }
            
            public string sUsuAprob1 {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sUsuAprob1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sUsuAprob1Column] = value;
                }
            }
            
            public string sUsuAprob2 {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sUsuAprob2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sUsuAprob2Column] = value;
                }
            }
            
            public string sUsuLiq {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sUsuLiqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sUsuLiqColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableAtencionesComerciales.dFUMColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableAtencionesComerciales.iEstadoColumn]));
                }
                set {
                    this[this.tableAtencionesComerciales.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFechaAprob3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaAprob3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaAprob3Column] = value;
                }
            }
            
            public System.DateTime dFechaAprob4 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionesComerciales.dFechaAprob4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.dFechaAprob4Column] = value;
                }
            }
            
            public string sUsuAprob3 {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sUsuAprob3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sUsuAprob3Column] = value;
                }
            }
            
            public string sUsuAprob4 {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesComerciales.sUsuAprob4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesComerciales.sUsuAprob4Column] = value;
                }
            }
            
            public bool IssDescripcionNull() {
                return this.IsNull(this.tableAtencionesComerciales.sDescripcionColumn);
            }
            
            public void SetsDescripcionNull() {
                this[this.tableAtencionesComerciales.sDescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableAtencionesComerciales.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableAtencionesComerciales.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoAtencionNull() {
                return this.IsNull(this.tableAtencionesComerciales.sIdTipoAtencionColumn);
            }
            
            public void SetsIdTipoAtencionNull() {
                this[this.tableAtencionesComerciales.sIdTipoAtencionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdCentroCosteNull() {
                return this.IsNull(this.tableAtencionesComerciales.sIdCentroCosteColumn);
            }
            
            public void SetsIdCentroCosteNull() {
                this[this.tableAtencionesComerciales.sIdCentroCosteColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdDelegadoNull() {
                return this.IsNull(this.tableAtencionesComerciales.iIdDelegadoColumn);
            }
            
            public void SetiIdDelegadoNull() {
                this[this.tableAtencionesComerciales.iIdDelegadoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdEstAtencionNull() {
                return this.IsNull(this.tableAtencionesComerciales.sIdEstAtencionColumn);
            }
            
            public void SetsIdEstAtencionNull() {
                this[this.tableAtencionesComerciales.sIdEstAtencionColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdClienteNull() {
                return this.IsNull(this.tableAtencionesComerciales.iIdClienteColumn);
            }
            
            public void SetiIdClienteNull() {
                this[this.tableAtencionesComerciales.iIdClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IsfImporteRealNull() {
                return this.IsNull(this.tableAtencionesComerciales.fImporteRealColumn);
            }
            
            public void SetfImporteRealNull() {
                this[this.tableAtencionesComerciales.fImporteRealColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaPrevNull() {
                return this.IsNull(this.tableAtencionesComerciales.dFechaPrevColumn);
            }
            
            public void SetdFechaPrevNull() {
                this[this.tableAtencionesComerciales.dFechaPrevColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaAprob1Null() {
                return this.IsNull(this.tableAtencionesComerciales.dFechaAprob1Column);
            }
            
            public void SetdFechaAprob1Null() {
                this[this.tableAtencionesComerciales.dFechaAprob1Column] = System.Convert.DBNull;
            }
            
            public bool IsdFechaAprob2Null() {
                return this.IsNull(this.tableAtencionesComerciales.dFechaAprob2Column);
            }
            
            public void SetdFechaAprob2Null() {
                this[this.tableAtencionesComerciales.dFechaAprob2Column] = System.Convert.DBNull;
            }
            
            public bool IsdFechaRealNull() {
                return this.IsNull(this.tableAtencionesComerciales.dFechaRealColumn);
            }
            
            public void SetdFechaRealNull() {
                this[this.tableAtencionesComerciales.dFechaRealColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaLiqNull() {
                return this.IsNull(this.tableAtencionesComerciales.dFechaLiqColumn);
            }
            
            public void SetdFechaLiqNull() {
                this[this.tableAtencionesComerciales.dFechaLiqColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaCierreNull() {
                return this.IsNull(this.tableAtencionesComerciales.dFechaCierreColumn);
            }
            
            public void SetdFechaCierreNull() {
                this[this.tableAtencionesComerciales.dFechaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IssUsuAprob1Null() {
                return this.IsNull(this.tableAtencionesComerciales.sUsuAprob1Column);
            }
            
            public void SetsUsuAprob1Null() {
                this[this.tableAtencionesComerciales.sUsuAprob1Column] = System.Convert.DBNull;
            }
            
            public bool IssUsuAprob2Null() {
                return this.IsNull(this.tableAtencionesComerciales.sUsuAprob2Column);
            }
            
            public void SetsUsuAprob2Null() {
                this[this.tableAtencionesComerciales.sUsuAprob2Column] = System.Convert.DBNull;
            }
            
            public bool IssUsuLiqNull() {
                return this.IsNull(this.tableAtencionesComerciales.sUsuLiqColumn);
            }
            
            public void SetsUsuLiqNull() {
                this[this.tableAtencionesComerciales.sUsuLiqColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaAprob3Null() {
                return this.IsNull(this.tableAtencionesComerciales.dFechaAprob3Column);
            }
            
            public void SetdFechaAprob3Null() {
                this[this.tableAtencionesComerciales.dFechaAprob3Column] = System.Convert.DBNull;
            }
            
            public bool IsdFechaAprob4Null() {
                return this.IsNull(this.tableAtencionesComerciales.dFechaAprob4Column);
            }
            
            public void SetdFechaAprob4Null() {
                this[this.tableAtencionesComerciales.dFechaAprob4Column] = System.Convert.DBNull;
            }
            
            public bool IssUsuAprob3Null() {
                return this.IsNull(this.tableAtencionesComerciales.sUsuAprob3Column);
            }
            
            public void SetsUsuAprob3Null() {
                this[this.tableAtencionesComerciales.sUsuAprob3Column] = System.Convert.DBNull;
            }
            
            public bool IssUsuAprob4Null() {
                return this.IsNull(this.tableAtencionesComerciales.sUsuAprob4Column);
            }
            
            public void SetsUsuAprob4Null() {
                this[this.tableAtencionesComerciales.sUsuAprob4Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesComercialesRowChangeEvent : EventArgs {
            
            private AtencionesComercialesRow eventRow;
            
            private DataRowAction eventAction;
            
            public AtencionesComercialesRowChangeEvent(AtencionesComercialesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AtencionesComercialesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdNota;
            
            private DataColumn columnsIdNotaTemp;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columndFecha;
            
            private DataColumn columnbVisa;
            
            private DataColumn columndFechaAprob;
            
            private DataColumn columnsUsuarioAprob;
            
            private DataColumn columndFechaLiq;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal NotasGastosDataTable() : 
                    base("NotasGastos") {
                this.InitClass();
            }
            
            internal NotasGastosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdNotaColumn {
                get {
                    return this.columniIdNota;
                }
            }
            
            internal DataColumn sIdNotaTempColumn {
                get {
                    return this.columnsIdNotaTemp;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            internal DataColumn bVisaColumn {
                get {
                    return this.columnbVisa;
                }
            }
            
            internal DataColumn dFechaAprobColumn {
                get {
                    return this.columndFechaAprob;
                }
            }
            
            internal DataColumn sUsuarioAprobColumn {
                get {
                    return this.columnsUsuarioAprob;
                }
            }
            
            internal DataColumn dFechaLiqColumn {
                get {
                    return this.columndFechaLiq;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public NotasGastosRow this[int index] {
                get {
                    return ((NotasGastosRow)(this.Rows[index]));
                }
            }
            
            public event NotasGastosRowChangeEventHandler NotasGastosRowChanged;
            
            public event NotasGastosRowChangeEventHandler NotasGastosRowChanging;
            
            public event NotasGastosRowChangeEventHandler NotasGastosRowDeleted;
            
            public event NotasGastosRowChangeEventHandler NotasGastosRowDeleting;
            
            public void AddNotasGastosRow(NotasGastosRow row) {
                this.Rows.Add(row);
            }
            
            public NotasGastosRow AddNotasGastosRow(string sIdNotaTemp, int iIdDelegado, System.DateTime dFecha, System.Byte bVisa, System.DateTime dFechaAprob, string sUsuarioAprob, System.DateTime dFechaLiq, string tObservaciones, System.DateTime dFUM, short iEstado) {
                NotasGastosRow rowNotasGastosRow = ((NotasGastosRow)(this.NewRow()));
                rowNotasGastosRow.ItemArray = new object[] {
                        null,
                        sIdNotaTemp,
                        iIdDelegado,
                        dFecha,
                        bVisa,
                        dFechaAprob,
                        sUsuarioAprob,
                        dFechaLiq,
                        tObservaciones,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowNotasGastosRow);
                return rowNotasGastosRow;
            }
            
            public NotasGastosRow FindByiIdNota(int iIdNota) {
                return ((NotasGastosRow)(this.Rows.Find(new object[] {
                            iIdNota})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                NotasGastosDataTable cln = ((NotasGastosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new NotasGastosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdNota = this.Columns["iIdNota"];
                this.columnsIdNotaTemp = this.Columns["sIdNotaTemp"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columndFecha = this.Columns["dFecha"];
                this.columnbVisa = this.Columns["bVisa"];
                this.columndFechaAprob = this.Columns["dFechaAprob"];
                this.columnsUsuarioAprob = this.Columns["sUsuarioAprob"];
                this.columndFechaLiq = this.Columns["dFechaLiq"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdNota = new DataColumn("iIdNota", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdNota);
                this.columnsIdNotaTemp = new DataColumn("sIdNotaTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdNotaTemp);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.columnbVisa = new DataColumn("bVisa", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbVisa);
                this.columndFechaAprob = new DataColumn("dFechaAprob", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob);
                this.columnsUsuarioAprob = new DataColumn("sUsuarioAprob", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuarioAprob);
                this.columndFechaLiq = new DataColumn("dFechaLiq", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaLiq);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey27", new DataColumn[] {
                                this.columniIdNota}, true));
                this.columniIdNota.AutoIncrement = true;
                this.columniIdNota.AllowDBNull = false;
                this.columniIdNota.ReadOnly = true;
                this.columniIdNota.Unique = true;
                this.columnsIdNotaTemp.AllowDBNull = false;
                this.columniIdDelegado.AllowDBNull = false;
                this.columndFecha.AllowDBNull = false;
                this.columnbVisa.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public NotasGastosRow NewNotasGastosRow() {
                return ((NotasGastosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new NotasGastosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(NotasGastosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NotasGastosRowChanged != null)) {
                    this.NotasGastosRowChanged(this, new NotasGastosRowChangeEvent(((NotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NotasGastosRowChanging != null)) {
                    this.NotasGastosRowChanging(this, new NotasGastosRowChangeEvent(((NotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NotasGastosRowDeleted != null)) {
                    this.NotasGastosRowDeleted(this, new NotasGastosRowChangeEvent(((NotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NotasGastosRowDeleting != null)) {
                    this.NotasGastosRowDeleting(this, new NotasGastosRowChangeEvent(((NotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveNotasGastosRow(NotasGastosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastosRow : DataRow {
            
            private NotasGastosDataTable tableNotasGastos;
            
            internal NotasGastosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableNotasGastos = ((NotasGastosDataTable)(this.Table));
            }
            
            public int iIdNota {
                get {
                    return ((int)(this[this.tableNotasGastos.iIdNotaColumn]));
                }
                set {
                    this[this.tableNotasGastos.iIdNotaColumn] = value;
                }
            }
            
            public string sIdNotaTemp {
                get {
                    return ((string)(this[this.tableNotasGastos.sIdNotaTempColumn]));
                }
                set {
                    this[this.tableNotasGastos.sIdNotaTempColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableNotasGastos.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableNotasGastos.iIdDelegadoColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableNotasGastos.dFechaColumn]));
                }
                set {
                    this[this.tableNotasGastos.dFechaColumn] = value;
                }
            }
            
            public System.Byte bVisa {
                get {
                    return ((System.Byte)(this[this.tableNotasGastos.bVisaColumn]));
                }
                set {
                    this[this.tableNotasGastos.bVisaColumn] = value;
                }
            }
            
            public System.DateTime dFechaAprob {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableNotasGastos.dFechaAprobColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos.dFechaAprobColumn] = value;
                }
            }
            
            public string sUsuarioAprob {
                get {
                    try {
                        return ((string)(this[this.tableNotasGastos.sUsuarioAprobColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos.sUsuarioAprobColumn] = value;
                }
            }
            
            public System.DateTime dFechaLiq {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableNotasGastos.dFechaLiqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos.dFechaLiqColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableNotasGastos.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos.tObservacionesColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableNotasGastos.dFUMColumn]));
                }
                set {
                    this[this.tableNotasGastos.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableNotasGastos.iEstadoColumn]));
                }
                set {
                    this[this.tableNotasGastos.iEstadoColumn] = value;
                }
            }
            
            public bool IsdFechaAprobNull() {
                return this.IsNull(this.tableNotasGastos.dFechaAprobColumn);
            }
            
            public void SetdFechaAprobNull() {
                this[this.tableNotasGastos.dFechaAprobColumn] = System.Convert.DBNull;
            }
            
            public bool IssUsuarioAprobNull() {
                return this.IsNull(this.tableNotasGastos.sUsuarioAprobColumn);
            }
            
            public void SetsUsuarioAprobNull() {
                this[this.tableNotasGastos.sUsuarioAprobColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaLiqNull() {
                return this.IsNull(this.tableNotasGastos.dFechaLiqColumn);
            }
            
            public void SetdFechaLiqNull() {
                this[this.tableNotasGastos.dFechaLiqColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableNotasGastos.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableNotasGastos.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public AtencionesNotasGastosRow[] GetAtencionesNotasGastosRows() {
                return ((AtencionesNotasGastosRow[])(this.GetChildRows(this.Table.ChildRelations["NotasGastosAtencionesNotasGastos"])));
            }
            
            public NotasGastos_LinRow[] GetNotasGastos_LinRows() {
                return ((NotasGastos_LinRow[])(this.GetChildRows(this.Table.ChildRelations["NotasGastosNotasGastos_Lin"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastosRowChangeEvent : EventArgs {
            
            private NotasGastosRow eventRow;
            
            private DataRowAction eventAction;
            
            public NotasGastosRowChangeEvent(NotasGastosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public NotasGastosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastos_LinDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdNota;
            
            private DataColumn columniIdGasto;
            
            private DataColumn columnfCantidad;
            
            private DataColumn columnfPrecio;
            
            private DataColumn columntDescripcion;
            
            private DataColumn columnsIdCentroCoste;
            
            internal NotasGastos_LinDataTable() : 
                    base("NotasGastos_Lin") {
                this.InitClass();
            }
            
            internal NotasGastos_LinDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdNotaColumn {
                get {
                    return this.columniIdNota;
                }
            }
            
            internal DataColumn iIdGastoColumn {
                get {
                    return this.columniIdGasto;
                }
            }
            
            internal DataColumn fCantidadColumn {
                get {
                    return this.columnfCantidad;
                }
            }
            
            internal DataColumn fPrecioColumn {
                get {
                    return this.columnfPrecio;
                }
            }
            
            internal DataColumn tDescripcionColumn {
                get {
                    return this.columntDescripcion;
                }
            }
            
            internal DataColumn sIdCentroCosteColumn {
                get {
                    return this.columnsIdCentroCoste;
                }
            }
            
            public NotasGastos_LinRow this[int index] {
                get {
                    return ((NotasGastos_LinRow)(this.Rows[index]));
                }
            }
            
            public event NotasGastos_LinRowChangeEventHandler NotasGastos_LinRowChanged;
            
            public event NotasGastos_LinRowChangeEventHandler NotasGastos_LinRowChanging;
            
            public event NotasGastos_LinRowChangeEventHandler NotasGastos_LinRowDeleted;
            
            public event NotasGastos_LinRowChangeEventHandler NotasGastos_LinRowDeleting;
            
            public void AddNotasGastos_LinRow(NotasGastos_LinRow row) {
                this.Rows.Add(row);
            }
            
            public NotasGastos_LinRow AddNotasGastos_LinRow(NotasGastosRow parentNotasGastosRowByNotasGastosNotasGastos_Lin, int iIdGasto, System.Double fCantidad, System.Double fPrecio, string tDescripcion, string sIdCentroCoste) {
                NotasGastos_LinRow rowNotasGastos_LinRow = ((NotasGastos_LinRow)(this.NewRow()));
                rowNotasGastos_LinRow.ItemArray = new object[] {
                        parentNotasGastosRowByNotasGastosNotasGastos_Lin[0],
                        iIdGasto,
                        fCantidad,
                        fPrecio,
                        tDescripcion,
                        sIdCentroCoste};
                this.Rows.Add(rowNotasGastos_LinRow);
                return rowNotasGastos_LinRow;
            }
            
            public NotasGastos_LinRow FindByiIdNotaiIdGasto(int iIdNota, int iIdGasto) {
                return ((NotasGastos_LinRow)(this.Rows.Find(new object[] {
                            iIdNota,
                            iIdGasto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                NotasGastos_LinDataTable cln = ((NotasGastos_LinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new NotasGastos_LinDataTable();
            }
            
            internal void InitVars() {
                this.columniIdNota = this.Columns["iIdNota"];
                this.columniIdGasto = this.Columns["iIdGasto"];
                this.columnfCantidad = this.Columns["fCantidad"];
                this.columnfPrecio = this.Columns["fPrecio"];
                this.columntDescripcion = this.Columns["tDescripcion"];
                this.columnsIdCentroCoste = this.Columns["sIdCentroCoste"];
            }
            
            private void InitClass() {
                this.columniIdNota = new DataColumn("iIdNota", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdNota);
                this.columniIdGasto = new DataColumn("iIdGasto", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdGasto);
                this.columnfCantidad = new DataColumn("fCantidad", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfCantidad);
                this.columnfPrecio = new DataColumn("fPrecio", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPrecio);
                this.columntDescripcion = new DataColumn("tDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntDescripcion);
                this.columnsIdCentroCoste = new DataColumn("sIdCentroCoste", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentroCoste);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey28", new DataColumn[] {
                                this.columniIdNota,
                                this.columniIdGasto}, true));
                this.columniIdNota.AllowDBNull = false;
                this.columniIdGasto.AllowDBNull = false;
                this.columnfCantidad.AllowDBNull = false;
                this.columnfPrecio.AllowDBNull = false;
            }
            
            public NotasGastos_LinRow NewNotasGastos_LinRow() {
                return ((NotasGastos_LinRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new NotasGastos_LinRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(NotasGastos_LinRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NotasGastos_LinRowChanged != null)) {
                    this.NotasGastos_LinRowChanged(this, new NotasGastos_LinRowChangeEvent(((NotasGastos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NotasGastos_LinRowChanging != null)) {
                    this.NotasGastos_LinRowChanging(this, new NotasGastos_LinRowChangeEvent(((NotasGastos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NotasGastos_LinRowDeleted != null)) {
                    this.NotasGastos_LinRowDeleted(this, new NotasGastos_LinRowChangeEvent(((NotasGastos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NotasGastos_LinRowDeleting != null)) {
                    this.NotasGastos_LinRowDeleting(this, new NotasGastos_LinRowChangeEvent(((NotasGastos_LinRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveNotasGastos_LinRow(NotasGastos_LinRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastos_LinRow : DataRow {
            
            private NotasGastos_LinDataTable tableNotasGastos_Lin;
            
            internal NotasGastos_LinRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableNotasGastos_Lin = ((NotasGastos_LinDataTable)(this.Table));
            }
            
            public int iIdNota {
                get {
                    return ((int)(this[this.tableNotasGastos_Lin.iIdNotaColumn]));
                }
                set {
                    this[this.tableNotasGastos_Lin.iIdNotaColumn] = value;
                }
            }
            
            public int iIdGasto {
                get {
                    return ((int)(this[this.tableNotasGastos_Lin.iIdGastoColumn]));
                }
                set {
                    this[this.tableNotasGastos_Lin.iIdGastoColumn] = value;
                }
            }
            
            public System.Double fCantidad {
                get {
                    return ((System.Double)(this[this.tableNotasGastos_Lin.fCantidadColumn]));
                }
                set {
                    this[this.tableNotasGastos_Lin.fCantidadColumn] = value;
                }
            }
            
            public System.Double fPrecio {
                get {
                    return ((System.Double)(this[this.tableNotasGastos_Lin.fPrecioColumn]));
                }
                set {
                    this[this.tableNotasGastos_Lin.fPrecioColumn] = value;
                }
            }
            
            public string tDescripcion {
                get {
                    try {
                        return ((string)(this[this.tableNotasGastos_Lin.tDescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos_Lin.tDescripcionColumn] = value;
                }
            }
            
            public string sIdCentroCoste {
                get {
                    try {
                        return ((string)(this[this.tableNotasGastos_Lin.sIdCentroCosteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos_Lin.sIdCentroCosteColumn] = value;
                }
            }
            
            public NotasGastosRow NotasGastosRow {
                get {
                    return ((NotasGastosRow)(this.GetParentRow(this.Table.ParentRelations["NotasGastosNotasGastos_Lin"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["NotasGastosNotasGastos_Lin"]);
                }
            }
            
            public bool IstDescripcionNull() {
                return this.IsNull(this.tableNotasGastos_Lin.tDescripcionColumn);
            }
            
            public void SettDescripcionNull() {
                this[this.tableNotasGastos_Lin.tDescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdCentroCosteNull() {
                return this.IsNull(this.tableNotasGastos_Lin.sIdCentroCosteColumn);
            }
            
            public void SetsIdCentroCosteNull() {
                this[this.tableNotasGastos_Lin.sIdCentroCosteColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastos_LinRowChangeEvent : EventArgs {
            
            private NotasGastos_LinRow eventRow;
            
            private DataRowAction eventAction;
            
            public NotasGastos_LinRowChangeEvent(NotasGastos_LinRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public NotasGastos_LinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesNotasGastosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdNota;
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdAtencion;
            
            private DataColumn columniNumAtencion;
            
            internal AtencionesNotasGastosDataTable() : 
                    base("AtencionesNotasGastos") {
                this.InitClass();
            }
            
            internal AtencionesNotasGastosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdNotaColumn {
                get {
                    return this.columniIdNota;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdAtencionColumn {
                get {
                    return this.columniIdAtencion;
                }
            }
            
            internal DataColumn iNumAtencionColumn {
                get {
                    return this.columniNumAtencion;
                }
            }
            
            public AtencionesNotasGastosRow this[int index] {
                get {
                    return ((AtencionesNotasGastosRow)(this.Rows[index]));
                }
            }
            
            public event AtencionesNotasGastosRowChangeEventHandler AtencionesNotasGastosRowChanged;
            
            public event AtencionesNotasGastosRowChangeEventHandler AtencionesNotasGastosRowChanging;
            
            public event AtencionesNotasGastosRowChangeEventHandler AtencionesNotasGastosRowDeleted;
            
            public event AtencionesNotasGastosRowChangeEventHandler AtencionesNotasGastosRowDeleting;
            
            public void AddAtencionesNotasGastosRow(AtencionesNotasGastosRow row) {
                this.Rows.Add(row);
            }
            
            public AtencionesNotasGastosRow AddAtencionesNotasGastosRow(NotasGastosRow parentNotasGastosRowByNotasGastosAtencionesNotasGastos, int iIdReport, int iIdCliente, int iIdAtencion, int iNumAtencion) {
                AtencionesNotasGastosRow rowAtencionesNotasGastosRow = ((AtencionesNotasGastosRow)(this.NewRow()));
                rowAtencionesNotasGastosRow.ItemArray = new object[] {
                        parentNotasGastosRowByNotasGastosAtencionesNotasGastos[0],
                        iIdReport,
                        iIdCliente,
                        iIdAtencion,
                        iNumAtencion};
                this.Rows.Add(rowAtencionesNotasGastosRow);
                return rowAtencionesNotasGastosRow;
            }
            
            public AtencionesNotasGastosRow FindByiIdNotaiIdReportiIdClienteiIdAtencioniNumAtencion(int iIdNota, int iIdReport, int iIdCliente, int iIdAtencion, int iNumAtencion) {
                return ((AtencionesNotasGastosRow)(this.Rows.Find(new object[] {
                            iIdNota,
                            iIdReport,
                            iIdCliente,
                            iIdAtencion,
                            iNumAtencion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AtencionesNotasGastosDataTable cln = ((AtencionesNotasGastosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AtencionesNotasGastosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdNota = this.Columns["iIdNota"];
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdAtencion = this.Columns["iIdAtencion"];
                this.columniNumAtencion = this.Columns["iNumAtencion"];
            }
            
            private void InitClass() {
                this.columniIdNota = new DataColumn("iIdNota", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdNota);
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdAtencion = new DataColumn("iIdAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAtencion);
                this.columniNumAtencion = new DataColumn("iNumAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniNumAtencion);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey29", new DataColumn[] {
                                this.columniIdNota,
                                this.columniIdReport,
                                this.columniIdCliente,
                                this.columniIdAtencion,
                                this.columniNumAtencion}, true));
                this.columniIdNota.AllowDBNull = false;
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdAtencion.AllowDBNull = false;
                this.columniNumAtencion.AllowDBNull = false;
            }
            
            public AtencionesNotasGastosRow NewAtencionesNotasGastosRow() {
                return ((AtencionesNotasGastosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AtencionesNotasGastosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AtencionesNotasGastosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AtencionesNotasGastosRowChanged != null)) {
                    this.AtencionesNotasGastosRowChanged(this, new AtencionesNotasGastosRowChangeEvent(((AtencionesNotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AtencionesNotasGastosRowChanging != null)) {
                    this.AtencionesNotasGastosRowChanging(this, new AtencionesNotasGastosRowChangeEvent(((AtencionesNotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AtencionesNotasGastosRowDeleted != null)) {
                    this.AtencionesNotasGastosRowDeleted(this, new AtencionesNotasGastosRowChangeEvent(((AtencionesNotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AtencionesNotasGastosRowDeleting != null)) {
                    this.AtencionesNotasGastosRowDeleting(this, new AtencionesNotasGastosRowChangeEvent(((AtencionesNotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAtencionesNotasGastosRow(AtencionesNotasGastosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesNotasGastosRow : DataRow {
            
            private AtencionesNotasGastosDataTable tableAtencionesNotasGastos;
            
            internal AtencionesNotasGastosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAtencionesNotasGastos = ((AtencionesNotasGastosDataTable)(this.Table));
            }
            
            public int iIdNota {
                get {
                    return ((int)(this[this.tableAtencionesNotasGastos.iIdNotaColumn]));
                }
                set {
                    this[this.tableAtencionesNotasGastos.iIdNotaColumn] = value;
                }
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableAtencionesNotasGastos.iIdReportColumn]));
                }
                set {
                    this[this.tableAtencionesNotasGastos.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableAtencionesNotasGastos.iIdClienteColumn]));
                }
                set {
                    this[this.tableAtencionesNotasGastos.iIdClienteColumn] = value;
                }
            }
            
            public int iIdAtencion {
                get {
                    return ((int)(this[this.tableAtencionesNotasGastos.iIdAtencionColumn]));
                }
                set {
                    this[this.tableAtencionesNotasGastos.iIdAtencionColumn] = value;
                }
            }
            
            public int iNumAtencion {
                get {
                    return ((int)(this[this.tableAtencionesNotasGastos.iNumAtencionColumn]));
                }
                set {
                    this[this.tableAtencionesNotasGastos.iNumAtencionColumn] = value;
                }
            }
            
            public NotasGastosRow NotasGastosRow {
                get {
                    return ((NotasGastosRow)(this.GetParentRow(this.Table.ParentRelations["NotasGastosAtencionesNotasGastos"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["NotasGastosAtencionesNotasGastos"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesNotasGastosRowChangeEvent : EventArgs {
            
            private AtencionesNotasGastosRow eventRow;
            
            private DataRowAction eventAction;
            
            public AtencionesNotasGastosRowChangeEvent(AtencionesNotasGastosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AtencionesNotasGastosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BricksDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdBrick;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columnbTipoBrick;
            
            private DataColumn columniIdProvincia;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            internal BricksDataTable() : 
                    base("Bricks") {
                this.InitClass();
            }
            
            internal BricksDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdBrickColumn {
                get {
                    return this.columnsIdBrick;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn bTipoBrickColumn {
                get {
                    return this.columnbTipoBrick;
                }
            }
            
            internal DataColumn iIdProvinciaColumn {
                get {
                    return this.columniIdProvincia;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public BricksRow this[int index] {
                get {
                    return ((BricksRow)(this.Rows[index]));
                }
            }
            
            public event BricksRowChangeEventHandler BricksRowChanged;
            
            public event BricksRowChangeEventHandler BricksRowChanging;
            
            public event BricksRowChangeEventHandler BricksRowDeleted;
            
            public event BricksRowChangeEventHandler BricksRowDeleting;
            
            public void AddBricksRow(BricksRow row) {
                this.Rows.Add(row);
            }
            
            public BricksRow AddBricksRow(string sIdBrick, string sDescripcion, bool bTipoBrick, int iIdProvincia, System.DateTime dFAR, System.DateTime dFBR, short iEstado) {
                BricksRow rowBricksRow = ((BricksRow)(this.NewRow()));
                rowBricksRow.ItemArray = new object[] {
                        sIdBrick,
                        sDescripcion,
                        bTipoBrick,
                        iIdProvincia,
                        dFAR,
                        dFBR,
                        iEstado};
                this.Rows.Add(rowBricksRow);
                return rowBricksRow;
            }
            
            public BricksRow FindBysIdBrick(string sIdBrick) {
                return ((BricksRow)(this.Rows.Find(new object[] {
                            sIdBrick})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                BricksDataTable cln = ((BricksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new BricksDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdBrick = this.Columns["sIdBrick"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columnbTipoBrick = this.Columns["bTipoBrick"];
                this.columniIdProvincia = this.Columns["iIdProvincia"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnsIdBrick = new DataColumn("sIdBrick", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdBrick);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columnbTipoBrick = new DataColumn("bTipoBrick", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbTipoBrick);
                this.columniIdProvincia = new DataColumn("iIdProvincia", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdProvincia);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey30", new DataColumn[] {
                                this.columnsIdBrick}, true));
                this.columnsIdBrick.AllowDBNull = false;
                this.columnsIdBrick.Unique = true;
                this.columnsDescripcion.AllowDBNull = false;
                this.columnbTipoBrick.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public BricksRow NewBricksRow() {
                return ((BricksRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new BricksRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(BricksRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BricksRowChanged != null)) {
                    this.BricksRowChanged(this, new BricksRowChangeEvent(((BricksRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BricksRowChanging != null)) {
                    this.BricksRowChanging(this, new BricksRowChangeEvent(((BricksRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BricksRowDeleted != null)) {
                    this.BricksRowDeleted(this, new BricksRowChangeEvent(((BricksRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BricksRowDeleting != null)) {
                    this.BricksRowDeleting(this, new BricksRowChangeEvent(((BricksRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveBricksRow(BricksRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BricksRow : DataRow {
            
            private BricksDataTable tableBricks;
            
            internal BricksRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableBricks = ((BricksDataTable)(this.Table));
            }
            
            public string sIdBrick {
                get {
                    return ((string)(this[this.tableBricks.sIdBrickColumn]));
                }
                set {
                    this[this.tableBricks.sIdBrickColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    return ((string)(this[this.tableBricks.sDescripcionColumn]));
                }
                set {
                    this[this.tableBricks.sDescripcionColumn] = value;
                }
            }
            
            public bool bTipoBrick {
                get {
                    return ((bool)(this[this.tableBricks.bTipoBrickColumn]));
                }
                set {
                    this[this.tableBricks.bTipoBrickColumn] = value;
                }
            }
            
            public int iIdProvincia {
                get {
                    try {
                        return ((int)(this[this.tableBricks.iIdProvinciaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableBricks.iIdProvinciaColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableBricks.dFARColumn]));
                }
                set {
                    this[this.tableBricks.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableBricks.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableBricks.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableBricks.iEstadoColumn]));
                }
                set {
                    this[this.tableBricks.iEstadoColumn] = value;
                }
            }
            
            public bool IsiIdProvinciaNull() {
                return this.IsNull(this.tableBricks.iIdProvinciaColumn);
            }
            
            public void SetiIdProvinciaNull() {
                this[this.tableBricks.iIdProvinciaColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableBricks.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableBricks.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BricksRowChangeEvent : EventArgs {
            
            private BricksRow eventRow;
            
            private DataRowAction eventAction;
            
            public BricksRowChangeEvent(BricksRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public BricksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columniIdArea;
            
            private DataColumn columnsNombre;
            
            private DataColumn columnsIdDelegadoSAP;
            
            private DataColumn columnsIdCentroSAP;
            
            private DataColumn columnsIdAlmacenSAP;
            
            private DataColumn columnbVisa;
            
            private DataColumn columnsObservaciones;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            private DataColumn columnsUsuario;
            
            private DataColumn columniIdCargo;
            
            private DataColumn columndFUSVisitas;
            
            private DataColumn columndFUSGastos;
            
            private DataColumn columndFUSClientes;
            
            private DataColumn columndFUSAtenciones;
            
            private DataColumn columndFUSPedidosB;
            
            private DataColumn columndFUSVisitasB;
            
            private DataColumn columndFUSGastosB;
            
            private DataColumn columndFUSClientesB;
            
            private DataColumn columndFUSAtencionesB;
            
            private DataColumn columnsIdAcreedor;
            
            private DataColumn columniIdParrilla;
            
            private DataColumn columnnmedicos;
            
            private DataColumn columniIdGastoKMS;
            
            internal DelegadosDataTable() : 
                    base("Delegados") {
                this.InitClass();
            }
            
            internal DelegadosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn iIdAreaColumn {
                get {
                    return this.columniIdArea;
                }
            }
            
            internal DataColumn sNombreColumn {
                get {
                    return this.columnsNombre;
                }
            }
            
            internal DataColumn sIdDelegadoSAPColumn {
                get {
                    return this.columnsIdDelegadoSAP;
                }
            }
            
            internal DataColumn sIdCentroSAPColumn {
                get {
                    return this.columnsIdCentroSAP;
                }
            }
            
            internal DataColumn sIdAlmacenSAPColumn {
                get {
                    return this.columnsIdAlmacenSAP;
                }
            }
            
            internal DataColumn bVisaColumn {
                get {
                    return this.columnbVisa;
                }
            }
            
            internal DataColumn sObservacionesColumn {
                get {
                    return this.columnsObservaciones;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn sUsuarioColumn {
                get {
                    return this.columnsUsuario;
                }
            }
            
            internal DataColumn iIdCargoColumn {
                get {
                    return this.columniIdCargo;
                }
            }
            
            internal DataColumn dFUSVisitasColumn {
                get {
                    return this.columndFUSVisitas;
                }
            }
            
            internal DataColumn dFUSGastosColumn {
                get {
                    return this.columndFUSGastos;
                }
            }
            
            internal DataColumn dFUSClientesColumn {
                get {
                    return this.columndFUSClientes;
                }
            }
            
            internal DataColumn dFUSAtencionesColumn {
                get {
                    return this.columndFUSAtenciones;
                }
            }
            
            internal DataColumn dFUSPedidosBColumn {
                get {
                    return this.columndFUSPedidosB;
                }
            }
            
            internal DataColumn dFUSVisitasBColumn {
                get {
                    return this.columndFUSVisitasB;
                }
            }
            
            internal DataColumn dFUSGastosBColumn {
                get {
                    return this.columndFUSGastosB;
                }
            }
            
            internal DataColumn dFUSClientesBColumn {
                get {
                    return this.columndFUSClientesB;
                }
            }
            
            internal DataColumn dFUSAtencionesBColumn {
                get {
                    return this.columndFUSAtencionesB;
                }
            }
            
            internal DataColumn sIdAcreedorColumn {
                get {
                    return this.columnsIdAcreedor;
                }
            }
            
            internal DataColumn iIdParrillaColumn {
                get {
                    return this.columniIdParrilla;
                }
            }
            
            internal DataColumn nmedicosColumn {
                get {
                    return this.columnnmedicos;
                }
            }
            
            internal DataColumn iIdGastoKMSColumn {
                get {
                    return this.columniIdGastoKMS;
                }
            }
            
            public DelegadosRow this[int index] {
                get {
                    return ((DelegadosRow)(this.Rows[index]));
                }
            }
            
            public event DelegadosRowChangeEventHandler DelegadosRowChanged;
            
            public event DelegadosRowChangeEventHandler DelegadosRowChanging;
            
            public event DelegadosRowChangeEventHandler DelegadosRowDeleted;
            
            public event DelegadosRowChangeEventHandler DelegadosRowDeleting;
            
            public void AddDelegadosRow(DelegadosRow row) {
                this.Rows.Add(row);
            }
            
            public DelegadosRow AddDelegadosRow(
                        int iIdArea, 
                        string sNombre, 
                        string sIdDelegadoSAP, 
                        string sIdCentroSAP, 
                        string sIdAlmacenSAP, 
                        bool bVisa, 
                        string sObservaciones, 
                        short iEstado, 
                        System.DateTime dFUM, 
                        string sUsuario, 
                        int iIdCargo, 
                        System.DateTime dFUSVisitas, 
                        System.DateTime dFUSGastos, 
                        System.DateTime dFUSClientes, 
                        System.DateTime dFUSAtenciones, 
                        System.DateTime dFUSPedidosB, 
                        System.DateTime dFUSVisitasB, 
                        System.DateTime dFUSGastosB, 
                        System.DateTime dFUSClientesB, 
                        System.DateTime dFUSAtencionesB, 
                        string sIdAcreedor, 
                        int iIdParrilla, 
                        int nmedicos, 
                        int iIdGastoKMS) {
                DelegadosRow rowDelegadosRow = ((DelegadosRow)(this.NewRow()));
                rowDelegadosRow.ItemArray = new object[] {
                        null,
                        iIdArea,
                        sNombre,
                        sIdDelegadoSAP,
                        sIdCentroSAP,
                        sIdAlmacenSAP,
                        bVisa,
                        sObservaciones,
                        iEstado,
                        dFUM,
                        sUsuario,
                        iIdCargo,
                        dFUSVisitas,
                        dFUSGastos,
                        dFUSClientes,
                        dFUSAtenciones,
                        dFUSPedidosB,
                        dFUSVisitasB,
                        dFUSGastosB,
                        dFUSClientesB,
                        dFUSAtencionesB,
                        sIdAcreedor,
                        iIdParrilla,
                        nmedicos,
                        iIdGastoKMS};
                this.Rows.Add(rowDelegadosRow);
                return rowDelegadosRow;
            }
            
            public DelegadosRow FindByiIdDelegado(int iIdDelegado) {
                return ((DelegadosRow)(this.Rows.Find(new object[] {
                            iIdDelegado})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DelegadosDataTable cln = ((DelegadosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DelegadosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columniIdArea = this.Columns["iIdArea"];
                this.columnsNombre = this.Columns["sNombre"];
                this.columnsIdDelegadoSAP = this.Columns["sIdDelegadoSAP"];
                this.columnsIdCentroSAP = this.Columns["sIdCentroSAP"];
                this.columnsIdAlmacenSAP = this.Columns["sIdAlmacenSAP"];
                this.columnbVisa = this.Columns["bVisa"];
                this.columnsObservaciones = this.Columns["sObservaciones"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
                this.columnsUsuario = this.Columns["sUsuario"];
                this.columniIdCargo = this.Columns["iIdCargo"];
                this.columndFUSVisitas = this.Columns["dFUSVisitas"];
                this.columndFUSGastos = this.Columns["dFUSGastos"];
                this.columndFUSClientes = this.Columns["dFUSClientes"];
                this.columndFUSAtenciones = this.Columns["dFUSAtenciones"];
                this.columndFUSPedidosB = this.Columns["dFUSPedidosB"];
                this.columndFUSVisitasB = this.Columns["dFUSVisitasB"];
                this.columndFUSGastosB = this.Columns["dFUSGastosB"];
                this.columndFUSClientesB = this.Columns["dFUSClientesB"];
                this.columndFUSAtencionesB = this.Columns["dFUSAtencionesB"];
                this.columnsIdAcreedor = this.Columns["sIdAcreedor"];
                this.columniIdParrilla = this.Columns["iIdParrilla"];
                this.columnnmedicos = this.Columns["nmedicos"];
                this.columniIdGastoKMS = this.Columns["iIdGastoKMS"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columniIdArea = new DataColumn("iIdArea", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdArea);
                this.columnsNombre = new DataColumn("sNombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombre);
                this.columnsIdDelegadoSAP = new DataColumn("sIdDelegadoSAP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdDelegadoSAP);
                this.columnsIdCentroSAP = new DataColumn("sIdCentroSAP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentroSAP);
                this.columnsIdAlmacenSAP = new DataColumn("sIdAlmacenSAP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAlmacenSAP);
                this.columnbVisa = new DataColumn("bVisa", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbVisa);
                this.columnsObservaciones = new DataColumn("sObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsObservaciones);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columnsUsuario = new DataColumn("sUsuario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuario);
                this.columniIdCargo = new DataColumn("iIdCargo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCargo);
                this.columndFUSVisitas = new DataColumn("dFUSVisitas", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSVisitas);
                this.columndFUSGastos = new DataColumn("dFUSGastos", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSGastos);
                this.columndFUSClientes = new DataColumn("dFUSClientes", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSClientes);
                this.columndFUSAtenciones = new DataColumn("dFUSAtenciones", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSAtenciones);
                this.columndFUSPedidosB = new DataColumn("dFUSPedidosB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSPedidosB);
                this.columndFUSVisitasB = new DataColumn("dFUSVisitasB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSVisitasB);
                this.columndFUSGastosB = new DataColumn("dFUSGastosB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSGastosB);
                this.columndFUSClientesB = new DataColumn("dFUSClientesB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSClientesB);
                this.columndFUSAtencionesB = new DataColumn("dFUSAtencionesB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSAtencionesB);
                this.columnsIdAcreedor = new DataColumn("sIdAcreedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAcreedor);
                this.columniIdParrilla = new DataColumn("iIdParrilla", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdParrilla);
                this.columnnmedicos = new DataColumn("nmedicos", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnmedicos);
                this.columniIdGastoKMS = new DataColumn("iIdGastoKMS", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdGastoKMS);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey32", new DataColumn[] {
                                this.columniIdDelegado}, true));
                this.columniIdDelegado.AutoIncrement = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columniIdDelegado.ReadOnly = true;
                this.columniIdDelegado.Unique = true;
                this.columnsNombre.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columndFUSVisitas.AllowDBNull = false;
                this.columndFUSGastos.AllowDBNull = false;
                this.columndFUSClientes.AllowDBNull = false;
                this.columndFUSAtenciones.AllowDBNull = false;
                this.columndFUSPedidosB.AllowDBNull = false;
                this.columndFUSVisitasB.AllowDBNull = false;
                this.columndFUSGastosB.AllowDBNull = false;
                this.columndFUSClientesB.AllowDBNull = false;
                this.columndFUSAtencionesB.AllowDBNull = false;
            }
            
            public DelegadosRow NewDelegadosRow() {
                return ((DelegadosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DelegadosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DelegadosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DelegadosRowChanged != null)) {
                    this.DelegadosRowChanged(this, new DelegadosRowChangeEvent(((DelegadosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DelegadosRowChanging != null)) {
                    this.DelegadosRowChanging(this, new DelegadosRowChangeEvent(((DelegadosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DelegadosRowDeleted != null)) {
                    this.DelegadosRowDeleted(this, new DelegadosRowChangeEvent(((DelegadosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DelegadosRowDeleting != null)) {
                    this.DelegadosRowDeleting(this, new DelegadosRowChangeEvent(((DelegadosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDelegadosRow(DelegadosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadosRow : DataRow {
            
            private DelegadosDataTable tableDelegados;
            
            internal DelegadosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDelegados = ((DelegadosDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableDelegados.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableDelegados.iIdDelegadoColumn] = value;
                }
            }
            
            public int iIdArea {
                get {
                    try {
                        return ((int)(this[this.tableDelegados.iIdAreaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.iIdAreaColumn] = value;
                }
            }
            
            public string sNombre {
                get {
                    return ((string)(this[this.tableDelegados.sNombreColumn]));
                }
                set {
                    this[this.tableDelegados.sNombreColumn] = value;
                }
            }
            
            public string sIdDelegadoSAP {
                get {
                    try {
                        return ((string)(this[this.tableDelegados.sIdDelegadoSAPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.sIdDelegadoSAPColumn] = value;
                }
            }
            
            public string sIdCentroSAP {
                get {
                    try {
                        return ((string)(this[this.tableDelegados.sIdCentroSAPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.sIdCentroSAPColumn] = value;
                }
            }
            
            public string sIdAlmacenSAP {
                get {
                    try {
                        return ((string)(this[this.tableDelegados.sIdAlmacenSAPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.sIdAlmacenSAPColumn] = value;
                }
            }
            
            public bool bVisa {
                get {
                    try {
                        return ((bool)(this[this.tableDelegados.bVisaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.bVisaColumn] = value;
                }
            }
            
            public string sObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableDelegados.sObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.sObservacionesColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableDelegados.iEstadoColumn]));
                }
                set {
                    this[this.tableDelegados.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUMColumn]));
                }
                set {
                    this[this.tableDelegados.dFUMColumn] = value;
                }
            }
            
            public string sUsuario {
                get {
                    try {
                        return ((string)(this[this.tableDelegados.sUsuarioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.sUsuarioColumn] = value;
                }
            }
            
            public int iIdCargo {
                get {
                    try {
                        return ((int)(this[this.tableDelegados.iIdCargoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.iIdCargoColumn] = value;
                }
            }
            
            public System.DateTime dFUSVisitas {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSVisitasColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSVisitasColumn] = value;
                }
            }
            
            public System.DateTime dFUSGastos {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSGastosColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSGastosColumn] = value;
                }
            }
            
            public System.DateTime dFUSClientes {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSClientesColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSClientesColumn] = value;
                }
            }
            
            public System.DateTime dFUSAtenciones {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSAtencionesColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSAtencionesColumn] = value;
                }
            }
            
            public System.DateTime dFUSPedidosB {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSPedidosBColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSPedidosBColumn] = value;
                }
            }
            
            public System.DateTime dFUSVisitasB {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSVisitasBColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSVisitasBColumn] = value;
                }
            }
            
            public System.DateTime dFUSGastosB {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSGastosBColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSGastosBColumn] = value;
                }
            }
            
            public System.DateTime dFUSClientesB {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSClientesBColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSClientesBColumn] = value;
                }
            }
            
            public System.DateTime dFUSAtencionesB {
                get {
                    return ((System.DateTime)(this[this.tableDelegados.dFUSAtencionesBColumn]));
                }
                set {
                    this[this.tableDelegados.dFUSAtencionesBColumn] = value;
                }
            }
            
            public string sIdAcreedor {
                get {
                    try {
                        return ((string)(this[this.tableDelegados.sIdAcreedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.sIdAcreedorColumn] = value;
                }
            }
            
            public int iIdParrilla {
                get {
                    try {
                        return ((int)(this[this.tableDelegados.iIdParrillaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.iIdParrillaColumn] = value;
                }
            }
            
            public int nmedicos {
                get {
                    try {
                        return ((int)(this[this.tableDelegados.nmedicosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.nmedicosColumn] = value;
                }
            }
            
            public int iIdGastoKMS {
                get {
                    try {
                        return ((int)(this[this.tableDelegados.iIdGastoKMSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegados.iIdGastoKMSColumn] = value;
                }
            }
            
            public bool IsiIdAreaNull() {
                return this.IsNull(this.tableDelegados.iIdAreaColumn);
            }
            
            public void SetiIdAreaNull() {
                this[this.tableDelegados.iIdAreaColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdDelegadoSAPNull() {
                return this.IsNull(this.tableDelegados.sIdDelegadoSAPColumn);
            }
            
            public void SetsIdDelegadoSAPNull() {
                this[this.tableDelegados.sIdDelegadoSAPColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdCentroSAPNull() {
                return this.IsNull(this.tableDelegados.sIdCentroSAPColumn);
            }
            
            public void SetsIdCentroSAPNull() {
                this[this.tableDelegados.sIdCentroSAPColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdAlmacenSAPNull() {
                return this.IsNull(this.tableDelegados.sIdAlmacenSAPColumn);
            }
            
            public void SetsIdAlmacenSAPNull() {
                this[this.tableDelegados.sIdAlmacenSAPColumn] = System.Convert.DBNull;
            }
            
            public bool IsbVisaNull() {
                return this.IsNull(this.tableDelegados.bVisaColumn);
            }
            
            public void SetbVisaNull() {
                this[this.tableDelegados.bVisaColumn] = System.Convert.DBNull;
            }
            
            public bool IssObservacionesNull() {
                return this.IsNull(this.tableDelegados.sObservacionesColumn);
            }
            
            public void SetsObservacionesNull() {
                this[this.tableDelegados.sObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IssUsuarioNull() {
                return this.IsNull(this.tableDelegados.sUsuarioColumn);
            }
            
            public void SetsUsuarioNull() {
                this[this.tableDelegados.sUsuarioColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdCargoNull() {
                return this.IsNull(this.tableDelegados.iIdCargoColumn);
            }
            
            public void SetiIdCargoNull() {
                this[this.tableDelegados.iIdCargoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdAcreedorNull() {
                return this.IsNull(this.tableDelegados.sIdAcreedorColumn);
            }
            
            public void SetsIdAcreedorNull() {
                this[this.tableDelegados.sIdAcreedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdParrillaNull() {
                return this.IsNull(this.tableDelegados.iIdParrillaColumn);
            }
            
            public void SetiIdParrillaNull() {
                this[this.tableDelegados.iIdParrillaColumn] = System.Convert.DBNull;
            }
            
            public bool IsnmedicosNull() {
                return this.IsNull(this.tableDelegados.nmedicosColumn);
            }
            
            public void SetnmedicosNull() {
                this[this.tableDelegados.nmedicosColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdGastoKMSNull() {
                return this.IsNull(this.tableDelegados.iIdGastoKMSColumn);
            }
            
            public void SetiIdGastoKMSNull() {
                this[this.tableDelegados.iIdGastoKMSColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadosRowChangeEvent : EventArgs {
            
            private DelegadosRow eventRow;
            
            private DataRowAction eventAction;
            
            public DelegadosRowChangeEvent(DelegadosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DelegadosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GastosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdGasto;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columnfPrecio;
            
            private DataColumn columnsCuentaSAP;
            
            private DataColumn columnsCosteSAP;
            
            private DataColumn columnbSistema;
            
            private DataColumn columnbImputaPresup;
            
            private DataColumn columnsIdCategGasto;
            
            private DataColumn columnsIdTipCentroCoste;
            
            private DataColumn columnsIdTipoGasto;
            
            private DataColumn columniNumLimite;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal GastosDataTable() : 
                    base("Gastos") {
                this.InitClass();
            }
            
            internal GastosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdGastoColumn {
                get {
                    return this.columniIdGasto;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn fPrecioColumn {
                get {
                    return this.columnfPrecio;
                }
            }
            
            internal DataColumn sCuentaSAPColumn {
                get {
                    return this.columnsCuentaSAP;
                }
            }
            
            internal DataColumn sCosteSAPColumn {
                get {
                    return this.columnsCosteSAP;
                }
            }
            
            internal DataColumn bSistemaColumn {
                get {
                    return this.columnbSistema;
                }
            }
            
            internal DataColumn bImputaPresupColumn {
                get {
                    return this.columnbImputaPresup;
                }
            }
            
            internal DataColumn sIdCategGastoColumn {
                get {
                    return this.columnsIdCategGasto;
                }
            }
            
            internal DataColumn sIdTipCentroCosteColumn {
                get {
                    return this.columnsIdTipCentroCoste;
                }
            }
            
            internal DataColumn sIdTipoGastoColumn {
                get {
                    return this.columnsIdTipoGasto;
                }
            }
            
            internal DataColumn iNumLimiteColumn {
                get {
                    return this.columniNumLimite;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public GastosRow this[int index] {
                get {
                    return ((GastosRow)(this.Rows[index]));
                }
            }
            
            public event GastosRowChangeEventHandler GastosRowChanged;
            
            public event GastosRowChangeEventHandler GastosRowChanging;
            
            public event GastosRowChangeEventHandler GastosRowDeleted;
            
            public event GastosRowChangeEventHandler GastosRowDeleting;
            
            public void AddGastosRow(GastosRow row) {
                this.Rows.Add(row);
            }
            
            public GastosRow AddGastosRow(string sDescripcion, System.Double fPrecio, string sCuentaSAP, string sCosteSAP, int bSistema, bool bImputaPresup, string sIdCategGasto, string sIdTipCentroCoste, string sIdTipoGasto, int iNumLimite, System.DateTime dFUM, int iEstado) {
                GastosRow rowGastosRow = ((GastosRow)(this.NewRow()));
                rowGastosRow.ItemArray = new object[] {
                        null,
                        sDescripcion,
                        fPrecio,
                        sCuentaSAP,
                        sCosteSAP,
                        bSistema,
                        bImputaPresup,
                        sIdCategGasto,
                        sIdTipCentroCoste,
                        sIdTipoGasto,
                        iNumLimite,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowGastosRow);
                return rowGastosRow;
            }
            
            public GastosRow FindByiIdGasto(int iIdGasto) {
                return ((GastosRow)(this.Rows.Find(new object[] {
                            iIdGasto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GastosDataTable cln = ((GastosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GastosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdGasto = this.Columns["iIdGasto"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columnfPrecio = this.Columns["fPrecio"];
                this.columnsCuentaSAP = this.Columns["sCuentaSAP"];
                this.columnsCosteSAP = this.Columns["sCosteSAP"];
                this.columnbSistema = this.Columns["bSistema"];
                this.columnbImputaPresup = this.Columns["bImputaPresup"];
                this.columnsIdCategGasto = this.Columns["sIdCategGasto"];
                this.columnsIdTipCentroCoste = this.Columns["sIdTipCentroCoste"];
                this.columnsIdTipoGasto = this.Columns["sIdTipoGasto"];
                this.columniNumLimite = this.Columns["iNumLimite"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdGasto = new DataColumn("iIdGasto", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdGasto);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columnfPrecio = new DataColumn("fPrecio", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPrecio);
                this.columnsCuentaSAP = new DataColumn("sCuentaSAP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCuentaSAP);
                this.columnsCosteSAP = new DataColumn("sCosteSAP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCosteSAP);
                this.columnbSistema = new DataColumn("bSistema", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbSistema);
                this.columnbImputaPresup = new DataColumn("bImputaPresup", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbImputaPresup);
                this.columnsIdCategGasto = new DataColumn("sIdCategGasto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCategGasto);
                this.columnsIdTipCentroCoste = new DataColumn("sIdTipCentroCoste", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipCentroCoste);
                this.columnsIdTipoGasto = new DataColumn("sIdTipoGasto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoGasto);
                this.columniNumLimite = new DataColumn("iNumLimite", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniNumLimite);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey33", new DataColumn[] {
                                this.columniIdGasto}, true));
                this.columniIdGasto.AutoIncrement = true;
                this.columniIdGasto.AllowDBNull = false;
                this.columniIdGasto.ReadOnly = true;
                this.columniIdGasto.Unique = true;
                this.columnsDescripcion.AllowDBNull = false;
                this.columnfPrecio.AllowDBNull = false;
                this.columnbSistema.AllowDBNull = false;
                this.columnbImputaPresup.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public GastosRow NewGastosRow() {
                return ((GastosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GastosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GastosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GastosRowChanged != null)) {
                    this.GastosRowChanged(this, new GastosRowChangeEvent(((GastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GastosRowChanging != null)) {
                    this.GastosRowChanging(this, new GastosRowChangeEvent(((GastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GastosRowDeleted != null)) {
                    this.GastosRowDeleted(this, new GastosRowChangeEvent(((GastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GastosRowDeleting != null)) {
                    this.GastosRowDeleting(this, new GastosRowChangeEvent(((GastosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGastosRow(GastosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GastosRow : DataRow {
            
            private GastosDataTable tableGastos;
            
            internal GastosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGastos = ((GastosDataTable)(this.Table));
            }
            
            public int iIdGasto {
                get {
                    return ((int)(this[this.tableGastos.iIdGastoColumn]));
                }
                set {
                    this[this.tableGastos.iIdGastoColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    return ((string)(this[this.tableGastos.sDescripcionColumn]));
                }
                set {
                    this[this.tableGastos.sDescripcionColumn] = value;
                }
            }
            
            public System.Double fPrecio {
                get {
                    return ((System.Double)(this[this.tableGastos.fPrecioColumn]));
                }
                set {
                    this[this.tableGastos.fPrecioColumn] = value;
                }
            }
            
            public string sCuentaSAP {
                get {
                    try {
                        return ((string)(this[this.tableGastos.sCuentaSAPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGastos.sCuentaSAPColumn] = value;
                }
            }
            
            public string sCosteSAP {
                get {
                    try {
                        return ((string)(this[this.tableGastos.sCosteSAPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGastos.sCosteSAPColumn] = value;
                }
            }
            
            public int bSistema {
                get {
                    return ((int)(this[this.tableGastos.bSistemaColumn]));
                }
                set {
                    this[this.tableGastos.bSistemaColumn] = value;
                }
            }
            
            public bool bImputaPresup {
                get {
                    return ((bool)(this[this.tableGastos.bImputaPresupColumn]));
                }
                set {
                    this[this.tableGastos.bImputaPresupColumn] = value;
                }
            }
            
            public string sIdCategGasto {
                get {
                    try {
                        return ((string)(this[this.tableGastos.sIdCategGastoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGastos.sIdCategGastoColumn] = value;
                }
            }
            
            public string sIdTipCentroCoste {
                get {
                    try {
                        return ((string)(this[this.tableGastos.sIdTipCentroCosteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGastos.sIdTipCentroCosteColumn] = value;
                }
            }
            
            public string sIdTipoGasto {
                get {
                    try {
                        return ((string)(this[this.tableGastos.sIdTipoGastoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGastos.sIdTipoGastoColumn] = value;
                }
            }
            
            public int iNumLimite {
                get {
                    try {
                        return ((int)(this[this.tableGastos.iNumLimiteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGastos.iNumLimiteColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableGastos.dFUMColumn]));
                }
                set {
                    this[this.tableGastos.dFUMColumn] = value;
                }
            }
            
            public int iEstado {
                get {
                    return ((int)(this[this.tableGastos.iEstadoColumn]));
                }
                set {
                    this[this.tableGastos.iEstadoColumn] = value;
                }
            }
            
            public bool IssCuentaSAPNull() {
                return this.IsNull(this.tableGastos.sCuentaSAPColumn);
            }
            
            public void SetsCuentaSAPNull() {
                this[this.tableGastos.sCuentaSAPColumn] = System.Convert.DBNull;
            }
            
            public bool IssCosteSAPNull() {
                return this.IsNull(this.tableGastos.sCosteSAPColumn);
            }
            
            public void SetsCosteSAPNull() {
                this[this.tableGastos.sCosteSAPColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdCategGastoNull() {
                return this.IsNull(this.tableGastos.sIdCategGastoColumn);
            }
            
            public void SetsIdCategGastoNull() {
                this[this.tableGastos.sIdCategGastoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipCentroCosteNull() {
                return this.IsNull(this.tableGastos.sIdTipCentroCosteColumn);
            }
            
            public void SetsIdTipCentroCosteNull() {
                this[this.tableGastos.sIdTipCentroCosteColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoGastoNull() {
                return this.IsNull(this.tableGastos.sIdTipoGastoColumn);
            }
            
            public void SetsIdTipoGastoNull() {
                this[this.tableGastos.sIdTipoGastoColumn] = System.Convert.DBNull;
            }
            
            public bool IsiNumLimiteNull() {
                return this.IsNull(this.tableGastos.iNumLimiteColumn);
            }
            
            public void SetiNumLimiteNull() {
                this[this.tableGastos.iNumLimiteColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GastosRowChangeEvent : EventArgs {
            
            private GastosRow eventRow;
            
            private DataRowAction eventAction;
            
            public GastosRowChangeEvent(GastosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GastosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PeriodosPresupuestosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdPeriodo;
            
            private DataColumn columndFechaIni;
            
            private DataColumn columndFechaFin;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal PeriodosPresupuestosDataTable() : 
                    base("PeriodosPresupuestos") {
                this.InitClass();
            }
            
            internal PeriodosPresupuestosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdPeriodoColumn {
                get {
                    return this.columniIdPeriodo;
                }
            }
            
            internal DataColumn dFechaIniColumn {
                get {
                    return this.columndFechaIni;
                }
            }
            
            internal DataColumn dFechaFinColumn {
                get {
                    return this.columndFechaFin;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public PeriodosPresupuestosRow this[int index] {
                get {
                    return ((PeriodosPresupuestosRow)(this.Rows[index]));
                }
            }
            
            public event PeriodosPresupuestosRowChangeEventHandler PeriodosPresupuestosRowChanged;
            
            public event PeriodosPresupuestosRowChangeEventHandler PeriodosPresupuestosRowChanging;
            
            public event PeriodosPresupuestosRowChangeEventHandler PeriodosPresupuestosRowDeleted;
            
            public event PeriodosPresupuestosRowChangeEventHandler PeriodosPresupuestosRowDeleting;
            
            public void AddPeriodosPresupuestosRow(PeriodosPresupuestosRow row) {
                this.Rows.Add(row);
            }
            
            public PeriodosPresupuestosRow AddPeriodosPresupuestosRow(System.DateTime dFechaIni, System.DateTime dFechaFin, string sDescripcion, System.DateTime dFUM, short iEstado) {
                PeriodosPresupuestosRow rowPeriodosPresupuestosRow = ((PeriodosPresupuestosRow)(this.NewRow()));
                rowPeriodosPresupuestosRow.ItemArray = new object[] {
                        null,
                        dFechaIni,
                        dFechaFin,
                        sDescripcion,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowPeriodosPresupuestosRow);
                return rowPeriodosPresupuestosRow;
            }
            
            public PeriodosPresupuestosRow FindByiIdPeriodo(int iIdPeriodo) {
                return ((PeriodosPresupuestosRow)(this.Rows.Find(new object[] {
                            iIdPeriodo})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PeriodosPresupuestosDataTable cln = ((PeriodosPresupuestosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PeriodosPresupuestosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdPeriodo = this.Columns["iIdPeriodo"];
                this.columndFechaIni = this.Columns["dFechaIni"];
                this.columndFechaFin = this.Columns["dFechaFin"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdPeriodo = new DataColumn("iIdPeriodo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdPeriodo);
                this.columndFechaIni = new DataColumn("dFechaIni", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaIni);
                this.columndFechaFin = new DataColumn("dFechaFin", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaFin);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey34", new DataColumn[] {
                                this.columniIdPeriodo}, true));
                this.columniIdPeriodo.AutoIncrement = true;
                this.columniIdPeriodo.AllowDBNull = false;
                this.columniIdPeriodo.ReadOnly = true;
                this.columniIdPeriodo.Unique = true;
                this.columndFechaIni.AllowDBNull = false;
                this.columndFechaFin.AllowDBNull = false;
                this.columnsDescripcion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public PeriodosPresupuestosRow NewPeriodosPresupuestosRow() {
                return ((PeriodosPresupuestosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PeriodosPresupuestosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PeriodosPresupuestosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PeriodosPresupuestosRowChanged != null)) {
                    this.PeriodosPresupuestosRowChanged(this, new PeriodosPresupuestosRowChangeEvent(((PeriodosPresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PeriodosPresupuestosRowChanging != null)) {
                    this.PeriodosPresupuestosRowChanging(this, new PeriodosPresupuestosRowChangeEvent(((PeriodosPresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PeriodosPresupuestosRowDeleted != null)) {
                    this.PeriodosPresupuestosRowDeleted(this, new PeriodosPresupuestosRowChangeEvent(((PeriodosPresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PeriodosPresupuestosRowDeleting != null)) {
                    this.PeriodosPresupuestosRowDeleting(this, new PeriodosPresupuestosRowChangeEvent(((PeriodosPresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePeriodosPresupuestosRow(PeriodosPresupuestosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PeriodosPresupuestosRow : DataRow {
            
            private PeriodosPresupuestosDataTable tablePeriodosPresupuestos;
            
            internal PeriodosPresupuestosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePeriodosPresupuestos = ((PeriodosPresupuestosDataTable)(this.Table));
            }
            
            public int iIdPeriodo {
                get {
                    return ((int)(this[this.tablePeriodosPresupuestos.iIdPeriodoColumn]));
                }
                set {
                    this[this.tablePeriodosPresupuestos.iIdPeriodoColumn] = value;
                }
            }
            
            public System.DateTime dFechaIni {
                get {
                    return ((System.DateTime)(this[this.tablePeriodosPresupuestos.dFechaIniColumn]));
                }
                set {
                    this[this.tablePeriodosPresupuestos.dFechaIniColumn] = value;
                }
            }
            
            public System.DateTime dFechaFin {
                get {
                    return ((System.DateTime)(this[this.tablePeriodosPresupuestos.dFechaFinColumn]));
                }
                set {
                    this[this.tablePeriodosPresupuestos.dFechaFinColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    return ((string)(this[this.tablePeriodosPresupuestos.sDescripcionColumn]));
                }
                set {
                    this[this.tablePeriodosPresupuestos.sDescripcionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tablePeriodosPresupuestos.dFUMColumn]));
                }
                set {
                    this[this.tablePeriodosPresupuestos.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tablePeriodosPresupuestos.iEstadoColumn]));
                }
                set {
                    this[this.tablePeriodosPresupuestos.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PeriodosPresupuestosRowChangeEvent : EventArgs {
            
            private PeriodosPresupuestosRow eventRow;
            
            private DataRowAction eventAction;
            
            public PeriodosPresupuestosRowChangeEvent(PeriodosPresupuestosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PeriodosPresupuestosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PresupuestosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsTipoPresupuesto;
            
            private DataColumn columniIdPeriodo;
            
            private DataColumn columnfImporte;
            
            private DataColumn columnfImporteActual;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal PresupuestosDataTable() : 
                    base("Presupuestos") {
                this.InitClass();
            }
            
            internal PresupuestosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sTipoPresupuestoColumn {
                get {
                    return this.columnsTipoPresupuesto;
                }
            }
            
            internal DataColumn iIdPeriodoColumn {
                get {
                    return this.columniIdPeriodo;
                }
            }
            
            internal DataColumn fImporteColumn {
                get {
                    return this.columnfImporte;
                }
            }
            
            internal DataColumn fImporteActualColumn {
                get {
                    return this.columnfImporteActual;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public PresupuestosRow this[int index] {
                get {
                    return ((PresupuestosRow)(this.Rows[index]));
                }
            }
            
            public event PresupuestosRowChangeEventHandler PresupuestosRowChanged;
            
            public event PresupuestosRowChangeEventHandler PresupuestosRowChanging;
            
            public event PresupuestosRowChangeEventHandler PresupuestosRowDeleted;
            
            public event PresupuestosRowChangeEventHandler PresupuestosRowDeleting;
            
            public void AddPresupuestosRow(PresupuestosRow row) {
                this.Rows.Add(row);
            }
            
            public PresupuestosRow AddPresupuestosRow(int iIdDelegado, string sTipoPresupuesto, int iIdPeriodo, System.Double fImporte, System.Double fImporteActual, System.DateTime dFUM, short iEstado) {
                PresupuestosRow rowPresupuestosRow = ((PresupuestosRow)(this.NewRow()));
                rowPresupuestosRow.ItemArray = new object[] {
                        iIdDelegado,
                        sTipoPresupuesto,
                        iIdPeriodo,
                        fImporte,
                        fImporteActual,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowPresupuestosRow);
                return rowPresupuestosRow;
            }
            
            public PresupuestosRow FindByiIdDelegadosTipoPresupuestoiIdPeriodo(int iIdDelegado, string sTipoPresupuesto, int iIdPeriodo) {
                return ((PresupuestosRow)(this.Rows.Find(new object[] {
                            iIdDelegado,
                            sTipoPresupuesto,
                            iIdPeriodo})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PresupuestosDataTable cln = ((PresupuestosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PresupuestosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsTipoPresupuesto = this.Columns["sTipoPresupuesto"];
                this.columniIdPeriodo = this.Columns["iIdPeriodo"];
                this.columnfImporte = this.Columns["fImporte"];
                this.columnfImporteActual = this.Columns["fImporteActual"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsTipoPresupuesto = new DataColumn("sTipoPresupuesto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoPresupuesto);
                this.columniIdPeriodo = new DataColumn("iIdPeriodo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdPeriodo);
                this.columnfImporte = new DataColumn("fImporte", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporte);
                this.columnfImporteActual = new DataColumn("fImporteActual", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporteActual);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey35", new DataColumn[] {
                                this.columniIdDelegado,
                                this.columnsTipoPresupuesto,
                                this.columniIdPeriodo}, true));
                this.columniIdDelegado.AllowDBNull = false;
                this.columnsTipoPresupuesto.AllowDBNull = false;
                this.columniIdPeriodo.AllowDBNull = false;
                this.columnfImporte.AllowDBNull = false;
                this.columnfImporteActual.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public PresupuestosRow NewPresupuestosRow() {
                return ((PresupuestosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PresupuestosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PresupuestosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PresupuestosRowChanged != null)) {
                    this.PresupuestosRowChanged(this, new PresupuestosRowChangeEvent(((PresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PresupuestosRowChanging != null)) {
                    this.PresupuestosRowChanging(this, new PresupuestosRowChangeEvent(((PresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PresupuestosRowDeleted != null)) {
                    this.PresupuestosRowDeleted(this, new PresupuestosRowChangeEvent(((PresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PresupuestosRowDeleting != null)) {
                    this.PresupuestosRowDeleting(this, new PresupuestosRowChangeEvent(((PresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePresupuestosRow(PresupuestosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PresupuestosRow : DataRow {
            
            private PresupuestosDataTable tablePresupuestos;
            
            internal PresupuestosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePresupuestos = ((PresupuestosDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tablePresupuestos.iIdDelegadoColumn]));
                }
                set {
                    this[this.tablePresupuestos.iIdDelegadoColumn] = value;
                }
            }
            
            public string sTipoPresupuesto {
                get {
                    return ((string)(this[this.tablePresupuestos.sTipoPresupuestoColumn]));
                }
                set {
                    this[this.tablePresupuestos.sTipoPresupuestoColumn] = value;
                }
            }
            
            public int iIdPeriodo {
                get {
                    return ((int)(this[this.tablePresupuestos.iIdPeriodoColumn]));
                }
                set {
                    this[this.tablePresupuestos.iIdPeriodoColumn] = value;
                }
            }
            
            public System.Double fImporte {
                get {
                    return ((System.Double)(this[this.tablePresupuestos.fImporteColumn]));
                }
                set {
                    this[this.tablePresupuestos.fImporteColumn] = value;
                }
            }
            
            public System.Double fImporteActual {
                get {
                    return ((System.Double)(this[this.tablePresupuestos.fImporteActualColumn]));
                }
                set {
                    this[this.tablePresupuestos.fImporteActualColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tablePresupuestos.dFUMColumn]));
                }
                set {
                    this[this.tablePresupuestos.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tablePresupuestos.iEstadoColumn]));
                }
                set {
                    this[this.tablePresupuestos.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PresupuestosRowChangeEvent : EventArgs {
            
            private PresupuestosRow eventRow;
            
            private DataRowAction eventAction;
            
            public PresupuestosRowChangeEvent(PresupuestosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PresupuestosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CodigosPostalesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsCodPostal;
            
            private DataColumn columndFUM;
            
            internal CodigosPostalesDataTable() : 
                    base("CodigosPostales") {
                this.InitClass();
            }
            
            internal CodigosPostalesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sCodPostalColumn {
                get {
                    return this.columnsCodPostal;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public CodigosPostalesRow this[int index] {
                get {
                    return ((CodigosPostalesRow)(this.Rows[index]));
                }
            }
            
            public event CodigosPostalesRowChangeEventHandler CodigosPostalesRowChanged;
            
            public event CodigosPostalesRowChangeEventHandler CodigosPostalesRowChanging;
            
            public event CodigosPostalesRowChangeEventHandler CodigosPostalesRowDeleted;
            
            public event CodigosPostalesRowChangeEventHandler CodigosPostalesRowDeleting;
            
            public void AddCodigosPostalesRow(CodigosPostalesRow row) {
                this.Rows.Add(row);
            }
            
            public CodigosPostalesRow AddCodigosPostalesRow(string sCodPostal, System.DateTime dFUM) {
                CodigosPostalesRow rowCodigosPostalesRow = ((CodigosPostalesRow)(this.NewRow()));
                rowCodigosPostalesRow.ItemArray = new object[] {
                        sCodPostal,
                        dFUM};
                this.Rows.Add(rowCodigosPostalesRow);
                return rowCodigosPostalesRow;
            }
            
            public CodigosPostalesRow FindBysCodPostal(string sCodPostal) {
                return ((CodigosPostalesRow)(this.Rows.Find(new object[] {
                            sCodPostal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CodigosPostalesDataTable cln = ((CodigosPostalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CodigosPostalesDataTable();
            }
            
            internal void InitVars() {
                this.columnsCodPostal = this.Columns["sCodPostal"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columnsCodPostal = new DataColumn("sCodPostal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCodPostal);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey36", new DataColumn[] {
                                this.columnsCodPostal}, true));
                this.columnsCodPostal.AllowDBNull = false;
                this.columnsCodPostal.Unique = true;
                this.columndFUM.AllowDBNull = false;
            }
            
            public CodigosPostalesRow NewCodigosPostalesRow() {
                return ((CodigosPostalesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CodigosPostalesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CodigosPostalesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CodigosPostalesRowChanged != null)) {
                    this.CodigosPostalesRowChanged(this, new CodigosPostalesRowChangeEvent(((CodigosPostalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CodigosPostalesRowChanging != null)) {
                    this.CodigosPostalesRowChanging(this, new CodigosPostalesRowChangeEvent(((CodigosPostalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CodigosPostalesRowDeleted != null)) {
                    this.CodigosPostalesRowDeleted(this, new CodigosPostalesRowChangeEvent(((CodigosPostalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CodigosPostalesRowDeleting != null)) {
                    this.CodigosPostalesRowDeleting(this, new CodigosPostalesRowChangeEvent(((CodigosPostalesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCodigosPostalesRow(CodigosPostalesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CodigosPostalesRow : DataRow {
            
            private CodigosPostalesDataTable tableCodigosPostales;
            
            internal CodigosPostalesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCodigosPostales = ((CodigosPostalesDataTable)(this.Table));
            }
            
            public string sCodPostal {
                get {
                    return ((string)(this[this.tableCodigosPostales.sCodPostalColumn]));
                }
                set {
                    this[this.tableCodigosPostales.sCodPostalColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableCodigosPostales.dFUMColumn]));
                }
                set {
                    this[this.tableCodigosPostales.dFUMColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CodigosPostalesRowChangeEvent : EventArgs {
            
            private CodigosPostalesRow eventRow;
            
            private DataRowAction eventAction;
            
            public CodigosPostalesRowChangeEvent(CodigosPostalesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CodigosPostalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickCodigoPostalDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdBrick;
            
            private DataColumn columnsCodPostal;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            internal BrickCodigoPostalDataTable() : 
                    base("BrickCodigoPostal") {
                this.InitClass();
            }
            
            internal BrickCodigoPostalDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdBrickColumn {
                get {
                    return this.columnsIdBrick;
                }
            }
            
            internal DataColumn sCodPostalColumn {
                get {
                    return this.columnsCodPostal;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public BrickCodigoPostalRow this[int index] {
                get {
                    return ((BrickCodigoPostalRow)(this.Rows[index]));
                }
            }
            
            public event BrickCodigoPostalRowChangeEventHandler BrickCodigoPostalRowChanged;
            
            public event BrickCodigoPostalRowChangeEventHandler BrickCodigoPostalRowChanging;
            
            public event BrickCodigoPostalRowChangeEventHandler BrickCodigoPostalRowDeleted;
            
            public event BrickCodigoPostalRowChangeEventHandler BrickCodigoPostalRowDeleting;
            
            public void AddBrickCodigoPostalRow(BrickCodigoPostalRow row) {
                this.Rows.Add(row);
            }
            
            public BrickCodigoPostalRow AddBrickCodigoPostalRow(string sIdBrick, string sCodPostal, System.DateTime dFAR, System.DateTime dFBR, short iEstado) {
                BrickCodigoPostalRow rowBrickCodigoPostalRow = ((BrickCodigoPostalRow)(this.NewRow()));
                rowBrickCodigoPostalRow.ItemArray = new object[] {
                        sIdBrick,
                        sCodPostal,
                        dFAR,
                        dFBR,
                        iEstado};
                this.Rows.Add(rowBrickCodigoPostalRow);
                return rowBrickCodigoPostalRow;
            }
            
            public BrickCodigoPostalRow FindBysIdBricksCodPostaldFAR(string sIdBrick, string sCodPostal, System.DateTime dFAR) {
                return ((BrickCodigoPostalRow)(this.Rows.Find(new object[] {
                            sIdBrick,
                            sCodPostal,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                BrickCodigoPostalDataTable cln = ((BrickCodigoPostalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new BrickCodigoPostalDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdBrick = this.Columns["sIdBrick"];
                this.columnsCodPostal = this.Columns["sCodPostal"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnsIdBrick = new DataColumn("sIdBrick", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdBrick);
                this.columnsCodPostal = new DataColumn("sCodPostal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCodPostal);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey37", new DataColumn[] {
                                this.columnsIdBrick,
                                this.columnsCodPostal,
                                this.columndFAR}, true));
                this.columnsIdBrick.AllowDBNull = false;
                this.columnsCodPostal.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public BrickCodigoPostalRow NewBrickCodigoPostalRow() {
                return ((BrickCodigoPostalRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new BrickCodigoPostalRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(BrickCodigoPostalRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BrickCodigoPostalRowChanged != null)) {
                    this.BrickCodigoPostalRowChanged(this, new BrickCodigoPostalRowChangeEvent(((BrickCodigoPostalRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BrickCodigoPostalRowChanging != null)) {
                    this.BrickCodigoPostalRowChanging(this, new BrickCodigoPostalRowChangeEvent(((BrickCodigoPostalRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BrickCodigoPostalRowDeleted != null)) {
                    this.BrickCodigoPostalRowDeleted(this, new BrickCodigoPostalRowChangeEvent(((BrickCodigoPostalRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BrickCodigoPostalRowDeleting != null)) {
                    this.BrickCodigoPostalRowDeleting(this, new BrickCodigoPostalRowChangeEvent(((BrickCodigoPostalRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveBrickCodigoPostalRow(BrickCodigoPostalRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickCodigoPostalRow : DataRow {
            
            private BrickCodigoPostalDataTable tableBrickCodigoPostal;
            
            internal BrickCodigoPostalRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableBrickCodigoPostal = ((BrickCodigoPostalDataTable)(this.Table));
            }
            
            public string sIdBrick {
                get {
                    return ((string)(this[this.tableBrickCodigoPostal.sIdBrickColumn]));
                }
                set {
                    this[this.tableBrickCodigoPostal.sIdBrickColumn] = value;
                }
            }
            
            public string sCodPostal {
                get {
                    return ((string)(this[this.tableBrickCodigoPostal.sCodPostalColumn]));
                }
                set {
                    this[this.tableBrickCodigoPostal.sCodPostalColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableBrickCodigoPostal.dFARColumn]));
                }
                set {
                    this[this.tableBrickCodigoPostal.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableBrickCodigoPostal.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableBrickCodigoPostal.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableBrickCodigoPostal.iEstadoColumn]));
                }
                set {
                    this[this.tableBrickCodigoPostal.iEstadoColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableBrickCodigoPostal.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableBrickCodigoPostal.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickCodigoPostalRowChangeEvent : EventArgs {
            
            private BrickCodigoPostalRow eventRow;
            
            private DataRowAction eventAction;
            
            public BrickCodigoPostalRowChangeEvent(BrickCodigoPostalRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public BrickCodigoPostalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgendaObservDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columndFecha;
            
            private DataColumn columntObservaciones;
            
            internal AgendaObservDataTable() : 
                    base("AgendaObserv") {
                this.InitClass();
            }
            
            internal AgendaObservDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            public AgendaObservRow this[int index] {
                get {
                    return ((AgendaObservRow)(this.Rows[index]));
                }
            }
            
            public event AgendaObservRowChangeEventHandler AgendaObservRowChanged;
            
            public event AgendaObservRowChangeEventHandler AgendaObservRowChanging;
            
            public event AgendaObservRowChangeEventHandler AgendaObservRowDeleted;
            
            public event AgendaObservRowChangeEventHandler AgendaObservRowDeleting;
            
            public void AddAgendaObservRow(AgendaObservRow row) {
                this.Rows.Add(row);
            }
            
            public AgendaObservRow AddAgendaObservRow(int iIdDelegado, System.DateTime dFecha, string tObservaciones) {
                AgendaObservRow rowAgendaObservRow = ((AgendaObservRow)(this.NewRow()));
                rowAgendaObservRow.ItemArray = new object[] {
                        iIdDelegado,
                        dFecha,
                        tObservaciones};
                this.Rows.Add(rowAgendaObservRow);
                return rowAgendaObservRow;
            }
            
            public AgendaObservRow FindByiIdDelegadodFecha(int iIdDelegado, System.DateTime dFecha) {
                return ((AgendaObservRow)(this.Rows.Find(new object[] {
                            iIdDelegado,
                            dFecha})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AgendaObservDataTable cln = ((AgendaObservDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AgendaObservDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columndFecha = this.Columns["dFecha"];
                this.columntObservaciones = this.Columns["tObservaciones"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey38", new DataColumn[] {
                                this.columniIdDelegado,
                                this.columndFecha}, true));
                this.columniIdDelegado.AllowDBNull = false;
                this.columndFecha.AllowDBNull = false;
            }
            
            public AgendaObservRow NewAgendaObservRow() {
                return ((AgendaObservRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AgendaObservRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AgendaObservRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgendaObservRowChanged != null)) {
                    this.AgendaObservRowChanged(this, new AgendaObservRowChangeEvent(((AgendaObservRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgendaObservRowChanging != null)) {
                    this.AgendaObservRowChanging(this, new AgendaObservRowChangeEvent(((AgendaObservRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgendaObservRowDeleted != null)) {
                    this.AgendaObservRowDeleted(this, new AgendaObservRowChangeEvent(((AgendaObservRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgendaObservRowDeleting != null)) {
                    this.AgendaObservRowDeleting(this, new AgendaObservRowChangeEvent(((AgendaObservRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAgendaObservRow(AgendaObservRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgendaObservRow : DataRow {
            
            private AgendaObservDataTable tableAgendaObserv;
            
            internal AgendaObservRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgendaObserv = ((AgendaObservDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableAgendaObserv.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableAgendaObserv.iIdDelegadoColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableAgendaObserv.dFechaColumn]));
                }
                set {
                    this[this.tableAgendaObserv.dFechaColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableAgendaObserv.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgendaObserv.tObservacionesColumn] = value;
                }
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableAgendaObserv.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableAgendaObserv.tObservacionesColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgendaObservRowChangeEvent : EventArgs {
            
            private AgendaObservRow eventRow;
            
            private DataRowAction eventAction;
            
            public AgendaObservRowChangeEvent(AgendaObservRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AgendaObservRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RedesComercialesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdRed;
            
            private DataColumn columnsNombre;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal RedesComercialesDataTable() : 
                    base("RedesComerciales") {
                this.InitClass();
            }
            
            internal RedesComercialesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn sNombreColumn {
                get {
                    return this.columnsNombre;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public RedesComercialesRow this[int index] {
                get {
                    return ((RedesComercialesRow)(this.Rows[index]));
                }
            }
            
            public event RedesComercialesRowChangeEventHandler RedesComercialesRowChanged;
            
            public event RedesComercialesRowChangeEventHandler RedesComercialesRowChanging;
            
            public event RedesComercialesRowChangeEventHandler RedesComercialesRowDeleted;
            
            public event RedesComercialesRowChangeEventHandler RedesComercialesRowDeleting;
            
            public void AddRedesComercialesRow(RedesComercialesRow row) {
                this.Rows.Add(row);
            }
            
            public RedesComercialesRow AddRedesComercialesRow(string sIdRed, string sNombre, System.DateTime dFUM, short iEstado) {
                RedesComercialesRow rowRedesComercialesRow = ((RedesComercialesRow)(this.NewRow()));
                rowRedesComercialesRow.ItemArray = new object[] {
                        sIdRed,
                        sNombre,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowRedesComercialesRow);
                return rowRedesComercialesRow;
            }
            
            public RedesComercialesRow FindBysIdRed(string sIdRed) {
                return ((RedesComercialesRow)(this.Rows.Find(new object[] {
                            sIdRed})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RedesComercialesDataTable cln = ((RedesComercialesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RedesComercialesDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columnsNombre = this.Columns["sNombre"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columnsNombre = new DataColumn("sNombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombre);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey39", new DataColumn[] {
                                this.columnsIdRed}, true));
                this.columnsIdRed.AllowDBNull = false;
                this.columnsIdRed.Unique = true;
                this.columnsNombre.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public RedesComercialesRow NewRedesComercialesRow() {
                return ((RedesComercialesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RedesComercialesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RedesComercialesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RedesComercialesRowChanged != null)) {
                    this.RedesComercialesRowChanged(this, new RedesComercialesRowChangeEvent(((RedesComercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RedesComercialesRowChanging != null)) {
                    this.RedesComercialesRowChanging(this, new RedesComercialesRowChangeEvent(((RedesComercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RedesComercialesRowDeleted != null)) {
                    this.RedesComercialesRowDeleted(this, new RedesComercialesRowChangeEvent(((RedesComercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RedesComercialesRowDeleting != null)) {
                    this.RedesComercialesRowDeleting(this, new RedesComercialesRowChangeEvent(((RedesComercialesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRedesComercialesRow(RedesComercialesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RedesComercialesRow : DataRow {
            
            private RedesComercialesDataTable tableRedesComerciales;
            
            internal RedesComercialesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRedesComerciales = ((RedesComercialesDataTable)(this.Table));
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableRedesComerciales.sIdRedColumn]));
                }
                set {
                    this[this.tableRedesComerciales.sIdRedColumn] = value;
                }
            }
            
            public string sNombre {
                get {
                    return ((string)(this[this.tableRedesComerciales.sNombreColumn]));
                }
                set {
                    this[this.tableRedesComerciales.sNombreColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableRedesComerciales.dFUMColumn]));
                }
                set {
                    this[this.tableRedesComerciales.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableRedesComerciales.iEstadoColumn]));
                }
                set {
                    this[this.tableRedesComerciales.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RedesComercialesRowChangeEvent : EventArgs {
            
            private RedesComercialesRow eventRow;
            
            private DataRowAction eventAction;
            
            public RedesComercialesRowChangeEvent(RedesComercialesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RedesComercialesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PoblacionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdPoblacion;
            
            private DataColumn columnsCodPostal;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columniIdProvincia;
            
            private DataColumn columndFUM;
            
            internal PoblacionesDataTable() : 
                    base("Poblaciones") {
                this.InitClass();
            }
            
            internal PoblacionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdPoblacionColumn {
                get {
                    return this.columniIdPoblacion;
                }
            }
            
            internal DataColumn sCodPostalColumn {
                get {
                    return this.columnsCodPostal;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn iIdProvinciaColumn {
                get {
                    return this.columniIdProvincia;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public PoblacionesRow this[int index] {
                get {
                    return ((PoblacionesRow)(this.Rows[index]));
                }
            }
            
            public event PoblacionesRowChangeEventHandler PoblacionesRowChanged;
            
            public event PoblacionesRowChangeEventHandler PoblacionesRowChanging;
            
            public event PoblacionesRowChangeEventHandler PoblacionesRowDeleted;
            
            public event PoblacionesRowChangeEventHandler PoblacionesRowDeleting;
            
            public void AddPoblacionesRow(PoblacionesRow row) {
                this.Rows.Add(row);
            }
            
            public PoblacionesRow AddPoblacionesRow(string sCodPostal, string sDescripcion, int iIdProvincia, System.DateTime dFUM) {
                PoblacionesRow rowPoblacionesRow = ((PoblacionesRow)(this.NewRow()));
                rowPoblacionesRow.ItemArray = new object[] {
                        null,
                        sCodPostal,
                        sDescripcion,
                        iIdProvincia,
                        dFUM};
                this.Rows.Add(rowPoblacionesRow);
                return rowPoblacionesRow;
            }
            
            public PoblacionesRow FindByiIdPoblacion(int iIdPoblacion) {
                return ((PoblacionesRow)(this.Rows.Find(new object[] {
                            iIdPoblacion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PoblacionesDataTable cln = ((PoblacionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PoblacionesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdPoblacion = this.Columns["iIdPoblacion"];
                this.columnsCodPostal = this.Columns["sCodPostal"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columniIdProvincia = this.Columns["iIdProvincia"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdPoblacion = new DataColumn("iIdPoblacion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdPoblacion);
                this.columnsCodPostal = new DataColumn("sCodPostal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCodPostal);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columniIdProvincia = new DataColumn("iIdProvincia", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdProvincia);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey40", new DataColumn[] {
                                this.columniIdPoblacion}, true));
                this.columniIdPoblacion.AutoIncrement = true;
                this.columniIdPoblacion.AllowDBNull = false;
                this.columniIdPoblacion.ReadOnly = true;
                this.columniIdPoblacion.Unique = true;
                this.columnsCodPostal.AllowDBNull = false;
                this.columnsDescripcion.AllowDBNull = false;
                this.columniIdProvincia.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public PoblacionesRow NewPoblacionesRow() {
                return ((PoblacionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PoblacionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PoblacionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PoblacionesRowChanged != null)) {
                    this.PoblacionesRowChanged(this, new PoblacionesRowChangeEvent(((PoblacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PoblacionesRowChanging != null)) {
                    this.PoblacionesRowChanging(this, new PoblacionesRowChangeEvent(((PoblacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PoblacionesRowDeleted != null)) {
                    this.PoblacionesRowDeleted(this, new PoblacionesRowChangeEvent(((PoblacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PoblacionesRowDeleting != null)) {
                    this.PoblacionesRowDeleting(this, new PoblacionesRowChangeEvent(((PoblacionesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePoblacionesRow(PoblacionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PoblacionesRow : DataRow {
            
            private PoblacionesDataTable tablePoblaciones;
            
            internal PoblacionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePoblaciones = ((PoblacionesDataTable)(this.Table));
            }
            
            public int iIdPoblacion {
                get {
                    return ((int)(this[this.tablePoblaciones.iIdPoblacionColumn]));
                }
                set {
                    this[this.tablePoblaciones.iIdPoblacionColumn] = value;
                }
            }
            
            public string sCodPostal {
                get {
                    return ((string)(this[this.tablePoblaciones.sCodPostalColumn]));
                }
                set {
                    this[this.tablePoblaciones.sCodPostalColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    return ((string)(this[this.tablePoblaciones.sDescripcionColumn]));
                }
                set {
                    this[this.tablePoblaciones.sDescripcionColumn] = value;
                }
            }
            
            public int iIdProvincia {
                get {
                    return ((int)(this[this.tablePoblaciones.iIdProvinciaColumn]));
                }
                set {
                    this[this.tablePoblaciones.iIdProvinciaColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tablePoblaciones.dFUMColumn]));
                }
                set {
                    this[this.tablePoblaciones.dFUMColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PoblacionesRowChangeEvent : EventArgs {
            
            private PoblacionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public PoblacionesRowChangeEvent(PoblacionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PoblacionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columnsIdMaterial;
            
            private DataColumn columnsOrgVentas;
            
            private DataColumn columnsCanalDistrib;
            
            private DataColumn columnsMaterial;
            
            private DataColumn columnsCodNacional;
            
            private DataColumn columnfPrecio;
            
            private DataColumn columnsMoneda;
            
            private DataColumn columniCantidadBase;
            
            private DataColumn columnsUnidadBase;
            
            private DataColumn columndFechaIni;
            
            private DataColumn columndFechaFin;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            private DataColumn columnsIdDivision;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columnfDescuentoMaximo;
            
            internal MaterialesDataTable() : 
                    base("Materiales") {
                this.InitClass();
            }
            
            internal MaterialesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn sIdMaterialColumn {
                get {
                    return this.columnsIdMaterial;
                }
            }
            
            internal DataColumn sOrgVentasColumn {
                get {
                    return this.columnsOrgVentas;
                }
            }
            
            internal DataColumn sCanalDistribColumn {
                get {
                    return this.columnsCanalDistrib;
                }
            }
            
            internal DataColumn sMaterialColumn {
                get {
                    return this.columnsMaterial;
                }
            }
            
            internal DataColumn sCodNacionalColumn {
                get {
                    return this.columnsCodNacional;
                }
            }
            
            internal DataColumn fPrecioColumn {
                get {
                    return this.columnfPrecio;
                }
            }
            
            internal DataColumn sMonedaColumn {
                get {
                    return this.columnsMoneda;
                }
            }
            
            internal DataColumn iCantidadBaseColumn {
                get {
                    return this.columniCantidadBase;
                }
            }
            
            internal DataColumn sUnidadBaseColumn {
                get {
                    return this.columnsUnidadBase;
                }
            }
            
            internal DataColumn dFechaIniColumn {
                get {
                    return this.columndFechaIni;
                }
            }
            
            internal DataColumn dFechaFinColumn {
                get {
                    return this.columndFechaFin;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn sIdDivisionColumn {
                get {
                    return this.columnsIdDivision;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn fDescuentoMaximoColumn {
                get {
                    return this.columnfDescuentoMaximo;
                }
            }
            
            public MaterialesRow this[int index] {
                get {
                    return ((MaterialesRow)(this.Rows[index]));
                }
            }
            
            public event MaterialesRowChangeEventHandler MaterialesRowChanged;
            
            public event MaterialesRowChangeEventHandler MaterialesRowChanging;
            
            public event MaterialesRowChangeEventHandler MaterialesRowDeleted;
            
            public event MaterialesRowChangeEventHandler MaterialesRowDeleting;
            
            public void AddMaterialesRow(MaterialesRow row) {
                this.Rows.Add(row);
            }
            
            public MaterialesRow AddMaterialesRow(
                        string sIdProducto, 
                        string sIdMaterial, 
                        string sOrgVentas, 
                        string sCanalDistrib, 
                        string sMaterial, 
                        string sCodNacional, 
                        System.Double fPrecio, 
                        string sMoneda, 
                        int iCantidadBase, 
                        string sUnidadBase, 
                        System.DateTime dFechaIni, 
                        System.DateTime dFechaFin, 
                        System.DateTime dFUM, 
                        short iEstado, 
                        string sIdDivision, 
                        string sIdRed, 
                        System.Double fDescuentoMaximo) {
                MaterialesRow rowMaterialesRow = ((MaterialesRow)(this.NewRow()));
                rowMaterialesRow.ItemArray = new object[] {
                        sIdProducto,
                        sIdMaterial,
                        sOrgVentas,
                        sCanalDistrib,
                        sMaterial,
                        sCodNacional,
                        fPrecio,
                        sMoneda,
                        iCantidadBase,
                        sUnidadBase,
                        dFechaIni,
                        dFechaFin,
                        dFUM,
                        iEstado,
                        sIdDivision,
                        sIdRed,
                        fDescuentoMaximo};
                this.Rows.Add(rowMaterialesRow);
                return rowMaterialesRow;
            }
            
            public MaterialesRow FindBysIdMaterial(string sIdMaterial) {
                return ((MaterialesRow)(this.Rows.Find(new object[] {
                            sIdMaterial})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MaterialesDataTable cln = ((MaterialesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MaterialesDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columnsIdMaterial = this.Columns["sIdMaterial"];
                this.columnsOrgVentas = this.Columns["sOrgVentas"];
                this.columnsCanalDistrib = this.Columns["sCanalDistrib"];
                this.columnsMaterial = this.Columns["sMaterial"];
                this.columnsCodNacional = this.Columns["sCodNacional"];
                this.columnfPrecio = this.Columns["fPrecio"];
                this.columnsMoneda = this.Columns["sMoneda"];
                this.columniCantidadBase = this.Columns["iCantidadBase"];
                this.columnsUnidadBase = this.Columns["sUnidadBase"];
                this.columndFechaIni = this.Columns["dFechaIni"];
                this.columndFechaFin = this.Columns["dFechaFin"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
                this.columnsIdDivision = this.Columns["sIdDivision"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columnfDescuentoMaximo = this.Columns["fDescuentoMaximo"];
            }
            
            private void InitClass() {
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columnsIdMaterial = new DataColumn("sIdMaterial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdMaterial);
                this.columnsOrgVentas = new DataColumn("sOrgVentas", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsOrgVentas);
                this.columnsCanalDistrib = new DataColumn("sCanalDistrib", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCanalDistrib);
                this.columnsMaterial = new DataColumn("sMaterial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsMaterial);
                this.columnsCodNacional = new DataColumn("sCodNacional", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCodNacional);
                this.columnfPrecio = new DataColumn("fPrecio", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPrecio);
                this.columnsMoneda = new DataColumn("sMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsMoneda);
                this.columniCantidadBase = new DataColumn("iCantidadBase", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidadBase);
                this.columnsUnidadBase = new DataColumn("sUnidadBase", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUnidadBase);
                this.columndFechaIni = new DataColumn("dFechaIni", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaIni);
                this.columndFechaFin = new DataColumn("dFechaFin", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaFin);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columnsIdDivision = new DataColumn("sIdDivision", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdDivision);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columnfDescuentoMaximo = new DataColumn("fDescuentoMaximo", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfDescuentoMaximo);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey41", new DataColumn[] {
                                this.columnsIdMaterial}, true));
                this.columnsIdProducto.AllowDBNull = false;
                this.columnsIdMaterial.AllowDBNull = false;
                this.columnsIdMaterial.Unique = true;
                this.columnsOrgVentas.AllowDBNull = false;
                this.columnsCanalDistrib.AllowDBNull = false;
                this.columniCantidadBase.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columnsIdDivision.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
            }
            
            public MaterialesRow NewMaterialesRow() {
                return ((MaterialesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MaterialesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MaterialesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialesRowChanged != null)) {
                    this.MaterialesRowChanged(this, new MaterialesRowChangeEvent(((MaterialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialesRowChanging != null)) {
                    this.MaterialesRowChanging(this, new MaterialesRowChangeEvent(((MaterialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialesRowDeleted != null)) {
                    this.MaterialesRowDeleted(this, new MaterialesRowChangeEvent(((MaterialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialesRowDeleting != null)) {
                    this.MaterialesRowDeleting(this, new MaterialesRowChangeEvent(((MaterialesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMaterialesRow(MaterialesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialesRow : DataRow {
            
            private MaterialesDataTable tableMateriales;
            
            internal MaterialesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMateriales = ((MaterialesDataTable)(this.Table));
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tableMateriales.sIdProductoColumn]));
                }
                set {
                    this[this.tableMateriales.sIdProductoColumn] = value;
                }
            }
            
            public string sIdMaterial {
                get {
                    return ((string)(this[this.tableMateriales.sIdMaterialColumn]));
                }
                set {
                    this[this.tableMateriales.sIdMaterialColumn] = value;
                }
            }
            
            public string sOrgVentas {
                get {
                    return ((string)(this[this.tableMateriales.sOrgVentasColumn]));
                }
                set {
                    this[this.tableMateriales.sOrgVentasColumn] = value;
                }
            }
            
            public string sCanalDistrib {
                get {
                    return ((string)(this[this.tableMateriales.sCanalDistribColumn]));
                }
                set {
                    this[this.tableMateriales.sCanalDistribColumn] = value;
                }
            }
            
            public string sMaterial {
                get {
                    try {
                        return ((string)(this[this.tableMateriales.sMaterialColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMateriales.sMaterialColumn] = value;
                }
            }
            
            public string sCodNacional {
                get {
                    try {
                        return ((string)(this[this.tableMateriales.sCodNacionalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMateriales.sCodNacionalColumn] = value;
                }
            }
            
            public System.Double fPrecio {
                get {
                    try {
                        return ((System.Double)(this[this.tableMateriales.fPrecioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMateriales.fPrecioColumn] = value;
                }
            }
            
            public string sMoneda {
                get {
                    try {
                        return ((string)(this[this.tableMateriales.sMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMateriales.sMonedaColumn] = value;
                }
            }
            
            public int iCantidadBase {
                get {
                    return ((int)(this[this.tableMateriales.iCantidadBaseColumn]));
                }
                set {
                    this[this.tableMateriales.iCantidadBaseColumn] = value;
                }
            }
            
            public string sUnidadBase {
                get {
                    try {
                        return ((string)(this[this.tableMateriales.sUnidadBaseColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMateriales.sUnidadBaseColumn] = value;
                }
            }
            
            public System.DateTime dFechaIni {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMateriales.dFechaIniColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMateriales.dFechaIniColumn] = value;
                }
            }
            
            public System.DateTime dFechaFin {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMateriales.dFechaFinColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMateriales.dFechaFinColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableMateriales.dFUMColumn]));
                }
                set {
                    this[this.tableMateriales.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableMateriales.iEstadoColumn]));
                }
                set {
                    this[this.tableMateriales.iEstadoColumn] = value;
                }
            }
            
            public string sIdDivision {
                get {
                    return ((string)(this[this.tableMateriales.sIdDivisionColumn]));
                }
                set {
                    this[this.tableMateriales.sIdDivisionColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableMateriales.sIdRedColumn]));
                }
                set {
                    this[this.tableMateriales.sIdRedColumn] = value;
                }
            }
            
            public System.Double fDescuentoMaximo {
                get {
                    try {
                        return ((System.Double)(this[this.tableMateriales.fDescuentoMaximoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMateriales.fDescuentoMaximoColumn] = value;
                }
            }
            
            public bool IssMaterialNull() {
                return this.IsNull(this.tableMateriales.sMaterialColumn);
            }
            
            public void SetsMaterialNull() {
                this[this.tableMateriales.sMaterialColumn] = System.Convert.DBNull;
            }
            
            public bool IssCodNacionalNull() {
                return this.IsNull(this.tableMateriales.sCodNacionalColumn);
            }
            
            public void SetsCodNacionalNull() {
                this[this.tableMateriales.sCodNacionalColumn] = System.Convert.DBNull;
            }
            
            public bool IsfPrecioNull() {
                return this.IsNull(this.tableMateriales.fPrecioColumn);
            }
            
            public void SetfPrecioNull() {
                this[this.tableMateriales.fPrecioColumn] = System.Convert.DBNull;
            }
            
            public bool IssMonedaNull() {
                return this.IsNull(this.tableMateriales.sMonedaColumn);
            }
            
            public void SetsMonedaNull() {
                this[this.tableMateriales.sMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IssUnidadBaseNull() {
                return this.IsNull(this.tableMateriales.sUnidadBaseColumn);
            }
            
            public void SetsUnidadBaseNull() {
                this[this.tableMateriales.sUnidadBaseColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaIniNull() {
                return this.IsNull(this.tableMateriales.dFechaIniColumn);
            }
            
            public void SetdFechaIniNull() {
                this[this.tableMateriales.dFechaIniColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaFinNull() {
                return this.IsNull(this.tableMateriales.dFechaFinColumn);
            }
            
            public void SetdFechaFinNull() {
                this[this.tableMateriales.dFechaFinColumn] = System.Convert.DBNull;
            }
            
            public bool IsfDescuentoMaximoNull() {
                return this.IsNull(this.tableMateriales.fDescuentoMaximoColumn);
            }
            
            public void SetfDescuentoMaximoNull() {
                this[this.tableMateriales.fDescuentoMaximoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialesRowChangeEvent : EventArgs {
            
            private MaterialesRow eventRow;
            
            private DataRowAction eventAction;
            
            public MaterialesRowChangeEvent(MaterialesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MaterialesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DivisionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdDivision;
            
            private DataColumn columnsNombre;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal DivisionesDataTable() : 
                    base("Divisiones") {
                this.InitClass();
            }
            
            internal DivisionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdDivisionColumn {
                get {
                    return this.columnsIdDivision;
                }
            }
            
            internal DataColumn sNombreColumn {
                get {
                    return this.columnsNombre;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public DivisionesRow this[int index] {
                get {
                    return ((DivisionesRow)(this.Rows[index]));
                }
            }
            
            public event DivisionesRowChangeEventHandler DivisionesRowChanged;
            
            public event DivisionesRowChangeEventHandler DivisionesRowChanging;
            
            public event DivisionesRowChangeEventHandler DivisionesRowDeleted;
            
            public event DivisionesRowChangeEventHandler DivisionesRowDeleting;
            
            public void AddDivisionesRow(DivisionesRow row) {
                this.Rows.Add(row);
            }
            
            public DivisionesRow AddDivisionesRow(string sIdDivision, string sNombre, System.DateTime dFUM, short iEstado) {
                DivisionesRow rowDivisionesRow = ((DivisionesRow)(this.NewRow()));
                rowDivisionesRow.ItemArray = new object[] {
                        sIdDivision,
                        sNombre,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowDivisionesRow);
                return rowDivisionesRow;
            }
            
            public DivisionesRow FindBysIdDivision(string sIdDivision) {
                return ((DivisionesRow)(this.Rows.Find(new object[] {
                            sIdDivision})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DivisionesDataTable cln = ((DivisionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DivisionesDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdDivision = this.Columns["sIdDivision"];
                this.columnsNombre = this.Columns["sNombre"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnsIdDivision = new DataColumn("sIdDivision", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdDivision);
                this.columnsNombre = new DataColumn("sNombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombre);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey42", new DataColumn[] {
                                this.columnsIdDivision}, true));
                this.columnsIdDivision.AllowDBNull = false;
                this.columnsIdDivision.Unique = true;
                this.columnsNombre.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public DivisionesRow NewDivisionesRow() {
                return ((DivisionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DivisionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DivisionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DivisionesRowChanged != null)) {
                    this.DivisionesRowChanged(this, new DivisionesRowChangeEvent(((DivisionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DivisionesRowChanging != null)) {
                    this.DivisionesRowChanging(this, new DivisionesRowChangeEvent(((DivisionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DivisionesRowDeleted != null)) {
                    this.DivisionesRowDeleted(this, new DivisionesRowChangeEvent(((DivisionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DivisionesRowDeleting != null)) {
                    this.DivisionesRowDeleting(this, new DivisionesRowChangeEvent(((DivisionesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDivisionesRow(DivisionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DivisionesRow : DataRow {
            
            private DivisionesDataTable tableDivisiones;
            
            internal DivisionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDivisiones = ((DivisionesDataTable)(this.Table));
            }
            
            public string sIdDivision {
                get {
                    return ((string)(this[this.tableDivisiones.sIdDivisionColumn]));
                }
                set {
                    this[this.tableDivisiones.sIdDivisionColumn] = value;
                }
            }
            
            public string sNombre {
                get {
                    return ((string)(this[this.tableDivisiones.sNombreColumn]));
                }
                set {
                    this[this.tableDivisiones.sNombreColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableDivisiones.dFUMColumn]));
                }
                set {
                    this[this.tableDivisiones.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableDivisiones.iEstadoColumn]));
                }
                set {
                    this[this.tableDivisiones.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DivisionesRowChangeEvent : EventArgs {
            
            private DivisionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public DivisionesRowChangeEvent(DivisionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DivisionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProductosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            private DataColumn columnsIdDivision;
            
            private DataColumn columnsIdRed;
            
            internal ProductosDataTable() : 
                    base("Productos") {
                this.InitClass();
            }
            
            internal ProductosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn sIdDivisionColumn {
                get {
                    return this.columnsIdDivision;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            public ProductosRow this[int index] {
                get {
                    return ((ProductosRow)(this.Rows[index]));
                }
            }
            
            public event ProductosRowChangeEventHandler ProductosRowChanged;
            
            public event ProductosRowChangeEventHandler ProductosRowChanging;
            
            public event ProductosRowChangeEventHandler ProductosRowDeleted;
            
            public event ProductosRowChangeEventHandler ProductosRowDeleting;
            
            public void AddProductosRow(ProductosRow row) {
                this.Rows.Add(row);
            }
            
            public ProductosRow AddProductosRow(string sIdProducto, string sDescripcion, System.DateTime dFUM, short iEstado, string sIdDivision, string sIdRed) {
                ProductosRow rowProductosRow = ((ProductosRow)(this.NewRow()));
                rowProductosRow.ItemArray = new object[] {
                        sIdProducto,
                        sDescripcion,
                        dFUM,
                        iEstado,
                        sIdDivision,
                        sIdRed};
                this.Rows.Add(rowProductosRow);
                return rowProductosRow;
            }
            
            public ProductosRow FindBysIdProducto(string sIdProducto) {
                return ((ProductosRow)(this.Rows.Find(new object[] {
                            sIdProducto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ProductosDataTable cln = ((ProductosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ProductosDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
                this.columnsIdDivision = this.Columns["sIdDivision"];
                this.columnsIdRed = this.Columns["sIdRed"];
            }
            
            private void InitClass() {
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columnsIdDivision = new DataColumn("sIdDivision", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdDivision);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey43", new DataColumn[] {
                                this.columnsIdProducto}, true));
                this.columnsIdProducto.AllowDBNull = false;
                this.columnsIdProducto.Unique = true;
                this.columnsDescripcion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public ProductosRow NewProductosRow() {
                return ((ProductosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ProductosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ProductosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductosRowChanged != null)) {
                    this.ProductosRowChanged(this, new ProductosRowChangeEvent(((ProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductosRowChanging != null)) {
                    this.ProductosRowChanging(this, new ProductosRowChangeEvent(((ProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductosRowDeleted != null)) {
                    this.ProductosRowDeleted(this, new ProductosRowChangeEvent(((ProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductosRowDeleting != null)) {
                    this.ProductosRowDeleting(this, new ProductosRowChangeEvent(((ProductosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveProductosRow(ProductosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProductosRow : DataRow {
            
            private ProductosDataTable tableProductos;
            
            internal ProductosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductos = ((ProductosDataTable)(this.Table));
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tableProductos.sIdProductoColumn]));
                }
                set {
                    this[this.tableProductos.sIdProductoColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    return ((string)(this[this.tableProductos.sDescripcionColumn]));
                }
                set {
                    this[this.tableProductos.sDescripcionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableProductos.dFUMColumn]));
                }
                set {
                    this[this.tableProductos.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableProductos.iEstadoColumn]));
                }
                set {
                    this[this.tableProductos.iEstadoColumn] = value;
                }
            }
            
            public string sIdDivision {
                get {
                    try {
                        return ((string)(this[this.tableProductos.sIdDivisionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductos.sIdDivisionColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    try {
                        return ((string)(this[this.tableProductos.sIdRedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductos.sIdRedColumn] = value;
                }
            }
            
            public bool IssIdDivisionNull() {
                return this.IsNull(this.tableProductos.sIdDivisionColumn);
            }
            
            public void SetsIdDivisionNull() {
                this[this.tableProductos.sIdDivisionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdRedNull() {
                return this.IsNull(this.tableProductos.sIdRedColumn);
            }
            
            public void SetsIdRedNull() {
                this[this.tableProductos.sIdRedColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProductosRowChangeEvent : EventArgs {
            
            private ProductosRow eventRow;
            
            private DataRowAction eventAction;
            
            public ProductosRowChangeEvent(ProductosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ProductosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarketingDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdAccion;
            
            private DataColumn columnsIdAccion;
            
            private DataColumn columnsDescAccion;
            
            private DataColumn columnsIdTipoAccion;
            
            private DataColumn columndFechaCreacion;
            
            private DataColumn columndFechaIni;
            
            private DataColumn columndFechaFin;
            
            private DataColumn columniUnidades;
            
            private DataColumn columnfCosteUnitario;
            
            private DataColumn columnfCosteTotal;
            
            private DataColumn columnsObservaciones;
            
            private DataColumn columnsIdTipoImputacion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            private DataColumn columniNumElemEntregar;
            
            internal AccionesMarketingDataTable() : 
                    base("AccionesMarketing") {
                this.InitClass();
            }
            
            internal AccionesMarketingDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdAccionColumn {
                get {
                    return this.columniIdAccion;
                }
            }
            
            internal DataColumn sIdAccionColumn {
                get {
                    return this.columnsIdAccion;
                }
            }
            
            internal DataColumn sDescAccionColumn {
                get {
                    return this.columnsDescAccion;
                }
            }
            
            internal DataColumn sIdTipoAccionColumn {
                get {
                    return this.columnsIdTipoAccion;
                }
            }
            
            internal DataColumn dFechaCreacionColumn {
                get {
                    return this.columndFechaCreacion;
                }
            }
            
            internal DataColumn dFechaIniColumn {
                get {
                    return this.columndFechaIni;
                }
            }
            
            internal DataColumn dFechaFinColumn {
                get {
                    return this.columndFechaFin;
                }
            }
            
            internal DataColumn iUnidadesColumn {
                get {
                    return this.columniUnidades;
                }
            }
            
            internal DataColumn fCosteUnitarioColumn {
                get {
                    return this.columnfCosteUnitario;
                }
            }
            
            internal DataColumn fCosteTotalColumn {
                get {
                    return this.columnfCosteTotal;
                }
            }
            
            internal DataColumn sObservacionesColumn {
                get {
                    return this.columnsObservaciones;
                }
            }
            
            internal DataColumn sIdTipoImputacionColumn {
                get {
                    return this.columnsIdTipoImputacion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn iNumElemEntregarColumn {
                get {
                    return this.columniNumElemEntregar;
                }
            }
            
            public AccionesMarketingRow this[int index] {
                get {
                    return ((AccionesMarketingRow)(this.Rows[index]));
                }
            }
            
            public event AccionesMarketingRowChangeEventHandler AccionesMarketingRowChanged;
            
            public event AccionesMarketingRowChangeEventHandler AccionesMarketingRowChanging;
            
            public event AccionesMarketingRowChangeEventHandler AccionesMarketingRowDeleted;
            
            public event AccionesMarketingRowChangeEventHandler AccionesMarketingRowDeleting;
            
            public void AddAccionesMarketingRow(AccionesMarketingRow row) {
                this.Rows.Add(row);
            }
            
            public AccionesMarketingRow AddAccionesMarketingRow(string sIdAccion, string sDescAccion, string sIdTipoAccion, System.DateTime dFechaCreacion, System.DateTime dFechaIni, System.DateTime dFechaFin, int iUnidades, System.Double fCosteUnitario, System.Double fCosteTotal, string sObservaciones, string sIdTipoImputacion, System.DateTime dFUM, short iEstado, int iNumElemEntregar) {
                AccionesMarketingRow rowAccionesMarketingRow = ((AccionesMarketingRow)(this.NewRow()));
                rowAccionesMarketingRow.ItemArray = new object[] {
                        null,
                        sIdAccion,
                        sDescAccion,
                        sIdTipoAccion,
                        dFechaCreacion,
                        dFechaIni,
                        dFechaFin,
                        iUnidades,
                        fCosteUnitario,
                        fCosteTotal,
                        sObservaciones,
                        sIdTipoImputacion,
                        dFUM,
                        iEstado,
                        iNumElemEntregar};
                this.Rows.Add(rowAccionesMarketingRow);
                return rowAccionesMarketingRow;
            }
            
            public AccionesMarketingRow FindByiIdAccion(int iIdAccion) {
                return ((AccionesMarketingRow)(this.Rows.Find(new object[] {
                            iIdAccion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AccionesMarketingDataTable cln = ((AccionesMarketingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AccionesMarketingDataTable();
            }
            
            internal void InitVars() {
                this.columniIdAccion = this.Columns["iIdAccion"];
                this.columnsIdAccion = this.Columns["sIdAccion"];
                this.columnsDescAccion = this.Columns["sDescAccion"];
                this.columnsIdTipoAccion = this.Columns["sIdTipoAccion"];
                this.columndFechaCreacion = this.Columns["dFechaCreacion"];
                this.columndFechaIni = this.Columns["dFechaIni"];
                this.columndFechaFin = this.Columns["dFechaFin"];
                this.columniUnidades = this.Columns["iUnidades"];
                this.columnfCosteUnitario = this.Columns["fCosteUnitario"];
                this.columnfCosteTotal = this.Columns["fCosteTotal"];
                this.columnsObservaciones = this.Columns["sObservaciones"];
                this.columnsIdTipoImputacion = this.Columns["sIdTipoImputacion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
                this.columniNumElemEntregar = this.Columns["iNumElemEntregar"];
            }
            
            private void InitClass() {
                this.columniIdAccion = new DataColumn("iIdAccion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAccion);
                this.columnsIdAccion = new DataColumn("sIdAccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAccion);
                this.columnsDescAccion = new DataColumn("sDescAccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescAccion);
                this.columnsIdTipoAccion = new DataColumn("sIdTipoAccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoAccion);
                this.columndFechaCreacion = new DataColumn("dFechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaCreacion);
                this.columndFechaIni = new DataColumn("dFechaIni", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaIni);
                this.columndFechaFin = new DataColumn("dFechaFin", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaFin);
                this.columniUnidades = new DataColumn("iUnidades", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniUnidades);
                this.columnfCosteUnitario = new DataColumn("fCosteUnitario", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfCosteUnitario);
                this.columnfCosteTotal = new DataColumn("fCosteTotal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfCosteTotal);
                this.columnsObservaciones = new DataColumn("sObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsObservaciones);
                this.columnsIdTipoImputacion = new DataColumn("sIdTipoImputacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoImputacion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columniNumElemEntregar = new DataColumn("iNumElemEntregar", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniNumElemEntregar);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey44", new DataColumn[] {
                                this.columniIdAccion}, true));
                this.columniIdAccion.AutoIncrement = true;
                this.columniIdAccion.AllowDBNull = false;
                this.columniIdAccion.ReadOnly = true;
                this.columniIdAccion.Unique = true;
                this.columnsIdAccion.AllowDBNull = false;
                this.columnsIdTipoAccion.AllowDBNull = false;
                this.columndFechaCreacion.AllowDBNull = false;
                this.columndFechaIni.AllowDBNull = false;
                this.columndFechaFin.AllowDBNull = false;
                this.columniUnidades.AllowDBNull = false;
                this.columnfCosteUnitario.AllowDBNull = false;
                this.columnfCosteTotal.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public AccionesMarketingRow NewAccionesMarketingRow() {
                return ((AccionesMarketingRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AccionesMarketingRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AccionesMarketingRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccionesMarketingRowChanged != null)) {
                    this.AccionesMarketingRowChanged(this, new AccionesMarketingRowChangeEvent(((AccionesMarketingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccionesMarketingRowChanging != null)) {
                    this.AccionesMarketingRowChanging(this, new AccionesMarketingRowChangeEvent(((AccionesMarketingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccionesMarketingRowDeleted != null)) {
                    this.AccionesMarketingRowDeleted(this, new AccionesMarketingRowChangeEvent(((AccionesMarketingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccionesMarketingRowDeleting != null)) {
                    this.AccionesMarketingRowDeleting(this, new AccionesMarketingRowChangeEvent(((AccionesMarketingRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAccionesMarketingRow(AccionesMarketingRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarketingRow : DataRow {
            
            private AccionesMarketingDataTable tableAccionesMarketing;
            
            internal AccionesMarketingRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccionesMarketing = ((AccionesMarketingDataTable)(this.Table));
            }
            
            public int iIdAccion {
                get {
                    return ((int)(this[this.tableAccionesMarketing.iIdAccionColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.iIdAccionColumn] = value;
                }
            }
            
            public string sIdAccion {
                get {
                    return ((string)(this[this.tableAccionesMarketing.sIdAccionColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.sIdAccionColumn] = value;
                }
            }
            
            public string sDescAccion {
                get {
                    try {
                        return ((string)(this[this.tableAccionesMarketing.sDescAccionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarketing.sDescAccionColumn] = value;
                }
            }
            
            public string sIdTipoAccion {
                get {
                    return ((string)(this[this.tableAccionesMarketing.sIdTipoAccionColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.sIdTipoAccionColumn] = value;
                }
            }
            
            public System.DateTime dFechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tableAccionesMarketing.dFechaCreacionColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.dFechaCreacionColumn] = value;
                }
            }
            
            public System.DateTime dFechaIni {
                get {
                    return ((System.DateTime)(this[this.tableAccionesMarketing.dFechaIniColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.dFechaIniColumn] = value;
                }
            }
            
            public System.DateTime dFechaFin {
                get {
                    return ((System.DateTime)(this[this.tableAccionesMarketing.dFechaFinColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.dFechaFinColumn] = value;
                }
            }
            
            public int iUnidades {
                get {
                    return ((int)(this[this.tableAccionesMarketing.iUnidadesColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.iUnidadesColumn] = value;
                }
            }
            
            public System.Double fCosteUnitario {
                get {
                    return ((System.Double)(this[this.tableAccionesMarketing.fCosteUnitarioColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.fCosteUnitarioColumn] = value;
                }
            }
            
            public System.Double fCosteTotal {
                get {
                    return ((System.Double)(this[this.tableAccionesMarketing.fCosteTotalColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.fCosteTotalColumn] = value;
                }
            }
            
            public string sObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableAccionesMarketing.sObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarketing.sObservacionesColumn] = value;
                }
            }
            
            public string sIdTipoImputacion {
                get {
                    try {
                        return ((string)(this[this.tableAccionesMarketing.sIdTipoImputacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarketing.sIdTipoImputacionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableAccionesMarketing.dFUMColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableAccionesMarketing.iEstadoColumn]));
                }
                set {
                    this[this.tableAccionesMarketing.iEstadoColumn] = value;
                }
            }
            
            public int iNumElemEntregar {
                get {
                    try {
                        return ((int)(this[this.tableAccionesMarketing.iNumElemEntregarColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarketing.iNumElemEntregarColumn] = value;
                }
            }
            
            public bool IssDescAccionNull() {
                return this.IsNull(this.tableAccionesMarketing.sDescAccionColumn);
            }
            
            public void SetsDescAccionNull() {
                this[this.tableAccionesMarketing.sDescAccionColumn] = System.Convert.DBNull;
            }
            
            public bool IssObservacionesNull() {
                return this.IsNull(this.tableAccionesMarketing.sObservacionesColumn);
            }
            
            public void SetsObservacionesNull() {
                this[this.tableAccionesMarketing.sObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoImputacionNull() {
                return this.IsNull(this.tableAccionesMarketing.sIdTipoImputacionColumn);
            }
            
            public void SetsIdTipoImputacionNull() {
                this[this.tableAccionesMarketing.sIdTipoImputacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsiNumElemEntregarNull() {
                return this.IsNull(this.tableAccionesMarketing.iNumElemEntregarColumn);
            }
            
            public void SetiNumElemEntregarNull() {
                this[this.tableAccionesMarketing.iNumElemEntregarColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarketingRowChangeEvent : EventArgs {
            
            private AccionesMarketingRow eventRow;
            
            private DataRowAction eventAction;
            
            public AccionesMarketingRowChangeEvent(AccionesMarketingRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AccionesMarketingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesRedesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdRed;
            
            private DataColumn columniIdAccion;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            internal AccionesRedesDataTable() : 
                    base("AccionesRedes") {
                this.InitClass();
            }
            
            internal AccionesRedesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn iIdAccionColumn {
                get {
                    return this.columniIdAccion;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public AccionesRedesRow this[int index] {
                get {
                    return ((AccionesRedesRow)(this.Rows[index]));
                }
            }
            
            public event AccionesRedesRowChangeEventHandler AccionesRedesRowChanged;
            
            public event AccionesRedesRowChangeEventHandler AccionesRedesRowChanging;
            
            public event AccionesRedesRowChangeEventHandler AccionesRedesRowDeleted;
            
            public event AccionesRedesRowChangeEventHandler AccionesRedesRowDeleting;
            
            public void AddAccionesRedesRow(AccionesRedesRow row) {
                this.Rows.Add(row);
            }
            
            public AccionesRedesRow AddAccionesRedesRow(string sIdRed, int iIdAccion, System.DateTime dFAR, System.DateTime dFBR, short iEstado) {
                AccionesRedesRow rowAccionesRedesRow = ((AccionesRedesRow)(this.NewRow()));
                rowAccionesRedesRow.ItemArray = new object[] {
                        sIdRed,
                        iIdAccion,
                        dFAR,
                        dFBR,
                        iEstado};
                this.Rows.Add(rowAccionesRedesRow);
                return rowAccionesRedesRow;
            }
            
            public AccionesRedesRow FindBysIdRediIdAccion(string sIdRed, int iIdAccion) {
                return ((AccionesRedesRow)(this.Rows.Find(new object[] {
                            sIdRed,
                            iIdAccion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AccionesRedesDataTable cln = ((AccionesRedesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AccionesRedesDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columniIdAccion = this.Columns["iIdAccion"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columniIdAccion = new DataColumn("iIdAccion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAccion);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey45", new DataColumn[] {
                                this.columnsIdRed,
                                this.columniIdAccion}, true));
                this.columnsIdRed.AllowDBNull = false;
                this.columniIdAccion.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public AccionesRedesRow NewAccionesRedesRow() {
                return ((AccionesRedesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AccionesRedesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AccionesRedesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccionesRedesRowChanged != null)) {
                    this.AccionesRedesRowChanged(this, new AccionesRedesRowChangeEvent(((AccionesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccionesRedesRowChanging != null)) {
                    this.AccionesRedesRowChanging(this, new AccionesRedesRowChangeEvent(((AccionesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccionesRedesRowDeleted != null)) {
                    this.AccionesRedesRowDeleted(this, new AccionesRedesRowChangeEvent(((AccionesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccionesRedesRowDeleting != null)) {
                    this.AccionesRedesRowDeleting(this, new AccionesRedesRowChangeEvent(((AccionesRedesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAccionesRedesRow(AccionesRedesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesRedesRow : DataRow {
            
            private AccionesRedesDataTable tableAccionesRedes;
            
            internal AccionesRedesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccionesRedes = ((AccionesRedesDataTable)(this.Table));
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableAccionesRedes.sIdRedColumn]));
                }
                set {
                    this[this.tableAccionesRedes.sIdRedColumn] = value;
                }
            }
            
            public int iIdAccion {
                get {
                    return ((int)(this[this.tableAccionesRedes.iIdAccionColumn]));
                }
                set {
                    this[this.tableAccionesRedes.iIdAccionColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableAccionesRedes.dFARColumn]));
                }
                set {
                    this[this.tableAccionesRedes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAccionesRedes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesRedes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableAccionesRedes.iEstadoColumn]));
                }
                set {
                    this[this.tableAccionesRedes.iEstadoColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableAccionesRedes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableAccionesRedes.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesRedesRowChangeEvent : EventArgs {
            
            private AccionesRedesRow eventRow;
            
            private DataRowAction eventAction;
            
            public AccionesRedesRowChangeEvent(AccionesRedesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AccionesRedesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TiposPosPedidosSAPDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdTipoPedido;
            
            private DataColumn columnsIdTipoPosicion;
            
            private DataColumn columnbEntregado;
            
            private DataColumn columnbGratis;
            
            private DataColumn columnbEntregadoOpt;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal TiposPosPedidosSAPDataTable() : 
                    base("TiposPosPedidosSAP") {
                this.InitClass();
            }
            
            internal TiposPosPedidosSAPDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdTipoPedidoColumn {
                get {
                    return this.columnsIdTipoPedido;
                }
            }
            
            internal DataColumn sIdTipoPosicionColumn {
                get {
                    return this.columnsIdTipoPosicion;
                }
            }
            
            internal DataColumn bEntregadoColumn {
                get {
                    return this.columnbEntregado;
                }
            }
            
            internal DataColumn bGratisColumn {
                get {
                    return this.columnbGratis;
                }
            }
            
            internal DataColumn bEntregadoOptColumn {
                get {
                    return this.columnbEntregadoOpt;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public TiposPosPedidosSAPRow this[int index] {
                get {
                    return ((TiposPosPedidosSAPRow)(this.Rows[index]));
                }
            }
            
            public event TiposPosPedidosSAPRowChangeEventHandler TiposPosPedidosSAPRowChanged;
            
            public event TiposPosPedidosSAPRowChangeEventHandler TiposPosPedidosSAPRowChanging;
            
            public event TiposPosPedidosSAPRowChangeEventHandler TiposPosPedidosSAPRowDeleted;
            
            public event TiposPosPedidosSAPRowChangeEventHandler TiposPosPedidosSAPRowDeleting;
            
            public void AddTiposPosPedidosSAPRow(TiposPosPedidosSAPRow row) {
                this.Rows.Add(row);
            }
            
            public TiposPosPedidosSAPRow AddTiposPosPedidosSAPRow(string sIdTipoPedido, string sIdTipoPosicion, bool bEntregado, bool bGratis, bool bEntregadoOpt, System.DateTime dFUM, bool iEstado) {
                TiposPosPedidosSAPRow rowTiposPosPedidosSAPRow = ((TiposPosPedidosSAPRow)(this.NewRow()));
                rowTiposPosPedidosSAPRow.ItemArray = new object[] {
                        sIdTipoPedido,
                        sIdTipoPosicion,
                        bEntregado,
                        bGratis,
                        bEntregadoOpt,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowTiposPosPedidosSAPRow);
                return rowTiposPosPedidosSAPRow;
            }
            
            public TiposPosPedidosSAPRow FindBysIdTipoPedidosIdTipoPosicion(string sIdTipoPedido, string sIdTipoPosicion) {
                return ((TiposPosPedidosSAPRow)(this.Rows.Find(new object[] {
                            sIdTipoPedido,
                            sIdTipoPosicion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TiposPosPedidosSAPDataTable cln = ((TiposPosPedidosSAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TiposPosPedidosSAPDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdTipoPedido = this.Columns["sIdTipoPedido"];
                this.columnsIdTipoPosicion = this.Columns["sIdTipoPosicion"];
                this.columnbEntregado = this.Columns["bEntregado"];
                this.columnbGratis = this.Columns["bGratis"];
                this.columnbEntregadoOpt = this.Columns["bEntregadoOpt"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnsIdTipoPedido = new DataColumn("sIdTipoPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoPedido);
                this.columnsIdTipoPosicion = new DataColumn("sIdTipoPosicion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoPosicion);
                this.columnbEntregado = new DataColumn("bEntregado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEntregado);
                this.columnbGratis = new DataColumn("bGratis", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbGratis);
                this.columnbEntregadoOpt = new DataColumn("bEntregadoOpt", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEntregadoOpt);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey46", new DataColumn[] {
                                this.columnsIdTipoPedido,
                                this.columnsIdTipoPosicion}, true));
                this.columnsIdTipoPedido.AllowDBNull = false;
                this.columnsIdTipoPosicion.AllowDBNull = false;
                this.columnbEntregado.AllowDBNull = false;
                this.columnbGratis.AllowDBNull = false;
                this.columnbEntregadoOpt.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public TiposPosPedidosSAPRow NewTiposPosPedidosSAPRow() {
                return ((TiposPosPedidosSAPRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TiposPosPedidosSAPRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TiposPosPedidosSAPRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TiposPosPedidosSAPRowChanged != null)) {
                    this.TiposPosPedidosSAPRowChanged(this, new TiposPosPedidosSAPRowChangeEvent(((TiposPosPedidosSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TiposPosPedidosSAPRowChanging != null)) {
                    this.TiposPosPedidosSAPRowChanging(this, new TiposPosPedidosSAPRowChangeEvent(((TiposPosPedidosSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TiposPosPedidosSAPRowDeleted != null)) {
                    this.TiposPosPedidosSAPRowDeleted(this, new TiposPosPedidosSAPRowChangeEvent(((TiposPosPedidosSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TiposPosPedidosSAPRowDeleting != null)) {
                    this.TiposPosPedidosSAPRowDeleting(this, new TiposPosPedidosSAPRowChangeEvent(((TiposPosPedidosSAPRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTiposPosPedidosSAPRow(TiposPosPedidosSAPRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TiposPosPedidosSAPRow : DataRow {
            
            private TiposPosPedidosSAPDataTable tableTiposPosPedidosSAP;
            
            internal TiposPosPedidosSAPRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTiposPosPedidosSAP = ((TiposPosPedidosSAPDataTable)(this.Table));
            }
            
            public string sIdTipoPedido {
                get {
                    return ((string)(this[this.tableTiposPosPedidosSAP.sIdTipoPedidoColumn]));
                }
                set {
                    this[this.tableTiposPosPedidosSAP.sIdTipoPedidoColumn] = value;
                }
            }
            
            public string sIdTipoPosicion {
                get {
                    return ((string)(this[this.tableTiposPosPedidosSAP.sIdTipoPosicionColumn]));
                }
                set {
                    this[this.tableTiposPosPedidosSAP.sIdTipoPosicionColumn] = value;
                }
            }
            
            public bool bEntregado {
                get {
                    return ((bool)(this[this.tableTiposPosPedidosSAP.bEntregadoColumn]));
                }
                set {
                    this[this.tableTiposPosPedidosSAP.bEntregadoColumn] = value;
                }
            }
            
            public bool bGratis {
                get {
                    return ((bool)(this[this.tableTiposPosPedidosSAP.bGratisColumn]));
                }
                set {
                    this[this.tableTiposPosPedidosSAP.bGratisColumn] = value;
                }
            }
            
            public bool bEntregadoOpt {
                get {
                    return ((bool)(this[this.tableTiposPosPedidosSAP.bEntregadoOptColumn]));
                }
                set {
                    this[this.tableTiposPosPedidosSAP.bEntregadoOptColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableTiposPosPedidosSAP.dFUMColumn]));
                }
                set {
                    this[this.tableTiposPosPedidosSAP.dFUMColumn] = value;
                }
            }
            
            public bool iEstado {
                get {
                    return ((bool)(this[this.tableTiposPosPedidosSAP.iEstadoColumn]));
                }
                set {
                    this[this.tableTiposPosPedidosSAP.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TiposPosPedidosSAPRowChangeEvent : EventArgs {
            
            private TiposPosPedidosSAPRow eventRow;
            
            private DataRowAction eventAction;
            
            public TiposPosPedidosSAPRowChangeEvent(TiposPosPedidosSAPRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TiposPosPedidosSAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TiposDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdTipo;
            
            private DataColumn columnsTipo;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal TiposDataTable() : 
                    base("Tipos") {
                this.InitClass();
            }
            
            internal TiposDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdTipoColumn {
                get {
                    return this.columniIdTipo;
                }
            }
            
            internal DataColumn sTipoColumn {
                get {
                    return this.columnsTipo;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public TiposRow this[int index] {
                get {
                    return ((TiposRow)(this.Rows[index]));
                }
            }
            
            public event TiposRowChangeEventHandler TiposRowChanged;
            
            public event TiposRowChangeEventHandler TiposRowChanging;
            
            public event TiposRowChangeEventHandler TiposRowDeleted;
            
            public event TiposRowChangeEventHandler TiposRowDeleting;
            
            public void AddTiposRow(TiposRow row) {
                this.Rows.Add(row);
            }
            
            public TiposRow AddTiposRow(int iIdTipo, string sTipo, System.DateTime dFUM, short iEstado) {
                TiposRow rowTiposRow = ((TiposRow)(this.NewRow()));
                rowTiposRow.ItemArray = new object[] {
                        iIdTipo,
                        sTipo,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowTiposRow);
                return rowTiposRow;
            }
            
            public TiposRow FindByiIdTipo(int iIdTipo) {
                return ((TiposRow)(this.Rows.Find(new object[] {
                            iIdTipo})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TiposDataTable cln = ((TiposDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TiposDataTable();
            }
            
            internal void InitVars() {
                this.columniIdTipo = this.Columns["iIdTipo"];
                this.columnsTipo = this.Columns["sTipo"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdTipo = new DataColumn("iIdTipo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdTipo);
                this.columnsTipo = new DataColumn("sTipo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipo);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey47", new DataColumn[] {
                                this.columniIdTipo}, true));
                this.columniIdTipo.AllowDBNull = false;
                this.columniIdTipo.Unique = true;
                this.columnsTipo.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public TiposRow NewTiposRow() {
                return ((TiposRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TiposRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TiposRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TiposRowChanged != null)) {
                    this.TiposRowChanged(this, new TiposRowChangeEvent(((TiposRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TiposRowChanging != null)) {
                    this.TiposRowChanging(this, new TiposRowChangeEvent(((TiposRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TiposRowDeleted != null)) {
                    this.TiposRowDeleted(this, new TiposRowChangeEvent(((TiposRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TiposRowDeleting != null)) {
                    this.TiposRowDeleting(this, new TiposRowChangeEvent(((TiposRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTiposRow(TiposRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TiposRow : DataRow {
            
            private TiposDataTable tableTipos;
            
            internal TiposRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTipos = ((TiposDataTable)(this.Table));
            }
            
            public int iIdTipo {
                get {
                    return ((int)(this[this.tableTipos.iIdTipoColumn]));
                }
                set {
                    this[this.tableTipos.iIdTipoColumn] = value;
                }
            }
            
            public string sTipo {
                get {
                    return ((string)(this[this.tableTipos.sTipoColumn]));
                }
                set {
                    this[this.tableTipos.sTipoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableTipos.dFUMColumn]));
                }
                set {
                    this[this.tableTipos.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableTipos.iEstadoColumn]));
                }
                set {
                    this[this.tableTipos.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TiposRowChangeEvent : EventArgs {
            
            private TiposRow eventRow;
            
            private DataRowAction eventAction;
            
            public TiposRowChangeEvent(TiposRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TiposRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class LineasTiposDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdTipo;
            
            private DataColumn columniOrden;
            
            private DataColumn columnsValor;
            
            private DataColumn columnsLiteral;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal LineasTiposDataTable() : 
                    base("LineasTipos") {
                this.InitClass();
            }
            
            internal LineasTiposDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdTipoColumn {
                get {
                    return this.columniIdTipo;
                }
            }
            
            internal DataColumn iOrdenColumn {
                get {
                    return this.columniOrden;
                }
            }
            
            internal DataColumn sValorColumn {
                get {
                    return this.columnsValor;
                }
            }
            
            internal DataColumn sLiteralColumn {
                get {
                    return this.columnsLiteral;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public LineasTiposRow this[int index] {
                get {
                    return ((LineasTiposRow)(this.Rows[index]));
                }
            }
            
            public event LineasTiposRowChangeEventHandler LineasTiposRowChanged;
            
            public event LineasTiposRowChangeEventHandler LineasTiposRowChanging;
            
            public event LineasTiposRowChangeEventHandler LineasTiposRowDeleted;
            
            public event LineasTiposRowChangeEventHandler LineasTiposRowDeleting;
            
            public void AddLineasTiposRow(LineasTiposRow row) {
                this.Rows.Add(row);
            }
            
            public LineasTiposRow AddLineasTiposRow(int iIdTipo, int iOrden, string sValor, string sLiteral, System.DateTime dFUM, short iEstado) {
                LineasTiposRow rowLineasTiposRow = ((LineasTiposRow)(this.NewRow()));
                rowLineasTiposRow.ItemArray = new object[] {
                        iIdTipo,
                        iOrden,
                        sValor,
                        sLiteral,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowLineasTiposRow);
                return rowLineasTiposRow;
            }
            
            public LineasTiposRow FindByiIdTipoiOrden(int iIdTipo, int iOrden) {
                return ((LineasTiposRow)(this.Rows.Find(new object[] {
                            iIdTipo,
                            iOrden})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                LineasTiposDataTable cln = ((LineasTiposDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new LineasTiposDataTable();
            }
            
            internal void InitVars() {
                this.columniIdTipo = this.Columns["iIdTipo"];
                this.columniOrden = this.Columns["iOrden"];
                this.columnsValor = this.Columns["sValor"];
                this.columnsLiteral = this.Columns["sLiteral"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdTipo = new DataColumn("iIdTipo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdTipo);
                this.columniOrden = new DataColumn("iOrden", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniOrden);
                this.columnsValor = new DataColumn("sValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsValor);
                this.columnsLiteral = new DataColumn("sLiteral", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsLiteral);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey48", new DataColumn[] {
                                this.columniIdTipo,
                                this.columniOrden}, true));
                this.columniIdTipo.AllowDBNull = false;
                this.columniOrden.AllowDBNull = false;
                this.columnsValor.AllowDBNull = false;
                this.columnsLiteral.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public LineasTiposRow NewLineasTiposRow() {
                return ((LineasTiposRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new LineasTiposRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(LineasTiposRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LineasTiposRowChanged != null)) {
                    this.LineasTiposRowChanged(this, new LineasTiposRowChangeEvent(((LineasTiposRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LineasTiposRowChanging != null)) {
                    this.LineasTiposRowChanging(this, new LineasTiposRowChangeEvent(((LineasTiposRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LineasTiposRowDeleted != null)) {
                    this.LineasTiposRowDeleted(this, new LineasTiposRowChangeEvent(((LineasTiposRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LineasTiposRowDeleting != null)) {
                    this.LineasTiposRowDeleting(this, new LineasTiposRowChangeEvent(((LineasTiposRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveLineasTiposRow(LineasTiposRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class LineasTiposRow : DataRow {
            
            private LineasTiposDataTable tableLineasTipos;
            
            internal LineasTiposRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableLineasTipos = ((LineasTiposDataTable)(this.Table));
            }
            
            public int iIdTipo {
                get {
                    return ((int)(this[this.tableLineasTipos.iIdTipoColumn]));
                }
                set {
                    this[this.tableLineasTipos.iIdTipoColumn] = value;
                }
            }
            
            public int iOrden {
                get {
                    return ((int)(this[this.tableLineasTipos.iOrdenColumn]));
                }
                set {
                    this[this.tableLineasTipos.iOrdenColumn] = value;
                }
            }
            
            public string sValor {
                get {
                    return ((string)(this[this.tableLineasTipos.sValorColumn]));
                }
                set {
                    this[this.tableLineasTipos.sValorColumn] = value;
                }
            }
            
            public string sLiteral {
                get {
                    return ((string)(this[this.tableLineasTipos.sLiteralColumn]));
                }
                set {
                    this[this.tableLineasTipos.sLiteralColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableLineasTipos.dFUMColumn]));
                }
                set {
                    this[this.tableLineasTipos.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableLineasTipos.iEstadoColumn]));
                }
                set {
                    this[this.tableLineasTipos.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class LineasTiposRowChangeEvent : EventArgs {
            
            private LineasTiposRow eventRow;
            
            private DataRowAction eventAction;
            
            public LineasTiposRowChangeEvent(LineasTiposRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public LineasTiposRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetFechasBajadaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columndFUS;
            
            private DataColumn columndFUSPedidosB;
            
            private DataColumn columndFUSVisitasB;
            
            private DataColumn columndFUSGastosB;
            
            private DataColumn columndFUSClientesB;
            
            private DataColumn columndFUSAtencionesB;
            
            internal GetFechasBajadaDataTable() : 
                    base("GetFechasBajada") {
                this.InitClass();
            }
            
            internal GetFechasBajadaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn dFUSColumn {
                get {
                    return this.columndFUS;
                }
            }
            
            internal DataColumn dFUSPedidosBColumn {
                get {
                    return this.columndFUSPedidosB;
                }
            }
            
            internal DataColumn dFUSVisitasBColumn {
                get {
                    return this.columndFUSVisitasB;
                }
            }
            
            internal DataColumn dFUSGastosBColumn {
                get {
                    return this.columndFUSGastosB;
                }
            }
            
            internal DataColumn dFUSClientesBColumn {
                get {
                    return this.columndFUSClientesB;
                }
            }
            
            internal DataColumn dFUSAtencionesBColumn {
                get {
                    return this.columndFUSAtencionesB;
                }
            }
            
            public GetFechasBajadaRow this[int index] {
                get {
                    return ((GetFechasBajadaRow)(this.Rows[index]));
                }
            }
            
            public event GetFechasBajadaRowChangeEventHandler GetFechasBajadaRowChanged;
            
            public event GetFechasBajadaRowChangeEventHandler GetFechasBajadaRowChanging;
            
            public event GetFechasBajadaRowChangeEventHandler GetFechasBajadaRowDeleted;
            
            public event GetFechasBajadaRowChangeEventHandler GetFechasBajadaRowDeleting;
            
            public void AddGetFechasBajadaRow(GetFechasBajadaRow row) {
                this.Rows.Add(row);
            }
            
            public GetFechasBajadaRow AddGetFechasBajadaRow(System.DateTime dFUS, System.DateTime dFUSPedidosB, System.DateTime dFUSVisitasB, System.DateTime dFUSGastosB, System.DateTime dFUSClientesB, System.DateTime dFUSAtencionesB) {
                GetFechasBajadaRow rowGetFechasBajadaRow = ((GetFechasBajadaRow)(this.NewRow()));
                rowGetFechasBajadaRow.ItemArray = new object[] {
                        dFUS,
                        dFUSPedidosB,
                        dFUSVisitasB,
                        dFUSGastosB,
                        dFUSClientesB,
                        dFUSAtencionesB};
                this.Rows.Add(rowGetFechasBajadaRow);
                return rowGetFechasBajadaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GetFechasBajadaDataTable cln = ((GetFechasBajadaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GetFechasBajadaDataTable();
            }
            
            internal void InitVars() {
                this.columndFUS = this.Columns["dFUS"];
                this.columndFUSPedidosB = this.Columns["dFUSPedidosB"];
                this.columndFUSVisitasB = this.Columns["dFUSVisitasB"];
                this.columndFUSGastosB = this.Columns["dFUSGastosB"];
                this.columndFUSClientesB = this.Columns["dFUSClientesB"];
                this.columndFUSAtencionesB = this.Columns["dFUSAtencionesB"];
            }
            
            private void InitClass() {
                this.columndFUS = new DataColumn("dFUS", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUS);
                this.columndFUSPedidosB = new DataColumn("dFUSPedidosB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSPedidosB);
                this.columndFUSVisitasB = new DataColumn("dFUSVisitasB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSVisitasB);
                this.columndFUSGastosB = new DataColumn("dFUSGastosB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSGastosB);
                this.columndFUSClientesB = new DataColumn("dFUSClientesB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSClientesB);
                this.columndFUSAtencionesB = new DataColumn("dFUSAtencionesB", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUSAtencionesB);
                this.columndFUS.AllowDBNull = false;
                this.columndFUSPedidosB.AllowDBNull = false;
                this.columndFUSVisitasB.AllowDBNull = false;
                this.columndFUSGastosB.AllowDBNull = false;
                this.columndFUSClientesB.AllowDBNull = false;
                this.columndFUSAtencionesB.AllowDBNull = false;
            }
            
            public GetFechasBajadaRow NewGetFechasBajadaRow() {
                return ((GetFechasBajadaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GetFechasBajadaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GetFechasBajadaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetFechasBajadaRowChanged != null)) {
                    this.GetFechasBajadaRowChanged(this, new GetFechasBajadaRowChangeEvent(((GetFechasBajadaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetFechasBajadaRowChanging != null)) {
                    this.GetFechasBajadaRowChanging(this, new GetFechasBajadaRowChangeEvent(((GetFechasBajadaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetFechasBajadaRowDeleted != null)) {
                    this.GetFechasBajadaRowDeleted(this, new GetFechasBajadaRowChangeEvent(((GetFechasBajadaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetFechasBajadaRowDeleting != null)) {
                    this.GetFechasBajadaRowDeleting(this, new GetFechasBajadaRowChangeEvent(((GetFechasBajadaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGetFechasBajadaRow(GetFechasBajadaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetFechasBajadaRow : DataRow {
            
            private GetFechasBajadaDataTable tableGetFechasBajada;
            
            internal GetFechasBajadaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetFechasBajada = ((GetFechasBajadaDataTable)(this.Table));
            }
            
            public System.DateTime dFUS {
                get {
                    return ((System.DateTime)(this[this.tableGetFechasBajada.dFUSColumn]));
                }
                set {
                    this[this.tableGetFechasBajada.dFUSColumn] = value;
                }
            }
            
            public System.DateTime dFUSPedidosB {
                get {
                    return ((System.DateTime)(this[this.tableGetFechasBajada.dFUSPedidosBColumn]));
                }
                set {
                    this[this.tableGetFechasBajada.dFUSPedidosBColumn] = value;
                }
            }
            
            public System.DateTime dFUSVisitasB {
                get {
                    return ((System.DateTime)(this[this.tableGetFechasBajada.dFUSVisitasBColumn]));
                }
                set {
                    this[this.tableGetFechasBajada.dFUSVisitasBColumn] = value;
                }
            }
            
            public System.DateTime dFUSGastosB {
                get {
                    return ((System.DateTime)(this[this.tableGetFechasBajada.dFUSGastosBColumn]));
                }
                set {
                    this[this.tableGetFechasBajada.dFUSGastosBColumn] = value;
                }
            }
            
            public System.DateTime dFUSClientesB {
                get {
                    return ((System.DateTime)(this[this.tableGetFechasBajada.dFUSClientesBColumn]));
                }
                set {
                    this[this.tableGetFechasBajada.dFUSClientesBColumn] = value;
                }
            }
            
            public System.DateTime dFUSAtencionesB {
                get {
                    return ((System.DateTime)(this[this.tableGetFechasBajada.dFUSAtencionesBColumn]));
                }
                set {
                    this[this.tableGetFechasBajada.dFUSAtencionesBColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetFechasBajadaRowChangeEvent : EventArgs {
            
            private GetFechasBajadaRow eventRow;
            
            private DataRowAction eventAction;
            
            public GetFechasBajadaRowChangeEvent(GetFechasBajadaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GetFechasBajadaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ErroresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnItemName;
            
            private DataColumn columnMessage;
            
            internal ErroresDataTable() : 
                    base("Errores") {
                this.InitClass();
            }
            
            internal ErroresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            internal DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            public ErroresRow this[int index] {
                get {
                    return ((ErroresRow)(this.Rows[index]));
                }
            }
            
            public event ErroresRowChangeEventHandler ErroresRowChanged;
            
            public event ErroresRowChangeEventHandler ErroresRowChanging;
            
            public event ErroresRowChangeEventHandler ErroresRowDeleted;
            
            public event ErroresRowChangeEventHandler ErroresRowDeleting;
            
            public void AddErroresRow(ErroresRow row) {
                this.Rows.Add(row);
            }
            
            public ErroresRow AddErroresRow(string ItemName, string Message) {
                ErroresRow rowErroresRow = ((ErroresRow)(this.NewRow()));
                rowErroresRow.ItemArray = new object[] {
                        ItemName,
                        Message};
                this.Rows.Add(rowErroresRow);
                return rowErroresRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ErroresDataTable cln = ((ErroresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ErroresDataTable();
            }
            
            internal void InitVars() {
                this.columnItemName = this.Columns["ItemName"];
                this.columnMessage = this.Columns["Message"];
            }
            
            private void InitClass() {
                this.columnItemName = new DataColumn("ItemName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnItemName);
                this.columnMessage = new DataColumn("Message", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMessage);
            }
            
            public ErroresRow NewErroresRow() {
                return ((ErroresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ErroresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ErroresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ErroresRowChanged != null)) {
                    this.ErroresRowChanged(this, new ErroresRowChangeEvent(((ErroresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ErroresRowChanging != null)) {
                    this.ErroresRowChanging(this, new ErroresRowChangeEvent(((ErroresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ErroresRowDeleted != null)) {
                    this.ErroresRowDeleted(this, new ErroresRowChangeEvent(((ErroresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ErroresRowDeleting != null)) {
                    this.ErroresRowDeleting(this, new ErroresRowChangeEvent(((ErroresRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveErroresRow(ErroresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ErroresRow : DataRow {
            
            private ErroresDataTable tableErrores;
            
            internal ErroresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableErrores = ((ErroresDataTable)(this.Table));
            }
            
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableErrores.ItemNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableErrores.ItemNameColumn] = value;
                }
            }
            
            public string Message {
                get {
                    try {
                        return ((string)(this[this.tableErrores.MessageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableErrores.MessageColumn] = value;
                }
            }
            
            public bool IsItemNameNull() {
                return this.IsNull(this.tableErrores.ItemNameColumn);
            }
            
            public void SetItemNameNull() {
                this[this.tableErrores.ItemNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsMessageNull() {
                return this.IsNull(this.tableErrores.MessageColumn);
            }
            
            public void SetMessageNull() {
                this[this.tableErrores.MessageColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ErroresRowChangeEvent : EventArgs {
            
            private ErroresRow eventRow;
            
            private DataRowAction eventAction;
            
            public ErroresRowChangeEvent(ErroresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ErroresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetSincroUpdatesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsCommand;
            
            private DataColumn columndFechaEjecucion;
            
            internal GetSincroUpdatesDataTable() : 
                    base("GetSincroUpdates") {
                this.InitClass();
            }
            
            internal GetSincroUpdatesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sCommandColumn {
                get {
                    return this.columnsCommand;
                }
            }
            
            internal DataColumn dFechaEjecucionColumn {
                get {
                    return this.columndFechaEjecucion;
                }
            }
            
            public GetSincroUpdatesRow this[int index] {
                get {
                    return ((GetSincroUpdatesRow)(this.Rows[index]));
                }
            }
            
            public event GetSincroUpdatesRowChangeEventHandler GetSincroUpdatesRowChanged;
            
            public event GetSincroUpdatesRowChangeEventHandler GetSincroUpdatesRowChanging;
            
            public event GetSincroUpdatesRowChangeEventHandler GetSincroUpdatesRowDeleted;
            
            public event GetSincroUpdatesRowChangeEventHandler GetSincroUpdatesRowDeleting;
            
            public void AddGetSincroUpdatesRow(GetSincroUpdatesRow row) {
                this.Rows.Add(row);
            }
            
            public GetSincroUpdatesRow AddGetSincroUpdatesRow(int iIdDelegado, string sCommand, System.DateTime dFechaEjecucion) {
                GetSincroUpdatesRow rowGetSincroUpdatesRow = ((GetSincroUpdatesRow)(this.NewRow()));
                rowGetSincroUpdatesRow.ItemArray = new object[] {
                        iIdDelegado,
                        sCommand,
                        dFechaEjecucion};
                this.Rows.Add(rowGetSincroUpdatesRow);
                return rowGetSincroUpdatesRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GetSincroUpdatesDataTable cln = ((GetSincroUpdatesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GetSincroUpdatesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsCommand = this.Columns["sCommand"];
                this.columndFechaEjecucion = this.Columns["dFechaEjecucion"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsCommand = new DataColumn("sCommand", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCommand);
                this.columndFechaEjecucion = new DataColumn("dFechaEjecucion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaEjecucion);
                this.columniIdDelegado.AllowDBNull = false;
            }
            
            public GetSincroUpdatesRow NewGetSincroUpdatesRow() {
                return ((GetSincroUpdatesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GetSincroUpdatesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GetSincroUpdatesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetSincroUpdatesRowChanged != null)) {
                    this.GetSincroUpdatesRowChanged(this, new GetSincroUpdatesRowChangeEvent(((GetSincroUpdatesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetSincroUpdatesRowChanging != null)) {
                    this.GetSincroUpdatesRowChanging(this, new GetSincroUpdatesRowChangeEvent(((GetSincroUpdatesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetSincroUpdatesRowDeleted != null)) {
                    this.GetSincroUpdatesRowDeleted(this, new GetSincroUpdatesRowChangeEvent(((GetSincroUpdatesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetSincroUpdatesRowDeleting != null)) {
                    this.GetSincroUpdatesRowDeleting(this, new GetSincroUpdatesRowChangeEvent(((GetSincroUpdatesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGetSincroUpdatesRow(GetSincroUpdatesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetSincroUpdatesRow : DataRow {
            
            private GetSincroUpdatesDataTable tableGetSincroUpdates;
            
            internal GetSincroUpdatesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetSincroUpdates = ((GetSincroUpdatesDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableGetSincroUpdates.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableGetSincroUpdates.iIdDelegadoColumn] = value;
                }
            }
            
            public string sCommand {
                get {
                    try {
                        return ((string)(this[this.tableGetSincroUpdates.sCommandColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSincroUpdates.sCommandColumn] = value;
                }
            }
            
            public System.DateTime dFechaEjecucion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGetSincroUpdates.dFechaEjecucionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSincroUpdates.dFechaEjecucionColumn] = value;
                }
            }
            
            public bool IssCommandNull() {
                return this.IsNull(this.tableGetSincroUpdates.sCommandColumn);
            }
            
            public void SetsCommandNull() {
                this[this.tableGetSincroUpdates.sCommandColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaEjecucionNull() {
                return this.IsNull(this.tableGetSincroUpdates.dFechaEjecucionColumn);
            }
            
            public void SetdFechaEjecucionNull() {
                this[this.tableGetSincroUpdates.dFechaEjecucionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetSincroUpdatesRowChangeEvent : EventArgs {
            
            private GetSincroUpdatesRow eventRow;
            
            private DataRowAction eventAction;
            
            public GetSincroUpdatesRowChangeEvent(GetSincroUpdatesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GetSincroUpdatesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TipoCargoDelegadoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCargo;
            
            private DataColumn columnsCargo;
            
            private DataColumn columnbTieneBricks;
            
            private DataColumn columnIGClientesCOM;
            
            private DataColumn columniGCLientesSAP;
            
            private DataColumn columnIGPedidos;
            
            private DataColumn columnIGGastos;
            
            private DataColumn columnIGVisitas;
            
            private DataColumn columnIGAtenciones;
            
            private DataColumn columnIGAccionesMark;
            
            private DataColumn columnIGCentros;
            
            private DataColumn columnsDirImagen;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal TipoCargoDelegadoDataTable() : 
                    base("TipoCargoDelegado") {
                this.InitClass();
            }
            
            internal TipoCargoDelegadoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdCargoColumn {
                get {
                    return this.columniIdCargo;
                }
            }
            
            internal DataColumn sCargoColumn {
                get {
                    return this.columnsCargo;
                }
            }
            
            internal DataColumn bTieneBricksColumn {
                get {
                    return this.columnbTieneBricks;
                }
            }
            
            internal DataColumn IGClientesCOMColumn {
                get {
                    return this.columnIGClientesCOM;
                }
            }
            
            internal DataColumn iGCLientesSAPColumn {
                get {
                    return this.columniGCLientesSAP;
                }
            }
            
            internal DataColumn IGPedidosColumn {
                get {
                    return this.columnIGPedidos;
                }
            }
            
            internal DataColumn IGGastosColumn {
                get {
                    return this.columnIGGastos;
                }
            }
            
            internal DataColumn IGVisitasColumn {
                get {
                    return this.columnIGVisitas;
                }
            }
            
            internal DataColumn IGAtencionesColumn {
                get {
                    return this.columnIGAtenciones;
                }
            }
            
            internal DataColumn IGAccionesMarkColumn {
                get {
                    return this.columnIGAccionesMark;
                }
            }
            
            internal DataColumn IGCentrosColumn {
                get {
                    return this.columnIGCentros;
                }
            }
            
            internal DataColumn sDirImagenColumn {
                get {
                    return this.columnsDirImagen;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public TipoCargoDelegadoRow this[int index] {
                get {
                    return ((TipoCargoDelegadoRow)(this.Rows[index]));
                }
            }
            
            public event TipoCargoDelegadoRowChangeEventHandler TipoCargoDelegadoRowChanged;
            
            public event TipoCargoDelegadoRowChangeEventHandler TipoCargoDelegadoRowChanging;
            
            public event TipoCargoDelegadoRowChangeEventHandler TipoCargoDelegadoRowDeleted;
            
            public event TipoCargoDelegadoRowChangeEventHandler TipoCargoDelegadoRowDeleting;
            
            public void AddTipoCargoDelegadoRow(TipoCargoDelegadoRow row) {
                this.Rows.Add(row);
            }
            
            public TipoCargoDelegadoRow AddTipoCargoDelegadoRow(string sCargo, bool bTieneBricks, int IGClientesCOM, int iGCLientesSAP, int IGPedidos, int IGGastos, int IGVisitas, int IGAtenciones, int IGAccionesMark, int IGCentros, string sDirImagen, System.DateTime dFUM, short iEstado) {
                TipoCargoDelegadoRow rowTipoCargoDelegadoRow = ((TipoCargoDelegadoRow)(this.NewRow()));
                rowTipoCargoDelegadoRow.ItemArray = new object[] {
                        null,
                        sCargo,
                        bTieneBricks,
                        IGClientesCOM,
                        iGCLientesSAP,
                        IGPedidos,
                        IGGastos,
                        IGVisitas,
                        IGAtenciones,
                        IGAccionesMark,
                        IGCentros,
                        sDirImagen,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowTipoCargoDelegadoRow);
                return rowTipoCargoDelegadoRow;
            }
            
            public TipoCargoDelegadoRow FindByiIdCargo(int iIdCargo) {
                return ((TipoCargoDelegadoRow)(this.Rows.Find(new object[] {
                            iIdCargo})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TipoCargoDelegadoDataTable cln = ((TipoCargoDelegadoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TipoCargoDelegadoDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCargo = this.Columns["iIdCargo"];
                this.columnsCargo = this.Columns["sCargo"];
                this.columnbTieneBricks = this.Columns["bTieneBricks"];
                this.columnIGClientesCOM = this.Columns["IGClientesCOM"];
                this.columniGCLientesSAP = this.Columns["iGCLientesSAP"];
                this.columnIGPedidos = this.Columns["IGPedidos"];
                this.columnIGGastos = this.Columns["IGGastos"];
                this.columnIGVisitas = this.Columns["IGVisitas"];
                this.columnIGAtenciones = this.Columns["IGAtenciones"];
                this.columnIGAccionesMark = this.Columns["IGAccionesMark"];
                this.columnIGCentros = this.Columns["IGCentros"];
                this.columnsDirImagen = this.Columns["sDirImagen"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCargo = new DataColumn("iIdCargo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCargo);
                this.columnsCargo = new DataColumn("sCargo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCargo);
                this.columnbTieneBricks = new DataColumn("bTieneBricks", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbTieneBricks);
                this.columnIGClientesCOM = new DataColumn("IGClientesCOM", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIGClientesCOM);
                this.columniGCLientesSAP = new DataColumn("iGCLientesSAP", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniGCLientesSAP);
                this.columnIGPedidos = new DataColumn("IGPedidos", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIGPedidos);
                this.columnIGGastos = new DataColumn("IGGastos", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIGGastos);
                this.columnIGVisitas = new DataColumn("IGVisitas", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIGVisitas);
                this.columnIGAtenciones = new DataColumn("IGAtenciones", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIGAtenciones);
                this.columnIGAccionesMark = new DataColumn("IGAccionesMark", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIGAccionesMark);
                this.columnIGCentros = new DataColumn("IGCentros", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIGCentros);
                this.columnsDirImagen = new DataColumn("sDirImagen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDirImagen);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey49", new DataColumn[] {
                                this.columniIdCargo}, true));
                this.columniIdCargo.AutoIncrement = true;
                this.columniIdCargo.AllowDBNull = false;
                this.columniIdCargo.ReadOnly = true;
                this.columniIdCargo.Unique = true;
                this.columnsCargo.AllowDBNull = false;
                this.columnbTieneBricks.AllowDBNull = false;
                this.columnIGClientesCOM.AllowDBNull = false;
                this.columniGCLientesSAP.AllowDBNull = false;
                this.columnIGPedidos.AllowDBNull = false;
                this.columnIGGastos.AllowDBNull = false;
                this.columnIGVisitas.AllowDBNull = false;
                this.columnIGAtenciones.AllowDBNull = false;
                this.columnIGAccionesMark.AllowDBNull = false;
                this.columnIGCentros.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public TipoCargoDelegadoRow NewTipoCargoDelegadoRow() {
                return ((TipoCargoDelegadoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TipoCargoDelegadoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TipoCargoDelegadoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TipoCargoDelegadoRowChanged != null)) {
                    this.TipoCargoDelegadoRowChanged(this, new TipoCargoDelegadoRowChangeEvent(((TipoCargoDelegadoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TipoCargoDelegadoRowChanging != null)) {
                    this.TipoCargoDelegadoRowChanging(this, new TipoCargoDelegadoRowChangeEvent(((TipoCargoDelegadoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TipoCargoDelegadoRowDeleted != null)) {
                    this.TipoCargoDelegadoRowDeleted(this, new TipoCargoDelegadoRowChangeEvent(((TipoCargoDelegadoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TipoCargoDelegadoRowDeleting != null)) {
                    this.TipoCargoDelegadoRowDeleting(this, new TipoCargoDelegadoRowChangeEvent(((TipoCargoDelegadoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTipoCargoDelegadoRow(TipoCargoDelegadoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TipoCargoDelegadoRow : DataRow {
            
            private TipoCargoDelegadoDataTable tableTipoCargoDelegado;
            
            internal TipoCargoDelegadoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTipoCargoDelegado = ((TipoCargoDelegadoDataTable)(this.Table));
            }
            
            public int iIdCargo {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.iIdCargoColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.iIdCargoColumn] = value;
                }
            }
            
            public string sCargo {
                get {
                    return ((string)(this[this.tableTipoCargoDelegado.sCargoColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.sCargoColumn] = value;
                }
            }
            
            public bool bTieneBricks {
                get {
                    return ((bool)(this[this.tableTipoCargoDelegado.bTieneBricksColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.bTieneBricksColumn] = value;
                }
            }
            
            public int IGClientesCOM {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.IGClientesCOMColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.IGClientesCOMColumn] = value;
                }
            }
            
            public int iGCLientesSAP {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.iGCLientesSAPColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.iGCLientesSAPColumn] = value;
                }
            }
            
            public int IGPedidos {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.IGPedidosColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.IGPedidosColumn] = value;
                }
            }
            
            public int IGGastos {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.IGGastosColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.IGGastosColumn] = value;
                }
            }
            
            public int IGVisitas {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.IGVisitasColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.IGVisitasColumn] = value;
                }
            }
            
            public int IGAtenciones {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.IGAtencionesColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.IGAtencionesColumn] = value;
                }
            }
            
            public int IGAccionesMark {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.IGAccionesMarkColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.IGAccionesMarkColumn] = value;
                }
            }
            
            public int IGCentros {
                get {
                    return ((int)(this[this.tableTipoCargoDelegado.IGCentrosColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.IGCentrosColumn] = value;
                }
            }
            
            public string sDirImagen {
                get {
                    try {
                        return ((string)(this[this.tableTipoCargoDelegado.sDirImagenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTipoCargoDelegado.sDirImagenColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableTipoCargoDelegado.dFUMColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableTipoCargoDelegado.iEstadoColumn]));
                }
                set {
                    this[this.tableTipoCargoDelegado.iEstadoColumn] = value;
                }
            }
            
            public bool IssDirImagenNull() {
                return this.IsNull(this.tableTipoCargoDelegado.sDirImagenColumn);
            }
            
            public void SetsDirImagenNull() {
                this[this.tableTipoCargoDelegado.sDirImagenColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TipoCargoDelegadoRowChangeEvent : EventArgs {
            
            private TipoCargoDelegadoRow eventRow;
            
            private DataRowAction eventAction;
            
            public TipoCargoDelegadoRowChangeEvent(TipoCargoDelegadoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TipoCargoDelegadoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ConfiguracionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdConfig;
            
            private DataColumn columnsConfig;
            
            private DataColumn columnsValor;
            
            internal ConfiguracionDataTable() : 
                    base("Configuracion") {
                this.InitClass();
            }
            
            internal ConfiguracionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdConfigColumn {
                get {
                    return this.columniIdConfig;
                }
            }
            
            internal DataColumn sConfigColumn {
                get {
                    return this.columnsConfig;
                }
            }
            
            internal DataColumn sValorColumn {
                get {
                    return this.columnsValor;
                }
            }
            
            public ConfiguracionRow this[int index] {
                get {
                    return ((ConfiguracionRow)(this.Rows[index]));
                }
            }
            
            public event ConfiguracionRowChangeEventHandler ConfiguracionRowChanged;
            
            public event ConfiguracionRowChangeEventHandler ConfiguracionRowChanging;
            
            public event ConfiguracionRowChangeEventHandler ConfiguracionRowDeleted;
            
            public event ConfiguracionRowChangeEventHandler ConfiguracionRowDeleting;
            
            public void AddConfiguracionRow(ConfiguracionRow row) {
                this.Rows.Add(row);
            }
            
            public ConfiguracionRow AddConfiguracionRow(int iIdConfig, string sConfig, string sValor) {
                ConfiguracionRow rowConfiguracionRow = ((ConfiguracionRow)(this.NewRow()));
                rowConfiguracionRow.ItemArray = new object[] {
                        iIdConfig,
                        sConfig,
                        sValor};
                this.Rows.Add(rowConfiguracionRow);
                return rowConfiguracionRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ConfiguracionDataTable cln = ((ConfiguracionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ConfiguracionDataTable();
            }
            
            internal void InitVars() {
                this.columniIdConfig = this.Columns["iIdConfig"];
                this.columnsConfig = this.Columns["sConfig"];
                this.columnsValor = this.Columns["sValor"];
            }
            
            private void InitClass() {
                this.columniIdConfig = new DataColumn("iIdConfig", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdConfig);
                this.columnsConfig = new DataColumn("sConfig", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsConfig);
                this.columnsValor = new DataColumn("sValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsValor);
                this.columniIdConfig.ReadOnly = true;
                this.columnsConfig.ReadOnly = true;
                this.columnsValor.ReadOnly = true;
            }
            
            public ConfiguracionRow NewConfiguracionRow() {
                return ((ConfiguracionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ConfiguracionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ConfiguracionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConfiguracionRowChanged != null)) {
                    this.ConfiguracionRowChanged(this, new ConfiguracionRowChangeEvent(((ConfiguracionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConfiguracionRowChanging != null)) {
                    this.ConfiguracionRowChanging(this, new ConfiguracionRowChangeEvent(((ConfiguracionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConfiguracionRowDeleted != null)) {
                    this.ConfiguracionRowDeleted(this, new ConfiguracionRowChangeEvent(((ConfiguracionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConfiguracionRowDeleting != null)) {
                    this.ConfiguracionRowDeleting(this, new ConfiguracionRowChangeEvent(((ConfiguracionRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveConfiguracionRow(ConfiguracionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ConfiguracionRow : DataRow {
            
            private ConfiguracionDataTable tableConfiguracion;
            
            internal ConfiguracionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableConfiguracion = ((ConfiguracionDataTable)(this.Table));
            }
            
            public int iIdConfig {
                get {
                    try {
                        return ((int)(this[this.tableConfiguracion.iIdConfigColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableConfiguracion.iIdConfigColumn] = value;
                }
            }
            
            public string sConfig {
                get {
                    try {
                        return ((string)(this[this.tableConfiguracion.sConfigColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableConfiguracion.sConfigColumn] = value;
                }
            }
            
            public string sValor {
                get {
                    try {
                        return ((string)(this[this.tableConfiguracion.sValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableConfiguracion.sValorColumn] = value;
                }
            }
            
            public bool IsiIdConfigNull() {
                return this.IsNull(this.tableConfiguracion.iIdConfigColumn);
            }
            
            public void SetiIdConfigNull() {
                this[this.tableConfiguracion.iIdConfigColumn] = System.Convert.DBNull;
            }
            
            public bool IssConfigNull() {
                return this.IsNull(this.tableConfiguracion.sConfigColumn);
            }
            
            public void SetsConfigNull() {
                this[this.tableConfiguracion.sConfigColumn] = System.Convert.DBNull;
            }
            
            public bool IssValorNull() {
                return this.IsNull(this.tableConfiguracion.sValorColumn);
            }
            
            public void SetsValorNull() {
                this[this.tableConfiguracion.sValorColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ConfiguracionRowChangeEvent : EventArgs {
            
            private ConfiguracionRow eventRow;
            
            private DataRowAction eventAction;
            
            public ConfiguracionRowChangeEvent(ConfiguracionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ConfiguracionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProvinciasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdProvincia;
            
            private DataColumn columnsProvincia;
            
            internal ProvinciasDataTable() : 
                    base("Provincias") {
                this.InitClass();
            }
            
            internal ProvinciasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdProvinciaColumn {
                get {
                    return this.columniIdProvincia;
                }
            }
            
            internal DataColumn sProvinciaColumn {
                get {
                    return this.columnsProvincia;
                }
            }
            
            public ProvinciasRow this[int index] {
                get {
                    return ((ProvinciasRow)(this.Rows[index]));
                }
            }
            
            public event ProvinciasRowChangeEventHandler ProvinciasRowChanged;
            
            public event ProvinciasRowChangeEventHandler ProvinciasRowChanging;
            
            public event ProvinciasRowChangeEventHandler ProvinciasRowDeleted;
            
            public event ProvinciasRowChangeEventHandler ProvinciasRowDeleting;
            
            public void AddProvinciasRow(ProvinciasRow row) {
                this.Rows.Add(row);
            }
            
            public ProvinciasRow AddProvinciasRow(int iIdProvincia, string sProvincia) {
                ProvinciasRow rowProvinciasRow = ((ProvinciasRow)(this.NewRow()));
                rowProvinciasRow.ItemArray = new object[] {
                        iIdProvincia,
                        sProvincia};
                this.Rows.Add(rowProvinciasRow);
                return rowProvinciasRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ProvinciasDataTable cln = ((ProvinciasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ProvinciasDataTable();
            }
            
            internal void InitVars() {
                this.columniIdProvincia = this.Columns["iIdProvincia"];
                this.columnsProvincia = this.Columns["sProvincia"];
            }
            
            private void InitClass() {
                this.columniIdProvincia = new DataColumn("iIdProvincia", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdProvincia);
                this.columnsProvincia = new DataColumn("sProvincia", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsProvincia);
                this.columniIdProvincia.AllowDBNull = false;
                this.columnsProvincia.AllowDBNull = false;
            }
            
            public ProvinciasRow NewProvinciasRow() {
                return ((ProvinciasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ProvinciasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ProvinciasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProvinciasRowChanged != null)) {
                    this.ProvinciasRowChanged(this, new ProvinciasRowChangeEvent(((ProvinciasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProvinciasRowChanging != null)) {
                    this.ProvinciasRowChanging(this, new ProvinciasRowChangeEvent(((ProvinciasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProvinciasRowDeleted != null)) {
                    this.ProvinciasRowDeleted(this, new ProvinciasRowChangeEvent(((ProvinciasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProvinciasRowDeleting != null)) {
                    this.ProvinciasRowDeleting(this, new ProvinciasRowChangeEvent(((ProvinciasRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveProvinciasRow(ProvinciasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProvinciasRow : DataRow {
            
            private ProvinciasDataTable tableProvincias;
            
            internal ProvinciasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableProvincias = ((ProvinciasDataTable)(this.Table));
            }
            
            public int iIdProvincia {
                get {
                    return ((int)(this[this.tableProvincias.iIdProvinciaColumn]));
                }
                set {
                    this[this.tableProvincias.iIdProvinciaColumn] = value;
                }
            }
            
            public string sProvincia {
                get {
                    return ((string)(this[this.tableProvincias.sProvinciaColumn]));
                }
                set {
                    this[this.tableProvincias.sProvinciaColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProvinciasRowChangeEvent : EventArgs {
            
            private ProvinciasRow eventRow;
            
            private DataRowAction eventAction;
            
            public ProvinciasRowChangeEvent(ProvinciasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ProvinciasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRedesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columnsIdClasificacion;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal ClientesRedesDataTable() : 
                    base("ClientesRedes") {
                this.InitClass();
            }
            
            internal ClientesRedesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn sIdClasificacionColumn {
                get {
                    return this.columnsIdClasificacion;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public ClientesRedesRow this[int index] {
                get {
                    return ((ClientesRedesRow)(this.Rows[index]));
                }
            }
            
            public event ClientesRedesRowChangeEventHandler ClientesRedesRowChanged;
            
            public event ClientesRedesRowChangeEventHandler ClientesRedesRowChanging;
            
            public event ClientesRedesRowChangeEventHandler ClientesRedesRowDeleted;
            
            public event ClientesRedesRowChangeEventHandler ClientesRedesRowDeleting;
            
            public void AddClientesRedesRow(ClientesRedesRow row) {
                this.Rows.Add(row);
            }
            
            public ClientesRedesRow AddClientesRedesRow(int iIdCliente, string sIdRed, string sIdClasificacion, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                ClientesRedesRow rowClientesRedesRow = ((ClientesRedesRow)(this.NewRow()));
                rowClientesRedesRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdRed,
                        sIdClasificacion,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowClientesRedesRow);
                return rowClientesRedesRow;
            }
            
            public ClientesRedesRow FindByiIdClientesIdReddFAR(int iIdCliente, string sIdRed, System.DateTime dFAR) {
                return ((ClientesRedesRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdRed,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ClientesRedesDataTable cln = ((ClientesRedesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ClientesRedesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columnsIdClasificacion = this.Columns["sIdClasificacion"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columnsIdClasificacion = new DataColumn("sIdClasificacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdClasificacion);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey2", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdRed,
                                this.columndFAR}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public ClientesRedesRow NewClientesRedesRow() {
                return ((ClientesRedesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ClientesRedesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ClientesRedesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientesRedesRowChanged != null)) {
                    this.ClientesRedesRowChanged(this, new ClientesRedesRowChangeEvent(((ClientesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientesRedesRowChanging != null)) {
                    this.ClientesRedesRowChanging(this, new ClientesRedesRowChangeEvent(((ClientesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientesRedesRowDeleted != null)) {
                    this.ClientesRedesRowDeleted(this, new ClientesRedesRowChangeEvent(((ClientesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientesRedesRowDeleting != null)) {
                    this.ClientesRedesRowDeleting(this, new ClientesRedesRowChangeEvent(((ClientesRedesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveClientesRedesRow(ClientesRedesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRedesRow : DataRow {
            
            private ClientesRedesDataTable tableClientesRedes;
            
            internal ClientesRedesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientesRedes = ((ClientesRedesDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableClientesRedes.iIdClienteColumn]));
                }
                set {
                    this[this.tableClientesRedes.iIdClienteColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableClientesRedes.sIdRedColumn]));
                }
                set {
                    this[this.tableClientesRedes.sIdRedColumn] = value;
                }
            }
            
            public string sIdClasificacion {
                get {
                    try {
                        return ((string)(this[this.tableClientesRedes.sIdClasificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesRedes.sIdClasificacionColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableClientesRedes.dFARColumn]));
                }
                set {
                    this[this.tableClientesRedes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableClientesRedes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesRedes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableClientesRedes.iEstadoColumn]));
                }
                set {
                    this[this.tableClientesRedes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableClientesRedes.dFUMColumn]));
                }
                set {
                    this[this.tableClientesRedes.dFUMColumn] = value;
                }
            }
            
            public bool IssIdClasificacionNull() {
                return this.IsNull(this.tableClientesRedes.sIdClasificacionColumn);
            }
            
            public void SetsIdClasificacionNull() {
                this[this.tableClientesRedes.sIdClasificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableClientesRedes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableClientesRedes.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRedesRowChangeEvent : EventArgs {
            
            private ClientesRedesRow eventRow;
            
            private DataRowAction eventAction;
            
            public ClientesRedesRowChangeEvent(ClientesRedesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ClientesRedesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickClientesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdBrick;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal BrickClientesDataTable() : 
                    base("BrickClientes") {
                this.InitClass();
            }
            
            internal BrickClientesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdBrickColumn {
                get {
                    return this.columnsIdBrick;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public BrickClientesRow this[int index] {
                get {
                    return ((BrickClientesRow)(this.Rows[index]));
                }
            }
            
            public event BrickClientesRowChangeEventHandler BrickClientesRowChanged;
            
            public event BrickClientesRowChangeEventHandler BrickClientesRowChanging;
            
            public event BrickClientesRowChangeEventHandler BrickClientesRowDeleted;
            
            public event BrickClientesRowChangeEventHandler BrickClientesRowDeleting;
            
            public void AddBrickClientesRow(BrickClientesRow row) {
                this.Rows.Add(row);
            }
            
            public BrickClientesRow AddBrickClientesRow(int iIdCliente, string sIdBrick, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                BrickClientesRow rowBrickClientesRow = ((BrickClientesRow)(this.NewRow()));
                rowBrickClientesRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdBrick,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowBrickClientesRow);
                return rowBrickClientesRow;
            }
            
            public BrickClientesRow FindByiIdClientesIdBrickdFAR(int iIdCliente, string sIdBrick, System.DateTime dFAR) {
                return ((BrickClientesRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdBrick,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                BrickClientesDataTable cln = ((BrickClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new BrickClientesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdBrick = this.Columns["sIdBrick"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdBrick = new DataColumn("sIdBrick", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdBrick);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey15", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdBrick,
                                this.columndFAR}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdBrick.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public BrickClientesRow NewBrickClientesRow() {
                return ((BrickClientesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new BrickClientesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(BrickClientesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BrickClientesRowChanged != null)) {
                    this.BrickClientesRowChanged(this, new BrickClientesRowChangeEvent(((BrickClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BrickClientesRowChanging != null)) {
                    this.BrickClientesRowChanging(this, new BrickClientesRowChangeEvent(((BrickClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BrickClientesRowDeleted != null)) {
                    this.BrickClientesRowDeleted(this, new BrickClientesRowChangeEvent(((BrickClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BrickClientesRowDeleting != null)) {
                    this.BrickClientesRowDeleting(this, new BrickClientesRowChangeEvent(((BrickClientesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveBrickClientesRow(BrickClientesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickClientesRow : DataRow {
            
            private BrickClientesDataTable tableBrickClientes;
            
            internal BrickClientesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableBrickClientes = ((BrickClientesDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableBrickClientes.iIdClienteColumn]));
                }
                set {
                    this[this.tableBrickClientes.iIdClienteColumn] = value;
                }
            }
            
            public string sIdBrick {
                get {
                    return ((string)(this[this.tableBrickClientes.sIdBrickColumn]));
                }
                set {
                    this[this.tableBrickClientes.sIdBrickColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableBrickClientes.dFARColumn]));
                }
                set {
                    this[this.tableBrickClientes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableBrickClientes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableBrickClientes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableBrickClientes.iEstadoColumn]));
                }
                set {
                    this[this.tableBrickClientes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableBrickClientes.dFUMColumn]));
                }
                set {
                    this[this.tableBrickClientes.dFUMColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableBrickClientes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableBrickClientes.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickClientesRowChangeEvent : EventArgs {
            
            private BrickClientesRow eventRow;
            
            private DataRowAction eventAction;
            
            public BrickClientesRowChangeEvent(BrickClientesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public BrickClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CPClientesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsCodPostal;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal CPClientesDataTable() : 
                    base("CPClientes") {
                this.InitClass();
            }
            
            internal CPClientesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sCodPostalColumn {
                get {
                    return this.columnsCodPostal;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public CPClientesRow this[int index] {
                get {
                    return ((CPClientesRow)(this.Rows[index]));
                }
            }
            
            public event CPClientesRowChangeEventHandler CPClientesRowChanged;
            
            public event CPClientesRowChangeEventHandler CPClientesRowChanging;
            
            public event CPClientesRowChangeEventHandler CPClientesRowDeleted;
            
            public event CPClientesRowChangeEventHandler CPClientesRowDeleting;
            
            public void AddCPClientesRow(CPClientesRow row) {
                this.Rows.Add(row);
            }
            
            public CPClientesRow AddCPClientesRow(int iIdCliente, string sCodPostal, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                CPClientesRow rowCPClientesRow = ((CPClientesRow)(this.NewRow()));
                rowCPClientesRow.ItemArray = new object[] {
                        iIdCliente,
                        sCodPostal,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowCPClientesRow);
                return rowCPClientesRow;
            }
            
            public CPClientesRow FindByiIdClientesCodPostaldFAR(int iIdCliente, string sCodPostal, System.DateTime dFAR) {
                return ((CPClientesRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sCodPostal,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CPClientesDataTable cln = ((CPClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CPClientesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsCodPostal = this.Columns["sCodPostal"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsCodPostal = new DataColumn("sCodPostal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCodPostal);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey16", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsCodPostal,
                                this.columndFAR}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsCodPostal.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public CPClientesRow NewCPClientesRow() {
                return ((CPClientesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CPClientesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CPClientesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CPClientesRowChanged != null)) {
                    this.CPClientesRowChanged(this, new CPClientesRowChangeEvent(((CPClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CPClientesRowChanging != null)) {
                    this.CPClientesRowChanging(this, new CPClientesRowChangeEvent(((CPClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CPClientesRowDeleted != null)) {
                    this.CPClientesRowDeleted(this, new CPClientesRowChangeEvent(((CPClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CPClientesRowDeleting != null)) {
                    this.CPClientesRowDeleting(this, new CPClientesRowChangeEvent(((CPClientesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCPClientesRow(CPClientesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CPClientesRow : DataRow {
            
            private CPClientesDataTable tableCPClientes;
            
            internal CPClientesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCPClientes = ((CPClientesDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableCPClientes.iIdClienteColumn]));
                }
                set {
                    this[this.tableCPClientes.iIdClienteColumn] = value;
                }
            }
            
            public string sCodPostal {
                get {
                    return ((string)(this[this.tableCPClientes.sCodPostalColumn]));
                }
                set {
                    this[this.tableCPClientes.sCodPostalColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableCPClientes.dFARColumn]));
                }
                set {
                    this[this.tableCPClientes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCPClientes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPClientes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCPClientes.iEstadoColumn]));
                }
                set {
                    this[this.tableCPClientes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableCPClientes.dFUMColumn]));
                }
                set {
                    this[this.tableCPClientes.dFUMColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableCPClientes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableCPClientes.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CPClientesRowChangeEvent : EventArgs {
            
            private CPClientesRow eventRow;
            
            private DataRowAction eventAction;
            
            public CPClientesRowChangeEvent(CPClientesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CPClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientes_COMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdCentro;
            
            private DataColumn columnsIdTipoRelacionCliCen;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columndFUM;
            
            internal CentrosClientes_COMDataTable() : 
                    base("CentrosClientes_COM") {
                this.InitClass();
            }
            
            internal CentrosClientes_COMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn sIdTipoRelacionCliCenColumn {
                get {
                    return this.columnsIdTipoRelacionCliCen;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public CentrosClientes_COMRow this[int index] {
                get {
                    return ((CentrosClientes_COMRow)(this.Rows[index]));
                }
            }
            
            public event CentrosClientes_COMRowChangeEventHandler CentrosClientes_COMRowChanged;
            
            public event CentrosClientes_COMRowChangeEventHandler CentrosClientes_COMRowChanging;
            
            public event CentrosClientes_COMRowChangeEventHandler CentrosClientes_COMRowDeleted;
            
            public event CentrosClientes_COMRowChangeEventHandler CentrosClientes_COMRowDeleting;
            
            public void AddCentrosClientes_COMRow(CentrosClientes_COMRow row) {
                this.Rows.Add(row);
            }
            
            public CentrosClientes_COMRow AddCentrosClientes_COMRow(int iIdCliente, int iIdCentro, string sIdTipoRelacionCliCen, System.DateTime dFAR, System.DateTime dFBR, short iEstado, string sIdRed, System.DateTime dFUM) {
                CentrosClientes_COMRow rowCentrosClientes_COMRow = ((CentrosClientes_COMRow)(this.NewRow()));
                rowCentrosClientes_COMRow.ItemArray = new object[] {
                        iIdCliente,
                        iIdCentro,
                        sIdTipoRelacionCliCen,
                        dFAR,
                        dFBR,
                        iEstado,
                        sIdRed,
                        dFUM};
                this.Rows.Add(rowCentrosClientes_COMRow);
                return rowCentrosClientes_COMRow;
            }
            
            public CentrosClientes_COMRow FindByiIdClienteiIdCentrodFARsIdRed(int iIdCliente, int iIdCentro, System.DateTime dFAR, string sIdRed) {
                return ((CentrosClientes_COMRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            iIdCentro,
                            dFAR,
                            sIdRed})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CentrosClientes_COMDataTable cln = ((CentrosClientes_COMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CentrosClientes_COMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columnsIdTipoRelacionCliCen = this.Columns["sIdTipoRelacionCliCen"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columnsIdTipoRelacionCliCen = new DataColumn("sIdTipoRelacionCliCen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoRelacionCliCen);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey4", new DataColumn[] {
                                this.columniIdCliente,
                                this.columniIdCentro,
                                this.columndFAR,
                                this.columnsIdRed}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCentro.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public CentrosClientes_COMRow NewCentrosClientes_COMRow() {
                return ((CentrosClientes_COMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CentrosClientes_COMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CentrosClientes_COMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosClientes_COMRowChanged != null)) {
                    this.CentrosClientes_COMRowChanged(this, new CentrosClientes_COMRowChangeEvent(((CentrosClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosClientes_COMRowChanging != null)) {
                    this.CentrosClientes_COMRowChanging(this, new CentrosClientes_COMRowChangeEvent(((CentrosClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosClientes_COMRowDeleted != null)) {
                    this.CentrosClientes_COMRowDeleted(this, new CentrosClientes_COMRowChangeEvent(((CentrosClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosClientes_COMRowDeleting != null)) {
                    this.CentrosClientes_COMRowDeleting(this, new CentrosClientes_COMRowChangeEvent(((CentrosClientes_COMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCentrosClientes_COMRow(CentrosClientes_COMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientes_COMRow : DataRow {
            
            private CentrosClientes_COMDataTable tableCentrosClientes_COM;
            
            internal CentrosClientes_COMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentrosClientes_COM = ((CentrosClientes_COMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableCentrosClientes_COM.iIdClienteColumn]));
                }
                set {
                    this[this.tableCentrosClientes_COM.iIdClienteColumn] = value;
                }
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableCentrosClientes_COM.iIdCentroColumn]));
                }
                set {
                    this[this.tableCentrosClientes_COM.iIdCentroColumn] = value;
                }
            }
            
            public string sIdTipoRelacionCliCen {
                get {
                    try {
                        return ((string)(this[this.tableCentrosClientes_COM.sIdTipoRelacionCliCenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosClientes_COM.sIdTipoRelacionCliCenColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableCentrosClientes_COM.dFARColumn]));
                }
                set {
                    this[this.tableCentrosClientes_COM.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosClientes_COM.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosClientes_COM.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCentrosClientes_COM.iEstadoColumn]));
                }
                set {
                    this[this.tableCentrosClientes_COM.iEstadoColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableCentrosClientes_COM.sIdRedColumn]));
                }
                set {
                    this[this.tableCentrosClientes_COM.sIdRedColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableCentrosClientes_COM.dFUMColumn]));
                }
                set {
                    this[this.tableCentrosClientes_COM.dFUMColumn] = value;
                }
            }
            
            public bool IssIdTipoRelacionCliCenNull() {
                return this.IsNull(this.tableCentrosClientes_COM.sIdTipoRelacionCliCenColumn);
            }
            
            public void SetsIdTipoRelacionCliCenNull() {
                this[this.tableCentrosClientes_COM.sIdTipoRelacionCliCenColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableCentrosClientes_COM.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableCentrosClientes_COM.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientes_COMRowChangeEvent : EventArgs {
            
            private CentrosClientes_COMRow eventRow;
            
            private DataRowAction eventAction;
            
            public CentrosClientes_COMRowChangeEvent(CentrosClientes_COMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CentrosClientes_COMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRedesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCentro;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal CentrosRedesDataTable() : 
                    base("CentrosRedes") {
                this.InitClass();
            }
            
            internal CentrosRedesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public CentrosRedesRow this[int index] {
                get {
                    return ((CentrosRedesRow)(this.Rows[index]));
                }
            }
            
            public event CentrosRedesRowChangeEventHandler CentrosRedesRowChanged;
            
            public event CentrosRedesRowChangeEventHandler CentrosRedesRowChanging;
            
            public event CentrosRedesRowChangeEventHandler CentrosRedesRowDeleted;
            
            public event CentrosRedesRowChangeEventHandler CentrosRedesRowDeleting;
            
            public void AddCentrosRedesRow(CentrosRedesRow row) {
                this.Rows.Add(row);
            }
            
            public CentrosRedesRow AddCentrosRedesRow(int iIdCentro, string sIdRed, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                CentrosRedesRow rowCentrosRedesRow = ((CentrosRedesRow)(this.NewRow()));
                rowCentrosRedesRow.ItemArray = new object[] {
                        iIdCentro,
                        sIdRed,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowCentrosRedesRow);
                return rowCentrosRedesRow;
            }
            
            public CentrosRedesRow FindByiIdCentrosIdReddFAR(int iIdCentro, string sIdRed, System.DateTime dFAR) {
                return ((CentrosRedesRow)(this.Rows.Find(new object[] {
                            iIdCentro,
                            sIdRed,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CentrosRedesDataTable cln = ((CentrosRedesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CentrosRedesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey14", new DataColumn[] {
                                this.columniIdCentro,
                                this.columnsIdRed,
                                this.columndFAR}, true));
                this.columniIdCentro.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public CentrosRedesRow NewCentrosRedesRow() {
                return ((CentrosRedesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CentrosRedesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CentrosRedesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosRedesRowChanged != null)) {
                    this.CentrosRedesRowChanged(this, new CentrosRedesRowChangeEvent(((CentrosRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosRedesRowChanging != null)) {
                    this.CentrosRedesRowChanging(this, new CentrosRedesRowChangeEvent(((CentrosRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosRedesRowDeleted != null)) {
                    this.CentrosRedesRowDeleted(this, new CentrosRedesRowChangeEvent(((CentrosRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosRedesRowDeleting != null)) {
                    this.CentrosRedesRowDeleting(this, new CentrosRedesRowChangeEvent(((CentrosRedesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCentrosRedesRow(CentrosRedesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRedesRow : DataRow {
            
            private CentrosRedesDataTable tableCentrosRedes;
            
            internal CentrosRedesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentrosRedes = ((CentrosRedesDataTable)(this.Table));
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableCentrosRedes.iIdCentroColumn]));
                }
                set {
                    this[this.tableCentrosRedes.iIdCentroColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableCentrosRedes.sIdRedColumn]));
                }
                set {
                    this[this.tableCentrosRedes.sIdRedColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableCentrosRedes.dFARColumn]));
                }
                set {
                    this[this.tableCentrosRedes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosRedes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosRedes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCentrosRedes.iEstadoColumn]));
                }
                set {
                    this[this.tableCentrosRedes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableCentrosRedes.dFUMColumn]));
                }
                set {
                    this[this.tableCentrosRedes.dFUMColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableCentrosRedes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableCentrosRedes.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRedesRowChangeEvent : EventArgs {
            
            private CentrosRedesRow eventRow;
            
            private DataRowAction eventAction;
            
            public CentrosRedesRowChangeEvent(CentrosRedesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CentrosRedesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadoBrickDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdBrick;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal DelegadoBrickDataTable() : 
                    base("DelegadoBrick") {
                this.InitClass();
            }
            
            internal DelegadoBrickDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdBrickColumn {
                get {
                    return this.columnsIdBrick;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public DelegadoBrickRow this[int index] {
                get {
                    return ((DelegadoBrickRow)(this.Rows[index]));
                }
            }
            
            public event DelegadoBrickRowChangeEventHandler DelegadoBrickRowChanged;
            
            public event DelegadoBrickRowChangeEventHandler DelegadoBrickRowChanging;
            
            public event DelegadoBrickRowChangeEventHandler DelegadoBrickRowDeleted;
            
            public event DelegadoBrickRowChangeEventHandler DelegadoBrickRowDeleting;
            
            public void AddDelegadoBrickRow(DelegadoBrickRow row) {
                this.Rows.Add(row);
            }
            
            public DelegadoBrickRow AddDelegadoBrickRow(int iIdDelegado, string sIdBrick, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                DelegadoBrickRow rowDelegadoBrickRow = ((DelegadoBrickRow)(this.NewRow()));
                rowDelegadoBrickRow.ItemArray = new object[] {
                        iIdDelegado,
                        sIdBrick,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowDelegadoBrickRow);
                return rowDelegadoBrickRow;
            }
            
            public DelegadoBrickRow FindByiIdDelegadosIdBrickdFAR(int iIdDelegado, string sIdBrick, System.DateTime dFAR) {
                return ((DelegadoBrickRow)(this.Rows.Find(new object[] {
                            iIdDelegado,
                            sIdBrick,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DelegadoBrickDataTable cln = ((DelegadoBrickDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DelegadoBrickDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdBrick = this.Columns["sIdBrick"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdBrick = new DataColumn("sIdBrick", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdBrick);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey31", new DataColumn[] {
                                this.columniIdDelegado,
                                this.columnsIdBrick,
                                this.columndFAR}, true));
                this.columniIdDelegado.AllowDBNull = false;
                this.columnsIdBrick.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public DelegadoBrickRow NewDelegadoBrickRow() {
                return ((DelegadoBrickRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DelegadoBrickRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DelegadoBrickRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DelegadoBrickRowChanged != null)) {
                    this.DelegadoBrickRowChanged(this, new DelegadoBrickRowChangeEvent(((DelegadoBrickRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DelegadoBrickRowChanging != null)) {
                    this.DelegadoBrickRowChanging(this, new DelegadoBrickRowChangeEvent(((DelegadoBrickRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DelegadoBrickRowDeleted != null)) {
                    this.DelegadoBrickRowDeleted(this, new DelegadoBrickRowChangeEvent(((DelegadoBrickRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DelegadoBrickRowDeleting != null)) {
                    this.DelegadoBrickRowDeleting(this, new DelegadoBrickRowChangeEvent(((DelegadoBrickRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDelegadoBrickRow(DelegadoBrickRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadoBrickRow : DataRow {
            
            private DelegadoBrickDataTable tableDelegadoBrick;
            
            internal DelegadoBrickRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDelegadoBrick = ((DelegadoBrickDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableDelegadoBrick.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdBrick {
                get {
                    return ((string)(this[this.tableDelegadoBrick.sIdBrickColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.sIdBrickColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableDelegadoBrick.dFARColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDelegadoBrick.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegadoBrick.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableDelegadoBrick.iEstadoColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableDelegadoBrick.dFUMColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.dFUMColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableDelegadoBrick.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableDelegadoBrick.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadoBrickRowChangeEvent : EventArgs {
            
            private DelegadoBrickRow eventRow;
            
            private DataRowAction eventAction;
            
            public DelegadoBrickRowChangeEvent(DelegadoBrickRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DelegadoBrickRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ContactosClientes_SAPDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdContacto;
            
            private DataColumn columnsNombre;
            
            private DataColumn columnsIdCargoContacto;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniestado;
            
            private DataColumn columndFUM;
            
            internal ContactosClientes_SAPDataTable() : 
                    base("ContactosClientes_SAP") {
                this.InitClass();
            }
            
            internal ContactosClientes_SAPDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdContactoColumn {
                get {
                    return this.columniIdContacto;
                }
            }
            
            internal DataColumn sNombreColumn {
                get {
                    return this.columnsNombre;
                }
            }
            
            internal DataColumn sIdCargoContactoColumn {
                get {
                    return this.columnsIdCargoContacto;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iestadoColumn {
                get {
                    return this.columniestado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public ContactosClientes_SAPRow this[int index] {
                get {
                    return ((ContactosClientes_SAPRow)(this.Rows[index]));
                }
            }
            
            public event ContactosClientes_SAPRowChangeEventHandler ContactosClientes_SAPRowChanged;
            
            public event ContactosClientes_SAPRowChangeEventHandler ContactosClientes_SAPRowChanging;
            
            public event ContactosClientes_SAPRowChangeEventHandler ContactosClientes_SAPRowDeleted;
            
            public event ContactosClientes_SAPRowChangeEventHandler ContactosClientes_SAPRowDeleting;
            
            public void AddContactosClientes_SAPRow(ContactosClientes_SAPRow row) {
                this.Rows.Add(row);
            }
            
            public ContactosClientes_SAPRow AddContactosClientes_SAPRow(int iIdCliente, int iIdContacto, string sNombre, string sIdCargoContacto, System.DateTime dFAR, System.DateTime dFBR, short iestado, System.DateTime dFUM) {
                ContactosClientes_SAPRow rowContactosClientes_SAPRow = ((ContactosClientes_SAPRow)(this.NewRow()));
                rowContactosClientes_SAPRow.ItemArray = new object[] {
                        iIdCliente,
                        iIdContacto,
                        sNombre,
                        sIdCargoContacto,
                        dFAR,
                        dFBR,
                        iestado,
                        dFUM};
                this.Rows.Add(rowContactosClientes_SAPRow);
                return rowContactosClientes_SAPRow;
            }
            
            public ContactosClientes_SAPRow FindByiIdClienteiIdContactodFAR(int iIdCliente, int iIdContacto, System.DateTime dFAR) {
                return ((ContactosClientes_SAPRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            iIdContacto,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ContactosClientes_SAPDataTable cln = ((ContactosClientes_SAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ContactosClientes_SAPDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdContacto = this.Columns["iIdContacto"];
                this.columnsNombre = this.Columns["sNombre"];
                this.columnsIdCargoContacto = this.Columns["sIdCargoContacto"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniestado = this.Columns["iestado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdContacto = new DataColumn("iIdContacto", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdContacto);
                this.columnsNombre = new DataColumn("sNombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombre);
                this.columnsIdCargoContacto = new DataColumn("sIdCargoContacto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCargoContacto);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniestado = new DataColumn("iestado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniestado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey10", new DataColumn[] {
                                this.columniIdCliente,
                                this.columniIdContacto,
                                this.columndFAR}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdContacto.AllowDBNull = false;
                this.columnsNombre.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniestado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public ContactosClientes_SAPRow NewContactosClientes_SAPRow() {
                return ((ContactosClientes_SAPRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ContactosClientes_SAPRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ContactosClientes_SAPRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContactosClientes_SAPRowChanged != null)) {
                    this.ContactosClientes_SAPRowChanged(this, new ContactosClientes_SAPRowChangeEvent(((ContactosClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContactosClientes_SAPRowChanging != null)) {
                    this.ContactosClientes_SAPRowChanging(this, new ContactosClientes_SAPRowChangeEvent(((ContactosClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContactosClientes_SAPRowDeleted != null)) {
                    this.ContactosClientes_SAPRowDeleted(this, new ContactosClientes_SAPRowChangeEvent(((ContactosClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContactosClientes_SAPRowDeleting != null)) {
                    this.ContactosClientes_SAPRowDeleting(this, new ContactosClientes_SAPRowChangeEvent(((ContactosClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveContactosClientes_SAPRow(ContactosClientes_SAPRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ContactosClientes_SAPRow : DataRow {
            
            private ContactosClientes_SAPDataTable tableContactosClientes_SAP;
            
            internal ContactosClientes_SAPRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableContactosClientes_SAP = ((ContactosClientes_SAPDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableContactosClientes_SAP.iIdClienteColumn]));
                }
                set {
                    this[this.tableContactosClientes_SAP.iIdClienteColumn] = value;
                }
            }
            
            public int iIdContacto {
                get {
                    return ((int)(this[this.tableContactosClientes_SAP.iIdContactoColumn]));
                }
                set {
                    this[this.tableContactosClientes_SAP.iIdContactoColumn] = value;
                }
            }
            
            public string sNombre {
                get {
                    return ((string)(this[this.tableContactosClientes_SAP.sNombreColumn]));
                }
                set {
                    this[this.tableContactosClientes_SAP.sNombreColumn] = value;
                }
            }
            
            public string sIdCargoContacto {
                get {
                    try {
                        return ((string)(this[this.tableContactosClientes_SAP.sIdCargoContactoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactosClientes_SAP.sIdCargoContactoColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableContactosClientes_SAP.dFARColumn]));
                }
                set {
                    this[this.tableContactosClientes_SAP.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableContactosClientes_SAP.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactosClientes_SAP.dFBRColumn] = value;
                }
            }
            
            public short iestado {
                get {
                    return ((short)(this[this.tableContactosClientes_SAP.iestadoColumn]));
                }
                set {
                    this[this.tableContactosClientes_SAP.iestadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableContactosClientes_SAP.dFUMColumn]));
                }
                set {
                    this[this.tableContactosClientes_SAP.dFUMColumn] = value;
                }
            }
            
            public bool IssIdCargoContactoNull() {
                return this.IsNull(this.tableContactosClientes_SAP.sIdCargoContactoColumn);
            }
            
            public void SetsIdCargoContactoNull() {
                this[this.tableContactosClientes_SAP.sIdCargoContactoColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableContactosClientes_SAP.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableContactosClientes_SAP.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ContactosClientes_SAPRowChangeEvent : EventArgs {
            
            private ContactosClientes_SAPRow eventRow;
            
            private DataRowAction eventAction;
            
            public ContactosClientes_SAPRowChangeEvent(ContactosClientes_SAPRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ContactosClientes_SAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientes_SAPDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdCentro;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal CentrosClientes_SAPDataTable() : 
                    base("CentrosClientes_SAP") {
                this.InitClass();
            }
            
            internal CentrosClientes_SAPDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public CentrosClientes_SAPRow this[int index] {
                get {
                    return ((CentrosClientes_SAPRow)(this.Rows[index]));
                }
            }
            
            public event CentrosClientes_SAPRowChangeEventHandler CentrosClientes_SAPRowChanged;
            
            public event CentrosClientes_SAPRowChangeEventHandler CentrosClientes_SAPRowChanging;
            
            public event CentrosClientes_SAPRowChangeEventHandler CentrosClientes_SAPRowDeleted;
            
            public event CentrosClientes_SAPRowChangeEventHandler CentrosClientes_SAPRowDeleting;
            
            public void AddCentrosClientes_SAPRow(CentrosClientes_SAPRow row) {
                this.Rows.Add(row);
            }
            
            public CentrosClientes_SAPRow AddCentrosClientes_SAPRow(int iIdCliente, int iIdCentro, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                CentrosClientes_SAPRow rowCentrosClientes_SAPRow = ((CentrosClientes_SAPRow)(this.NewRow()));
                rowCentrosClientes_SAPRow.ItemArray = new object[] {
                        iIdCliente,
                        iIdCentro,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowCentrosClientes_SAPRow);
                return rowCentrosClientes_SAPRow;
            }
            
            public CentrosClientes_SAPRow FindByiIdClienteiIdCentrodFAR(int iIdCliente, int iIdCentro, System.DateTime dFAR) {
                return ((CentrosClientes_SAPRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            iIdCentro,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CentrosClientes_SAPDataTable cln = ((CentrosClientes_SAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CentrosClientes_SAPDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey11", new DataColumn[] {
                                this.columniIdCliente,
                                this.columniIdCentro,
                                this.columndFAR}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCentro.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public CentrosClientes_SAPRow NewCentrosClientes_SAPRow() {
                return ((CentrosClientes_SAPRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CentrosClientes_SAPRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CentrosClientes_SAPRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosClientes_SAPRowChanged != null)) {
                    this.CentrosClientes_SAPRowChanged(this, new CentrosClientes_SAPRowChangeEvent(((CentrosClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosClientes_SAPRowChanging != null)) {
                    this.CentrosClientes_SAPRowChanging(this, new CentrosClientes_SAPRowChangeEvent(((CentrosClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosClientes_SAPRowDeleted != null)) {
                    this.CentrosClientes_SAPRowDeleted(this, new CentrosClientes_SAPRowChangeEvent(((CentrosClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosClientes_SAPRowDeleting != null)) {
                    this.CentrosClientes_SAPRowDeleting(this, new CentrosClientes_SAPRowChangeEvent(((CentrosClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCentrosClientes_SAPRow(CentrosClientes_SAPRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientes_SAPRow : DataRow {
            
            private CentrosClientes_SAPDataTable tableCentrosClientes_SAP;
            
            internal CentrosClientes_SAPRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentrosClientes_SAP = ((CentrosClientes_SAPDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableCentrosClientes_SAP.iIdClienteColumn]));
                }
                set {
                    this[this.tableCentrosClientes_SAP.iIdClienteColumn] = value;
                }
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableCentrosClientes_SAP.iIdCentroColumn]));
                }
                set {
                    this[this.tableCentrosClientes_SAP.iIdCentroColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableCentrosClientes_SAP.dFARColumn]));
                }
                set {
                    this[this.tableCentrosClientes_SAP.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosClientes_SAP.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosClientes_SAP.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCentrosClientes_SAP.iEstadoColumn]));
                }
                set {
                    this[this.tableCentrosClientes_SAP.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableCentrosClientes_SAP.dFUMColumn]));
                }
                set {
                    this[this.tableCentrosClientes_SAP.dFUMColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableCentrosClientes_SAP.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableCentrosClientes_SAP.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientes_SAPRowChangeEvent : EventArgs {
            
            private CentrosClientes_SAPRow eventRow;
            
            private DataRowAction eventAction;
            
            public CentrosClientes_SAPRowChangeEvent(CentrosClientes_SAPRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CentrosClientes_SAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class InterlocutorClientes_SAPDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdInterlocutor;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdCodClientedelMay;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal InterlocutorClientes_SAPDataTable() : 
                    base("InterlocutorClientes_SAP") {
                this.InitClass();
            }
            
            internal InterlocutorClientes_SAPDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdInterlocutorColumn {
                get {
                    return this.columniIdInterlocutor;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdCodClientedelMayColumn {
                get {
                    return this.columnsIdCodClientedelMay;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public InterlocutorClientes_SAPRow this[int index] {
                get {
                    return ((InterlocutorClientes_SAPRow)(this.Rows[index]));
                }
            }
            
            public event InterlocutorClientes_SAPRowChangeEventHandler InterlocutorClientes_SAPRowChanged;
            
            public event InterlocutorClientes_SAPRowChangeEventHandler InterlocutorClientes_SAPRowChanging;
            
            public event InterlocutorClientes_SAPRowChangeEventHandler InterlocutorClientes_SAPRowDeleted;
            
            public event InterlocutorClientes_SAPRowChangeEventHandler InterlocutorClientes_SAPRowDeleting;
            
            public void AddInterlocutorClientes_SAPRow(InterlocutorClientes_SAPRow row) {
                this.Rows.Add(row);
            }
            
            public InterlocutorClientes_SAPRow AddInterlocutorClientes_SAPRow(int iIdInterlocutor, int iIdCliente, string sIdCodClientedelMay, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                InterlocutorClientes_SAPRow rowInterlocutorClientes_SAPRow = ((InterlocutorClientes_SAPRow)(this.NewRow()));
                rowInterlocutorClientes_SAPRow.ItemArray = new object[] {
                        iIdInterlocutor,
                        iIdCliente,
                        sIdCodClientedelMay,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowInterlocutorClientes_SAPRow);
                return rowInterlocutorClientes_SAPRow;
            }
            
            public InterlocutorClientes_SAPRow FindByiIdInterlocutoriIdClientedFAR(int iIdInterlocutor, int iIdCliente, System.DateTime dFAR) {
                return ((InterlocutorClientes_SAPRow)(this.Rows.Find(new object[] {
                            iIdInterlocutor,
                            iIdCliente,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                InterlocutorClientes_SAPDataTable cln = ((InterlocutorClientes_SAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new InterlocutorClientes_SAPDataTable();
            }
            
            internal void InitVars() {
                this.columniIdInterlocutor = this.Columns["iIdInterlocutor"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdCodClientedelMay = this.Columns["sIdCodClientedelMay"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdInterlocutor = new DataColumn("iIdInterlocutor", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdInterlocutor);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdCodClientedelMay = new DataColumn("sIdCodClientedelMay", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCodClientedelMay);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey12", new DataColumn[] {
                                this.columniIdInterlocutor,
                                this.columniIdCliente,
                                this.columndFAR}, true));
                this.columniIdInterlocutor.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public InterlocutorClientes_SAPRow NewInterlocutorClientes_SAPRow() {
                return ((InterlocutorClientes_SAPRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new InterlocutorClientes_SAPRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(InterlocutorClientes_SAPRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InterlocutorClientes_SAPRowChanged != null)) {
                    this.InterlocutorClientes_SAPRowChanged(this, new InterlocutorClientes_SAPRowChangeEvent(((InterlocutorClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InterlocutorClientes_SAPRowChanging != null)) {
                    this.InterlocutorClientes_SAPRowChanging(this, new InterlocutorClientes_SAPRowChangeEvent(((InterlocutorClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InterlocutorClientes_SAPRowDeleted != null)) {
                    this.InterlocutorClientes_SAPRowDeleted(this, new InterlocutorClientes_SAPRowChangeEvent(((InterlocutorClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InterlocutorClientes_SAPRowDeleting != null)) {
                    this.InterlocutorClientes_SAPRowDeleting(this, new InterlocutorClientes_SAPRowChangeEvent(((InterlocutorClientes_SAPRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveInterlocutorClientes_SAPRow(InterlocutorClientes_SAPRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class InterlocutorClientes_SAPRow : DataRow {
            
            private InterlocutorClientes_SAPDataTable tableInterlocutorClientes_SAP;
            
            internal InterlocutorClientes_SAPRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableInterlocutorClientes_SAP = ((InterlocutorClientes_SAPDataTable)(this.Table));
            }
            
            public int iIdInterlocutor {
                get {
                    return ((int)(this[this.tableInterlocutorClientes_SAP.iIdInterlocutorColumn]));
                }
                set {
                    this[this.tableInterlocutorClientes_SAP.iIdInterlocutorColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableInterlocutorClientes_SAP.iIdClienteColumn]));
                }
                set {
                    this[this.tableInterlocutorClientes_SAP.iIdClienteColumn] = value;
                }
            }
            
            public string sIdCodClientedelMay {
                get {
                    try {
                        return ((string)(this[this.tableInterlocutorClientes_SAP.sIdCodClientedelMayColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterlocutorClientes_SAP.sIdCodClientedelMayColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableInterlocutorClientes_SAP.dFARColumn]));
                }
                set {
                    this[this.tableInterlocutorClientes_SAP.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableInterlocutorClientes_SAP.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterlocutorClientes_SAP.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableInterlocutorClientes_SAP.iEstadoColumn]));
                }
                set {
                    this[this.tableInterlocutorClientes_SAP.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableInterlocutorClientes_SAP.dFUMColumn]));
                }
                set {
                    this[this.tableInterlocutorClientes_SAP.dFUMColumn] = value;
                }
            }
            
            public bool IssIdCodClientedelMayNull() {
                return this.IsNull(this.tableInterlocutorClientes_SAP.sIdCodClientedelMayColumn);
            }
            
            public void SetsIdCodClientedelMayNull() {
                this[this.tableInterlocutorClientes_SAP.sIdCodClientedelMayColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableInterlocutorClientes_SAP.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableInterlocutorClientes_SAP.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class InterlocutorClientes_SAPRowChangeEvent : EventArgs {
            
            private InterlocutorClientes_SAPRow eventRow;
            
            private DataRowAction eventAction;
            
            public InterlocutorClientes_SAPRowChangeEvent(InterlocutorClientes_SAPRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public InterlocutorClientes_SAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SolicitudGadgetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdSolicitud;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnFecha;
            
            private DataColumn columniIdGadget;
            
            private DataColumn columniCantidadSol;
            
            private DataColumn columniCantidadServ;
            
            private DataColumn columnsStatus;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columndFUM;
            
            internal SolicitudGadgetDataTable() : 
                    base("SolicitudGadget") {
                this.InitClass();
            }
            
            internal SolicitudGadgetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdSolicitudColumn {
                get {
                    return this.columnsIdSolicitud;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn iIdGadgetColumn {
                get {
                    return this.columniIdGadget;
                }
            }
            
            internal DataColumn iCantidadSolColumn {
                get {
                    return this.columniCantidadSol;
                }
            }
            
            internal DataColumn iCantidadServColumn {
                get {
                    return this.columniCantidadServ;
                }
            }
            
            internal DataColumn sStatusColumn {
                get {
                    return this.columnsStatus;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public SolicitudGadgetRow this[int index] {
                get {
                    return ((SolicitudGadgetRow)(this.Rows[index]));
                }
            }
            
            public event SolicitudGadgetRowChangeEventHandler SolicitudGadgetRowChanged;
            
            public event SolicitudGadgetRowChangeEventHandler SolicitudGadgetRowChanging;
            
            public event SolicitudGadgetRowChangeEventHandler SolicitudGadgetRowDeleted;
            
            public event SolicitudGadgetRowChangeEventHandler SolicitudGadgetRowDeleting;
            
            public void AddSolicitudGadgetRow(SolicitudGadgetRow row) {
                this.Rows.Add(row);
            }
            
            public SolicitudGadgetRow AddSolicitudGadgetRow(string sIdSolicitud, int iIdDelegado, System.DateTime Fecha, int iIdGadget, int iCantidadSol, int iCantidadServ, string sStatus, string tObservaciones, System.DateTime dFUM) {
                SolicitudGadgetRow rowSolicitudGadgetRow = ((SolicitudGadgetRow)(this.NewRow()));
                rowSolicitudGadgetRow.ItemArray = new object[] {
                        sIdSolicitud,
                        iIdDelegado,
                        Fecha,
                        iIdGadget,
                        iCantidadSol,
                        iCantidadServ,
                        sStatus,
                        tObservaciones,
                        dFUM};
                this.Rows.Add(rowSolicitudGadgetRow);
                return rowSolicitudGadgetRow;
            }
            
            public SolicitudGadgetRow FindBysIdSolicitud(string sIdSolicitud) {
                return ((SolicitudGadgetRow)(this.Rows.Find(new object[] {
                            sIdSolicitud})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                SolicitudGadgetDataTable cln = ((SolicitudGadgetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new SolicitudGadgetDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdSolicitud = this.Columns["sIdSolicitud"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnFecha = this.Columns["Fecha"];
                this.columniIdGadget = this.Columns["iIdGadget"];
                this.columniCantidadSol = this.Columns["iCantidadSol"];
                this.columniCantidadServ = this.Columns["iCantidadServ"];
                this.columnsStatus = this.Columns["sStatus"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columnsIdSolicitud = new DataColumn("sIdSolicitud", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdSolicitud);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columniIdGadget = new DataColumn("iIdGadget", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdGadget);
                this.columniCantidadSol = new DataColumn("iCantidadSol", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidadSol);
                this.columniCantidadServ = new DataColumn("iCantidadServ", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidadServ);
                this.columnsStatus = new DataColumn("sStatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsStatus);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey50", new DataColumn[] {
                                this.columnsIdSolicitud}, true));
                this.columnsIdSolicitud.AllowDBNull = false;
                this.columnsIdSolicitud.Unique = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columniIdGadget.AllowDBNull = false;
                this.columniCantidadSol.AllowDBNull = false;
                this.columniCantidadServ.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public SolicitudGadgetRow NewSolicitudGadgetRow() {
                return ((SolicitudGadgetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new SolicitudGadgetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(SolicitudGadgetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SolicitudGadgetRowChanged != null)) {
                    this.SolicitudGadgetRowChanged(this, new SolicitudGadgetRowChangeEvent(((SolicitudGadgetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SolicitudGadgetRowChanging != null)) {
                    this.SolicitudGadgetRowChanging(this, new SolicitudGadgetRowChangeEvent(((SolicitudGadgetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SolicitudGadgetRowDeleted != null)) {
                    this.SolicitudGadgetRowDeleted(this, new SolicitudGadgetRowChangeEvent(((SolicitudGadgetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SolicitudGadgetRowDeleting != null)) {
                    this.SolicitudGadgetRowDeleting(this, new SolicitudGadgetRowChangeEvent(((SolicitudGadgetRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveSolicitudGadgetRow(SolicitudGadgetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SolicitudGadgetRow : DataRow {
            
            private SolicitudGadgetDataTable tableSolicitudGadget;
            
            internal SolicitudGadgetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableSolicitudGadget = ((SolicitudGadgetDataTable)(this.Table));
            }
            
            public string sIdSolicitud {
                get {
                    return ((string)(this[this.tableSolicitudGadget.sIdSolicitudColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.sIdSolicitudColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableSolicitudGadget.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.iIdDelegadoColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    return ((System.DateTime)(this[this.tableSolicitudGadget.FechaColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.FechaColumn] = value;
                }
            }
            
            public int iIdGadget {
                get {
                    return ((int)(this[this.tableSolicitudGadget.iIdGadgetColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.iIdGadgetColumn] = value;
                }
            }
            
            public int iCantidadSol {
                get {
                    return ((int)(this[this.tableSolicitudGadget.iCantidadSolColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.iCantidadSolColumn] = value;
                }
            }
            
            public int iCantidadServ {
                get {
                    return ((int)(this[this.tableSolicitudGadget.iCantidadServColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.iCantidadServColumn] = value;
                }
            }
            
            public string sStatus {
                get {
                    try {
                        return ((string)(this[this.tableSolicitudGadget.sStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolicitudGadget.sStatusColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableSolicitudGadget.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolicitudGadget.tObservacionesColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableSolicitudGadget.dFUMColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.dFUMColumn] = value;
                }
            }
            
            public bool IssStatusNull() {
                return this.IsNull(this.tableSolicitudGadget.sStatusColumn);
            }
            
            public void SetsStatusNull() {
                this[this.tableSolicitudGadget.sStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableSolicitudGadget.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableSolicitudGadget.tObservacionesColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SolicitudGadgetRowChangeEvent : EventArgs {
            
            private SolicitudGadgetRow eventRow;
            
            private DataRowAction eventAction;
            
            public SolicitudGadgetRowChangeEvent(SolicitudGadgetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public SolicitudGadgetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecialidadesDelegadoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdEspecialidad;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal EspecialidadesDelegadoDataTable() : 
                    base("EspecialidadesDelegado") {
                this.InitClass();
            }
            
            internal EspecialidadesDelegadoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdEspecialidadColumn {
                get {
                    return this.columnsIdEspecialidad;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public EspecialidadesDelegadoRow this[int index] {
                get {
                    return ((EspecialidadesDelegadoRow)(this.Rows[index]));
                }
            }
            
            public event EspecialidadesDelegadoRowChangeEventHandler EspecialidadesDelegadoRowChanged;
            
            public event EspecialidadesDelegadoRowChangeEventHandler EspecialidadesDelegadoRowChanging;
            
            public event EspecialidadesDelegadoRowChangeEventHandler EspecialidadesDelegadoRowDeleted;
            
            public event EspecialidadesDelegadoRowChangeEventHandler EspecialidadesDelegadoRowDeleting;
            
            public void AddEspecialidadesDelegadoRow(EspecialidadesDelegadoRow row) {
                this.Rows.Add(row);
            }
            
            public EspecialidadesDelegadoRow AddEspecialidadesDelegadoRow(int iIdDelegado, string sIdEspecialidad, short iEstado, System.DateTime dFUM) {
                EspecialidadesDelegadoRow rowEspecialidadesDelegadoRow = ((EspecialidadesDelegadoRow)(this.NewRow()));
                rowEspecialidadesDelegadoRow.ItemArray = new object[] {
                        iIdDelegado,
                        sIdEspecialidad,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowEspecialidadesDelegadoRow);
                return rowEspecialidadesDelegadoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EspecialidadesDelegadoDataTable cln = ((EspecialidadesDelegadoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EspecialidadesDelegadoDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdEspecialidad = this.Columns["sIdEspecialidad"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdEspecialidad = new DataColumn("sIdEspecialidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEspecialidad);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniIdDelegado.AllowDBNull = false;
                this.columnsIdEspecialidad.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public EspecialidadesDelegadoRow NewEspecialidadesDelegadoRow() {
                return ((EspecialidadesDelegadoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EspecialidadesDelegadoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EspecialidadesDelegadoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EspecialidadesDelegadoRowChanged != null)) {
                    this.EspecialidadesDelegadoRowChanged(this, new EspecialidadesDelegadoRowChangeEvent(((EspecialidadesDelegadoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EspecialidadesDelegadoRowChanging != null)) {
                    this.EspecialidadesDelegadoRowChanging(this, new EspecialidadesDelegadoRowChangeEvent(((EspecialidadesDelegadoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EspecialidadesDelegadoRowDeleted != null)) {
                    this.EspecialidadesDelegadoRowDeleted(this, new EspecialidadesDelegadoRowChangeEvent(((EspecialidadesDelegadoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EspecialidadesDelegadoRowDeleting != null)) {
                    this.EspecialidadesDelegadoRowDeleting(this, new EspecialidadesDelegadoRowChangeEvent(((EspecialidadesDelegadoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEspecialidadesDelegadoRow(EspecialidadesDelegadoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecialidadesDelegadoRow : DataRow {
            
            private EspecialidadesDelegadoDataTable tableEspecialidadesDelegado;
            
            internal EspecialidadesDelegadoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEspecialidadesDelegado = ((EspecialidadesDelegadoDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableEspecialidadesDelegado.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableEspecialidadesDelegado.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdEspecialidad {
                get {
                    return ((string)(this[this.tableEspecialidadesDelegado.sIdEspecialidadColumn]));
                }
                set {
                    this[this.tableEspecialidadesDelegado.sIdEspecialidadColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableEspecialidadesDelegado.iEstadoColumn]));
                }
                set {
                    this[this.tableEspecialidadesDelegado.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableEspecialidadesDelegado.dFUMColumn]));
                }
                set {
                    this[this.tableEspecialidadesDelegado.dFUMColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecialidadesDelegadoRowChangeEvent : EventArgs {
            
            private EspecialidadesDelegadoRow eventRow;
            
            private DataRowAction eventAction;
            
            public EspecialidadesDelegadoRowChangeEvent(EspecialidadesDelegadoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EspecialidadesDelegadoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecialidadesRedesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdEspecialidad;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal EspecialidadesRedesDataTable() : 
                    base("EspecialidadesRedes") {
                this.InitClass();
            }
            
            internal EspecialidadesRedesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdEspecialidadColumn {
                get {
                    return this.columnsIdEspecialidad;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public EspecialidadesRedesRow this[int index] {
                get {
                    return ((EspecialidadesRedesRow)(this.Rows[index]));
                }
            }
            
            public event EspecialidadesRedesRowChangeEventHandler EspecialidadesRedesRowChanged;
            
            public event EspecialidadesRedesRowChangeEventHandler EspecialidadesRedesRowChanging;
            
            public event EspecialidadesRedesRowChangeEventHandler EspecialidadesRedesRowDeleted;
            
            public event EspecialidadesRedesRowChangeEventHandler EspecialidadesRedesRowDeleting;
            
            public void AddEspecialidadesRedesRow(EspecialidadesRedesRow row) {
                this.Rows.Add(row);
            }
            
            public EspecialidadesRedesRow AddEspecialidadesRedesRow(string sIdEspecialidad, string sIdRed, short iEstado, System.DateTime dFUM) {
                EspecialidadesRedesRow rowEspecialidadesRedesRow = ((EspecialidadesRedesRow)(this.NewRow()));
                rowEspecialidadesRedesRow.ItemArray = new object[] {
                        sIdEspecialidad,
                        sIdRed,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowEspecialidadesRedesRow);
                return rowEspecialidadesRedesRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EspecialidadesRedesDataTable cln = ((EspecialidadesRedesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EspecialidadesRedesDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdEspecialidad = this.Columns["sIdEspecialidad"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columnsIdEspecialidad = new DataColumn("sIdEspecialidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEspecialidad);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columnsIdEspecialidad.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public EspecialidadesRedesRow NewEspecialidadesRedesRow() {
                return ((EspecialidadesRedesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EspecialidadesRedesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EspecialidadesRedesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EspecialidadesRedesRowChanged != null)) {
                    this.EspecialidadesRedesRowChanged(this, new EspecialidadesRedesRowChangeEvent(((EspecialidadesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EspecialidadesRedesRowChanging != null)) {
                    this.EspecialidadesRedesRowChanging(this, new EspecialidadesRedesRowChangeEvent(((EspecialidadesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EspecialidadesRedesRowDeleted != null)) {
                    this.EspecialidadesRedesRowDeleted(this, new EspecialidadesRedesRowChangeEvent(((EspecialidadesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EspecialidadesRedesRowDeleting != null)) {
                    this.EspecialidadesRedesRowDeleting(this, new EspecialidadesRedesRowChangeEvent(((EspecialidadesRedesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEspecialidadesRedesRow(EspecialidadesRedesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecialidadesRedesRow : DataRow {
            
            private EspecialidadesRedesDataTable tableEspecialidadesRedes;
            
            internal EspecialidadesRedesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEspecialidadesRedes = ((EspecialidadesRedesDataTable)(this.Table));
            }
            
            public string sIdEspecialidad {
                get {
                    return ((string)(this[this.tableEspecialidadesRedes.sIdEspecialidadColumn]));
                }
                set {
                    this[this.tableEspecialidadesRedes.sIdEspecialidadColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableEspecialidadesRedes.sIdRedColumn]));
                }
                set {
                    this[this.tableEspecialidadesRedes.sIdRedColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableEspecialidadesRedes.iEstadoColumn]));
                }
                set {
                    this[this.tableEspecialidadesRedes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableEspecialidadesRedes.dFUMColumn]));
                }
                set {
                    this[this.tableEspecialidadesRedes.dFUMColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecialidadesRedesRowChangeEvent : EventArgs {
            
            private EspecialidadesRedesRow eventRow;
            
            private DataRowAction eventAction;
            
            public EspecialidadesRedesRowChangeEvent(EspecialidadesRedesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EspecialidadesRedesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PromocionesRedesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal PromocionesRedesDataTable() : 
                    base("PromocionesRedes") {
                this.InitClass();
            }
            
            internal PromocionesRedesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public PromocionesRedesRow this[int index] {
                get {
                    return ((PromocionesRedesRow)(this.Rows[index]));
                }
            }
            
            public event PromocionesRedesRowChangeEventHandler PromocionesRedesRowChanged;
            
            public event PromocionesRedesRowChangeEventHandler PromocionesRedesRowChanging;
            
            public event PromocionesRedesRowChangeEventHandler PromocionesRedesRowDeleted;
            
            public event PromocionesRedesRowChangeEventHandler PromocionesRedesRowDeleting;
            
            public void AddPromocionesRedesRow(PromocionesRedesRow row) {
                this.Rows.Add(row);
            }
            
            public PromocionesRedesRow AddPromocionesRedesRow(string sIdProducto, string sIdRed, System.DateTime dFUM, short iEstado) {
                PromocionesRedesRow rowPromocionesRedesRow = ((PromocionesRedesRow)(this.NewRow()));
                rowPromocionesRedesRow.ItemArray = new object[] {
                        sIdProducto,
                        sIdRed,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowPromocionesRedesRow);
                return rowPromocionesRedesRow;
            }
            
            public PromocionesRedesRow FindBysIdProductosIdRed(string sIdProducto, string sIdRed) {
                return ((PromocionesRedesRow)(this.Rows.Find(new object[] {
                            sIdProducto,
                            sIdRed})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PromocionesRedesDataTable cln = ((PromocionesRedesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PromocionesRedesDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey51", new DataColumn[] {
                                this.columnsIdProducto,
                                this.columnsIdRed}, true));
                this.columnsIdProducto.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public PromocionesRedesRow NewPromocionesRedesRow() {
                return ((PromocionesRedesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PromocionesRedesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PromocionesRedesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PromocionesRedesRowChanged != null)) {
                    this.PromocionesRedesRowChanged(this, new PromocionesRedesRowChangeEvent(((PromocionesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PromocionesRedesRowChanging != null)) {
                    this.PromocionesRedesRowChanging(this, new PromocionesRedesRowChangeEvent(((PromocionesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PromocionesRedesRowDeleted != null)) {
                    this.PromocionesRedesRowDeleted(this, new PromocionesRedesRowChangeEvent(((PromocionesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PromocionesRedesRowDeleting != null)) {
                    this.PromocionesRedesRowDeleting(this, new PromocionesRedesRowChangeEvent(((PromocionesRedesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePromocionesRedesRow(PromocionesRedesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PromocionesRedesRow : DataRow {
            
            private PromocionesRedesDataTable tablePromocionesRedes;
            
            internal PromocionesRedesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePromocionesRedes = ((PromocionesRedesDataTable)(this.Table));
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tablePromocionesRedes.sIdProductoColumn]));
                }
                set {
                    this[this.tablePromocionesRedes.sIdProductoColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tablePromocionesRedes.sIdRedColumn]));
                }
                set {
                    this[this.tablePromocionesRedes.sIdRedColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tablePromocionesRedes.dFUMColumn]));
                }
                set {
                    this[this.tablePromocionesRedes.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tablePromocionesRedes.iEstadoColumn]));
                }
                set {
                    this[this.tablePromocionesRedes.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PromocionesRedesRowChangeEvent : EventArgs {
            
            private PromocionesRedesRow eventRow;
            
            private DataRowAction eventAction;
            
            public PromocionesRedesRowChangeEvent(PromocionesRedesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PromocionesRedesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EstructuraComercialDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columniIdDelegadoResp;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal EstructuraComercialDataTable() : 
                    base("EstructuraComercial") {
                this.InitClass();
            }
            
            internal EstructuraComercialDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn iIdDelegadoRespColumn {
                get {
                    return this.columniIdDelegadoResp;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public EstructuraComercialRow this[int index] {
                get {
                    return ((EstructuraComercialRow)(this.Rows[index]));
                }
            }
            
            public event EstructuraComercialRowChangeEventHandler EstructuraComercialRowChanged;
            
            public event EstructuraComercialRowChangeEventHandler EstructuraComercialRowChanging;
            
            public event EstructuraComercialRowChangeEventHandler EstructuraComercialRowDeleted;
            
            public event EstructuraComercialRowChangeEventHandler EstructuraComercialRowDeleting;
            
            public void AddEstructuraComercialRow(EstructuraComercialRow row) {
                this.Rows.Add(row);
            }
            
            public EstructuraComercialRow AddEstructuraComercialRow(int iIdDelegado, int iIdDelegadoResp, System.DateTime dFUM, short iEstado) {
                EstructuraComercialRow rowEstructuraComercialRow = ((EstructuraComercialRow)(this.NewRow()));
                rowEstructuraComercialRow.ItemArray = new object[] {
                        iIdDelegado,
                        iIdDelegadoResp,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowEstructuraComercialRow);
                return rowEstructuraComercialRow;
            }
            
            public EstructuraComercialRow FindByiIdDelegadodFUMiEstado(int iIdDelegado, System.DateTime dFUM, short iEstado) {
                return ((EstructuraComercialRow)(this.Rows.Find(new object[] {
                            iIdDelegado,
                            dFUM,
                            iEstado})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EstructuraComercialDataTable cln = ((EstructuraComercialDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EstructuraComercialDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columniIdDelegadoResp = this.Columns["iIdDelegadoResp"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columniIdDelegadoResp = new DataColumn("iIdDelegadoResp", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegadoResp);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey52", new DataColumn[] {
                                this.columniIdDelegado,
                                this.columndFUM,
                                this.columniEstado}, true));
                this.columniIdDelegado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public EstructuraComercialRow NewEstructuraComercialRow() {
                return ((EstructuraComercialRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EstructuraComercialRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EstructuraComercialRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EstructuraComercialRowChanged != null)) {
                    this.EstructuraComercialRowChanged(this, new EstructuraComercialRowChangeEvent(((EstructuraComercialRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EstructuraComercialRowChanging != null)) {
                    this.EstructuraComercialRowChanging(this, new EstructuraComercialRowChangeEvent(((EstructuraComercialRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EstructuraComercialRowDeleted != null)) {
                    this.EstructuraComercialRowDeleted(this, new EstructuraComercialRowChangeEvent(((EstructuraComercialRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EstructuraComercialRowDeleting != null)) {
                    this.EstructuraComercialRowDeleting(this, new EstructuraComercialRowChangeEvent(((EstructuraComercialRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEstructuraComercialRow(EstructuraComercialRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EstructuraComercialRow : DataRow {
            
            private EstructuraComercialDataTable tableEstructuraComercial;
            
            internal EstructuraComercialRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEstructuraComercial = ((EstructuraComercialDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableEstructuraComercial.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableEstructuraComercial.iIdDelegadoColumn] = value;
                }
            }
            
            public int iIdDelegadoResp {
                get {
                    try {
                        return ((int)(this[this.tableEstructuraComercial.iIdDelegadoRespColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEstructuraComercial.iIdDelegadoRespColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableEstructuraComercial.dFUMColumn]));
                }
                set {
                    this[this.tableEstructuraComercial.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableEstructuraComercial.iEstadoColumn]));
                }
                set {
                    this[this.tableEstructuraComercial.iEstadoColumn] = value;
                }
            }
            
            public bool IsiIdDelegadoRespNull() {
                return this.IsNull(this.tableEstructuraComercial.iIdDelegadoRespColumn);
            }
            
            public void SetiIdDelegadoRespNull() {
                this[this.tableEstructuraComercial.iIdDelegadoRespColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EstructuraComercialRowChangeEvent : EventArgs {
            
            private EstructuraComercialRow eventRow;
            
            private DataRowAction eventAction;
            
            public EstructuraComercialRowChangeEvent(EstructuraComercialRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EstructuraComercialRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ParrillaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIidParrilla;
            
            private DataColumn columnSparrilla;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal ParrillaDataTable() : 
                    base("Parrilla") {
                this.InitClass();
            }
            
            internal ParrillaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IidParrillaColumn {
                get {
                    return this.columnIidParrilla;
                }
            }
            
            internal DataColumn SparrillaColumn {
                get {
                    return this.columnSparrilla;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public ParrillaRow this[int index] {
                get {
                    return ((ParrillaRow)(this.Rows[index]));
                }
            }
            
            public event ParrillaRowChangeEventHandler ParrillaRowChanged;
            
            public event ParrillaRowChangeEventHandler ParrillaRowChanging;
            
            public event ParrillaRowChangeEventHandler ParrillaRowDeleted;
            
            public event ParrillaRowChangeEventHandler ParrillaRowDeleting;
            
            public void AddParrillaRow(ParrillaRow row) {
                this.Rows.Add(row);
            }
            
            public ParrillaRow AddParrillaRow(int IidParrilla, string Sparrilla, System.DateTime dFUM, short iEstado) {
                ParrillaRow rowParrillaRow = ((ParrillaRow)(this.NewRow()));
                rowParrillaRow.ItemArray = new object[] {
                        IidParrilla,
                        Sparrilla,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowParrillaRow);
                return rowParrillaRow;
            }
            
            public ParrillaRow FindByIidParrilla(int IidParrilla) {
                return ((ParrillaRow)(this.Rows.Find(new object[] {
                            IidParrilla})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ParrillaDataTable cln = ((ParrillaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ParrillaDataTable();
            }
            
            internal void InitVars() {
                this.columnIidParrilla = this.Columns["IidParrilla"];
                this.columnSparrilla = this.Columns["Sparrilla"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnIidParrilla = new DataColumn("IidParrilla", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIidParrilla);
                this.columnSparrilla = new DataColumn("Sparrilla", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSparrilla);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey53", new DataColumn[] {
                                this.columnIidParrilla}, true));
                this.columnIidParrilla.AllowDBNull = false;
                this.columnIidParrilla.Unique = true;
                this.columnSparrilla.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public ParrillaRow NewParrillaRow() {
                return ((ParrillaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ParrillaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ParrillaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ParrillaRowChanged != null)) {
                    this.ParrillaRowChanged(this, new ParrillaRowChangeEvent(((ParrillaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ParrillaRowChanging != null)) {
                    this.ParrillaRowChanging(this, new ParrillaRowChangeEvent(((ParrillaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ParrillaRowDeleted != null)) {
                    this.ParrillaRowDeleted(this, new ParrillaRowChangeEvent(((ParrillaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ParrillaRowDeleting != null)) {
                    this.ParrillaRowDeleting(this, new ParrillaRowChangeEvent(((ParrillaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveParrillaRow(ParrillaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ParrillaRow : DataRow {
            
            private ParrillaDataTable tableParrilla;
            
            internal ParrillaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableParrilla = ((ParrillaDataTable)(this.Table));
            }
            
            public int IidParrilla {
                get {
                    return ((int)(this[this.tableParrilla.IidParrillaColumn]));
                }
                set {
                    this[this.tableParrilla.IidParrillaColumn] = value;
                }
            }
            
            public string Sparrilla {
                get {
                    return ((string)(this[this.tableParrilla.SparrillaColumn]));
                }
                set {
                    this[this.tableParrilla.SparrillaColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableParrilla.dFUMColumn]));
                }
                set {
                    this[this.tableParrilla.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    try {
                        return ((short)(this[this.tableParrilla.iEstadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableParrilla.iEstadoColumn] = value;
                }
            }
            
            public bool IsiEstadoNull() {
                return this.IsNull(this.tableParrilla.iEstadoColumn);
            }
            
            public void SetiEstadoNull() {
                this[this.tableParrilla.iEstadoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ParrillaRowChangeEvent : EventArgs {
            
            private ParrillaRow eventRow;
            
            private DataRowAction eventAction;
            
            public ParrillaRowChangeEvent(ParrillaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ParrillaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialParrillaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIidParrilla;
            
            private DataColumn columnIidAccion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal MaterialParrillaDataTable() : 
                    base("MaterialParrilla") {
                this.InitClass();
            }
            
            internal MaterialParrillaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IidParrillaColumn {
                get {
                    return this.columnIidParrilla;
                }
            }
            
            internal DataColumn IidAccionColumn {
                get {
                    return this.columnIidAccion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public MaterialParrillaRow this[int index] {
                get {
                    return ((MaterialParrillaRow)(this.Rows[index]));
                }
            }
            
            public event MaterialParrillaRowChangeEventHandler MaterialParrillaRowChanged;
            
            public event MaterialParrillaRowChangeEventHandler MaterialParrillaRowChanging;
            
            public event MaterialParrillaRowChangeEventHandler MaterialParrillaRowDeleted;
            
            public event MaterialParrillaRowChangeEventHandler MaterialParrillaRowDeleting;
            
            public void AddMaterialParrillaRow(MaterialParrillaRow row) {
                this.Rows.Add(row);
            }
            
            public MaterialParrillaRow AddMaterialParrillaRow(int IidParrilla, int IidAccion, System.DateTime dFUM, short iEstado) {
                MaterialParrillaRow rowMaterialParrillaRow = ((MaterialParrillaRow)(this.NewRow()));
                rowMaterialParrillaRow.ItemArray = new object[] {
                        IidParrilla,
                        IidAccion,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowMaterialParrillaRow);
                return rowMaterialParrillaRow;
            }
            
            public MaterialParrillaRow FindByIidParrillaIidAccion(int IidParrilla, int IidAccion) {
                return ((MaterialParrillaRow)(this.Rows.Find(new object[] {
                            IidParrilla,
                            IidAccion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MaterialParrillaDataTable cln = ((MaterialParrillaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MaterialParrillaDataTable();
            }
            
            internal void InitVars() {
                this.columnIidParrilla = this.Columns["IidParrilla"];
                this.columnIidAccion = this.Columns["IidAccion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columnIidParrilla = new DataColumn("IidParrilla", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIidParrilla);
                this.columnIidAccion = new DataColumn("IidAccion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIidAccion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey54", new DataColumn[] {
                                this.columnIidParrilla,
                                this.columnIidAccion}, true));
                this.columnIidParrilla.AllowDBNull = false;
                this.columnIidAccion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public MaterialParrillaRow NewMaterialParrillaRow() {
                return ((MaterialParrillaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MaterialParrillaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MaterialParrillaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialParrillaRowChanged != null)) {
                    this.MaterialParrillaRowChanged(this, new MaterialParrillaRowChangeEvent(((MaterialParrillaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialParrillaRowChanging != null)) {
                    this.MaterialParrillaRowChanging(this, new MaterialParrillaRowChangeEvent(((MaterialParrillaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialParrillaRowDeleted != null)) {
                    this.MaterialParrillaRowDeleted(this, new MaterialParrillaRowChangeEvent(((MaterialParrillaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialParrillaRowDeleting != null)) {
                    this.MaterialParrillaRowDeleting(this, new MaterialParrillaRowChangeEvent(((MaterialParrillaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMaterialParrillaRow(MaterialParrillaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialParrillaRow : DataRow {
            
            private MaterialParrillaDataTable tableMaterialParrilla;
            
            internal MaterialParrillaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialParrilla = ((MaterialParrillaDataTable)(this.Table));
            }
            
            public int IidParrilla {
                get {
                    return ((int)(this[this.tableMaterialParrilla.IidParrillaColumn]));
                }
                set {
                    this[this.tableMaterialParrilla.IidParrillaColumn] = value;
                }
            }
            
            public int IidAccion {
                get {
                    return ((int)(this[this.tableMaterialParrilla.IidAccionColumn]));
                }
                set {
                    this[this.tableMaterialParrilla.IidAccionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableMaterialParrilla.dFUMColumn]));
                }
                set {
                    this[this.tableMaterialParrilla.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    try {
                        return ((short)(this[this.tableMaterialParrilla.iEstadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialParrilla.iEstadoColumn] = value;
                }
            }
            
            public bool IsiEstadoNull() {
                return this.IsNull(this.tableMaterialParrilla.iEstadoColumn);
            }
            
            public void SetiEstadoNull() {
                this[this.tableMaterialParrilla.iEstadoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialParrillaRowChangeEvent : EventArgs {
            
            private MaterialParrillaRow eventRow;
            
            private DataRowAction eventAction;
            
            public MaterialParrillaRowChangeEvent(MaterialParrillaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MaterialParrillaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialCampDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdMaterial;
            
            private DataColumn columniIdCamp;
            
            private DataColumn columnDescuentoMaximo;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal MaterialCampDataTable() : 
                    base("MaterialCamp") {
                this.InitClass();
            }
            
            internal MaterialCampDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdMaterialColumn {
                get {
                    return this.columniIdMaterial;
                }
            }
            
            internal DataColumn iIdCampColumn {
                get {
                    return this.columniIdCamp;
                }
            }
            
            internal DataColumn DescuentoMaximoColumn {
                get {
                    return this.columnDescuentoMaximo;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public MaterialCampRow this[int index] {
                get {
                    return ((MaterialCampRow)(this.Rows[index]));
                }
            }
            
            public event MaterialCampRowChangeEventHandler MaterialCampRowChanged;
            
            public event MaterialCampRowChangeEventHandler MaterialCampRowChanging;
            
            public event MaterialCampRowChangeEventHandler MaterialCampRowDeleted;
            
            public event MaterialCampRowChangeEventHandler MaterialCampRowDeleting;
            
            public void AddMaterialCampRow(MaterialCampRow row) {
                this.Rows.Add(row);
            }
            
            public MaterialCampRow AddMaterialCampRow(string iIdMaterial, string iIdCamp, System.Single DescuentoMaximo, System.DateTime dFUM, short iEstado) {
                MaterialCampRow rowMaterialCampRow = ((MaterialCampRow)(this.NewRow()));
                rowMaterialCampRow.ItemArray = new object[] {
                        iIdMaterial,
                        iIdCamp,
                        DescuentoMaximo,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowMaterialCampRow);
                return rowMaterialCampRow;
            }
            
            public MaterialCampRow FindByiIdMaterialiIdCamp(string iIdMaterial, string iIdCamp) {
                return ((MaterialCampRow)(this.Rows.Find(new object[] {
                            iIdMaterial,
                            iIdCamp})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MaterialCampDataTable cln = ((MaterialCampDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MaterialCampDataTable();
            }
            
            internal void InitVars() {
                this.columniIdMaterial = this.Columns["iIdMaterial"];
                this.columniIdCamp = this.Columns["iIdCamp"];
                this.columnDescuentoMaximo = this.Columns["DescuentoMaximo"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdMaterial = new DataColumn("iIdMaterial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdMaterial);
                this.columniIdCamp = new DataColumn("iIdCamp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCamp);
                this.columnDescuentoMaximo = new DataColumn("DescuentoMaximo", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuentoMaximo);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey55", new DataColumn[] {
                                this.columniIdMaterial,
                                this.columniIdCamp}, true));
                this.columniIdMaterial.AllowDBNull = false;
                this.columniIdCamp.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public MaterialCampRow NewMaterialCampRow() {
                return ((MaterialCampRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MaterialCampRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MaterialCampRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaterialCampRowChanged != null)) {
                    this.MaterialCampRowChanged(this, new MaterialCampRowChangeEvent(((MaterialCampRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaterialCampRowChanging != null)) {
                    this.MaterialCampRowChanging(this, new MaterialCampRowChangeEvent(((MaterialCampRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaterialCampRowDeleted != null)) {
                    this.MaterialCampRowDeleted(this, new MaterialCampRowChangeEvent(((MaterialCampRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaterialCampRowDeleting != null)) {
                    this.MaterialCampRowDeleting(this, new MaterialCampRowChangeEvent(((MaterialCampRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMaterialCampRow(MaterialCampRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialCampRow : DataRow {
            
            private MaterialCampDataTable tableMaterialCamp;
            
            internal MaterialCampRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaterialCamp = ((MaterialCampDataTable)(this.Table));
            }
            
            public string iIdMaterial {
                get {
                    return ((string)(this[this.tableMaterialCamp.iIdMaterialColumn]));
                }
                set {
                    this[this.tableMaterialCamp.iIdMaterialColumn] = value;
                }
            }
            
            public string iIdCamp {
                get {
                    return ((string)(this[this.tableMaterialCamp.iIdCampColumn]));
                }
                set {
                    this[this.tableMaterialCamp.iIdCampColumn] = value;
                }
            }
            
            public System.Single DescuentoMaximo {
                get {
                    try {
                        return ((System.Single)(this[this.tableMaterialCamp.DescuentoMaximoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialCamp.DescuentoMaximoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableMaterialCamp.dFUMColumn]));
                }
                set {
                    this[this.tableMaterialCamp.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    try {
                        return ((short)(this[this.tableMaterialCamp.iEstadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaterialCamp.iEstadoColumn] = value;
                }
            }
            
            public bool IsDescuentoMaximoNull() {
                return this.IsNull(this.tableMaterialCamp.DescuentoMaximoColumn);
            }
            
            public void SetDescuentoMaximoNull() {
                this[this.tableMaterialCamp.DescuentoMaximoColumn] = System.Convert.DBNull;
            }
            
            public bool IsiEstadoNull() {
                return this.IsNull(this.tableMaterialCamp.iEstadoColumn);
            }
            
            public void SetiEstadoNull() {
                this[this.tableMaterialCamp.iEstadoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MaterialCampRowChangeEvent : EventArgs {
            
            private MaterialCampRow eventRow;
            
            private DataRowAction eventAction;
            
            public MaterialCampRowChangeEvent(MaterialCampRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MaterialCampRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesProductosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdAtencion;
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columnfPorcentaje;
            
            private DataColumn columnbEnviadoPDA;
            
            private DataColumn columnbEnviadoCEN;
            
            internal AtencionesProductosDataTable() : 
                    base("AtencionesProductos") {
                this.InitClass();
            }
            
            internal AtencionesProductosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdAtencionColumn {
                get {
                    return this.columniIdAtencion;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn fPorcentajeColumn {
                get {
                    return this.columnfPorcentaje;
                }
            }
            
            internal DataColumn bEnviadoPDAColumn {
                get {
                    return this.columnbEnviadoPDA;
                }
            }
            
            internal DataColumn bEnviadoCENColumn {
                get {
                    return this.columnbEnviadoCEN;
                }
            }
            
            public AtencionesProductosRow this[int index] {
                get {
                    return ((AtencionesProductosRow)(this.Rows[index]));
                }
            }
            
            public event AtencionesProductosRowChangeEventHandler AtencionesProductosRowChanged;
            
            public event AtencionesProductosRowChangeEventHandler AtencionesProductosRowChanging;
            
            public event AtencionesProductosRowChangeEventHandler AtencionesProductosRowDeleted;
            
            public event AtencionesProductosRowChangeEventHandler AtencionesProductosRowDeleting;
            
            public void AddAtencionesProductosRow(AtencionesProductosRow row) {
                this.Rows.Add(row);
            }
            
            public AtencionesProductosRow AddAtencionesProductosRow(int iIdAtencion, string sIdProducto, System.Double fPorcentaje, bool bEnviadoPDA, bool bEnviadoCEN) {
                AtencionesProductosRow rowAtencionesProductosRow = ((AtencionesProductosRow)(this.NewRow()));
                rowAtencionesProductosRow.ItemArray = new object[] {
                        iIdAtencion,
                        sIdProducto,
                        fPorcentaje,
                        bEnviadoPDA,
                        bEnviadoCEN};
                this.Rows.Add(rowAtencionesProductosRow);
                return rowAtencionesProductosRow;
            }
            
            public AtencionesProductosRow FindByiIdAtencionsIdProducto(int iIdAtencion, string sIdProducto) {
                return ((AtencionesProductosRow)(this.Rows.Find(new object[] {
                            iIdAtencion,
                            sIdProducto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AtencionesProductosDataTable cln = ((AtencionesProductosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AtencionesProductosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdAtencion = this.Columns["iIdAtencion"];
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columnfPorcentaje = this.Columns["fPorcentaje"];
                this.columnbEnviadoPDA = this.Columns["bEnviadoPDA"];
                this.columnbEnviadoCEN = this.Columns["bEnviadoCEN"];
            }
            
            private void InitClass() {
                this.columniIdAtencion = new DataColumn("iIdAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAtencion);
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columnfPorcentaje = new DataColumn("fPorcentaje", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPorcentaje);
                this.columnbEnviadoPDA = new DataColumn("bEnviadoPDA", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEnviadoPDA);
                this.columnbEnviadoCEN = new DataColumn("bEnviadoCEN", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEnviadoCEN);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey56", new DataColumn[] {
                                this.columniIdAtencion,
                                this.columnsIdProducto}, true));
                this.columniIdAtencion.AllowDBNull = false;
                this.columnsIdProducto.AllowDBNull = false;
            }
            
            public AtencionesProductosRow NewAtencionesProductosRow() {
                return ((AtencionesProductosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AtencionesProductosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AtencionesProductosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AtencionesProductosRowChanged != null)) {
                    this.AtencionesProductosRowChanged(this, new AtencionesProductosRowChangeEvent(((AtencionesProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AtencionesProductosRowChanging != null)) {
                    this.AtencionesProductosRowChanging(this, new AtencionesProductosRowChangeEvent(((AtencionesProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AtencionesProductosRowDeleted != null)) {
                    this.AtencionesProductosRowDeleted(this, new AtencionesProductosRowChangeEvent(((AtencionesProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AtencionesProductosRowDeleting != null)) {
                    this.AtencionesProductosRowDeleting(this, new AtencionesProductosRowChangeEvent(((AtencionesProductosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAtencionesProductosRow(AtencionesProductosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesProductosRow : DataRow {
            
            private AtencionesProductosDataTable tableAtencionesProductos;
            
            internal AtencionesProductosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAtencionesProductos = ((AtencionesProductosDataTable)(this.Table));
            }
            
            public int iIdAtencion {
                get {
                    return ((int)(this[this.tableAtencionesProductos.iIdAtencionColumn]));
                }
                set {
                    this[this.tableAtencionesProductos.iIdAtencionColumn] = value;
                }
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tableAtencionesProductos.sIdProductoColumn]));
                }
                set {
                    this[this.tableAtencionesProductos.sIdProductoColumn] = value;
                }
            }
            
            public System.Double fPorcentaje {
                get {
                    try {
                        return ((System.Double)(this[this.tableAtencionesProductos.fPorcentajeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesProductos.fPorcentajeColumn] = value;
                }
            }
            
            public bool bEnviadoPDA {
                get {
                    try {
                        return ((bool)(this[this.tableAtencionesProductos.bEnviadoPDAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesProductos.bEnviadoPDAColumn] = value;
                }
            }
            
            public bool bEnviadoCEN {
                get {
                    try {
                        return ((bool)(this[this.tableAtencionesProductos.bEnviadoCENColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesProductos.bEnviadoCENColumn] = value;
                }
            }
            
            public bool IsfPorcentajeNull() {
                return this.IsNull(this.tableAtencionesProductos.fPorcentajeColumn);
            }
            
            public void SetfPorcentajeNull() {
                this[this.tableAtencionesProductos.fPorcentajeColumn] = System.Convert.DBNull;
            }
            
            public bool IsbEnviadoPDANull() {
                return this.IsNull(this.tableAtencionesProductos.bEnviadoPDAColumn);
            }
            
            public void SetbEnviadoPDANull() {
                this[this.tableAtencionesProductos.bEnviadoPDAColumn] = System.Convert.DBNull;
            }
            
            public bool IsbEnviadoCENNull() {
                return this.IsNull(this.tableAtencionesProductos.bEnviadoCENColumn);
            }
            
            public void SetbEnviadoCENNull() {
                this[this.tableAtencionesProductos.bEnviadoCENColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesProductosRowChangeEvent : EventArgs {
            
            private AtencionesProductosRow eventRow;
            
            private DataRowAction eventAction;
            
            public AtencionesProductosRowChangeEvent(AtencionesProductosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AtencionesProductosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Descuento_CampanyasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdCampanya;
            
            private DataColumn columnbInformarDescuentoMaximo;
            
            internal Descuento_CampanyasDataTable() : 
                    base("Descuento_Campanyas") {
                this.InitClass();
            }
            
            internal Descuento_CampanyasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdCampanyaColumn {
                get {
                    return this.columnsIdCampanya;
                }
            }
            
            internal DataColumn bInformarDescuentoMaximoColumn {
                get {
                    return this.columnbInformarDescuentoMaximo;
                }
            }
            
            public Descuento_CampanyasRow this[int index] {
                get {
                    return ((Descuento_CampanyasRow)(this.Rows[index]));
                }
            }
            
            public event Descuento_CampanyasRowChangeEventHandler Descuento_CampanyasRowChanged;
            
            public event Descuento_CampanyasRowChangeEventHandler Descuento_CampanyasRowChanging;
            
            public event Descuento_CampanyasRowChangeEventHandler Descuento_CampanyasRowDeleted;
            
            public event Descuento_CampanyasRowChangeEventHandler Descuento_CampanyasRowDeleting;
            
            public void AddDescuento_CampanyasRow(Descuento_CampanyasRow row) {
                this.Rows.Add(row);
            }
            
            public Descuento_CampanyasRow AddDescuento_CampanyasRow(string sIdCampanya, bool bInformarDescuentoMaximo) {
                Descuento_CampanyasRow rowDescuento_CampanyasRow = ((Descuento_CampanyasRow)(this.NewRow()));
                rowDescuento_CampanyasRow.ItemArray = new object[] {
                        sIdCampanya,
                        bInformarDescuentoMaximo};
                this.Rows.Add(rowDescuento_CampanyasRow);
                return rowDescuento_CampanyasRow;
            }
            
            public Descuento_CampanyasRow FindBysIdCampanya(string sIdCampanya) {
                return ((Descuento_CampanyasRow)(this.Rows.Find(new object[] {
                            sIdCampanya})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Descuento_CampanyasDataTable cln = ((Descuento_CampanyasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Descuento_CampanyasDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdCampanya = this.Columns["sIdCampanya"];
                this.columnbInformarDescuentoMaximo = this.Columns["bInformarDescuentoMaximo"];
            }
            
            private void InitClass() {
                this.columnsIdCampanya = new DataColumn("sIdCampanya", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCampanya);
                this.columnbInformarDescuentoMaximo = new DataColumn("bInformarDescuentoMaximo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbInformarDescuentoMaximo);
                this.Constraints.Add(new UniqueConstraint("dsCentralKey57", new DataColumn[] {
                                this.columnsIdCampanya}, true));
                this.columnsIdCampanya.AllowDBNull = false;
                this.columnsIdCampanya.Unique = true;
            }
            
            public Descuento_CampanyasRow NewDescuento_CampanyasRow() {
                return ((Descuento_CampanyasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Descuento_CampanyasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Descuento_CampanyasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Descuento_CampanyasRowChanged != null)) {
                    this.Descuento_CampanyasRowChanged(this, new Descuento_CampanyasRowChangeEvent(((Descuento_CampanyasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Descuento_CampanyasRowChanging != null)) {
                    this.Descuento_CampanyasRowChanging(this, new Descuento_CampanyasRowChangeEvent(((Descuento_CampanyasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Descuento_CampanyasRowDeleted != null)) {
                    this.Descuento_CampanyasRowDeleted(this, new Descuento_CampanyasRowChangeEvent(((Descuento_CampanyasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Descuento_CampanyasRowDeleting != null)) {
                    this.Descuento_CampanyasRowDeleting(this, new Descuento_CampanyasRowChangeEvent(((Descuento_CampanyasRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDescuento_CampanyasRow(Descuento_CampanyasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Descuento_CampanyasRow : DataRow {
            
            private Descuento_CampanyasDataTable tableDescuento_Campanyas;
            
            internal Descuento_CampanyasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDescuento_Campanyas = ((Descuento_CampanyasDataTable)(this.Table));
            }
            
            public string sIdCampanya {
                get {
                    return ((string)(this[this.tableDescuento_Campanyas.sIdCampanyaColumn]));
                }
                set {
                    this[this.tableDescuento_Campanyas.sIdCampanyaColumn] = value;
                }
            }
            
            public bool bInformarDescuentoMaximo {
                get {
                    try {
                        return ((bool)(this[this.tableDescuento_Campanyas.bInformarDescuentoMaximoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDescuento_Campanyas.bInformarDescuentoMaximoColumn] = value;
                }
            }
            
            public bool IsbInformarDescuentoMaximoNull() {
                return this.IsNull(this.tableDescuento_Campanyas.bInformarDescuentoMaximoColumn);
            }
            
            public void SetbInformarDescuentoMaximoNull() {
                this[this.tableDescuento_Campanyas.bInformarDescuentoMaximoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Descuento_CampanyasRowChangeEvent : EventArgs {
            
            private Descuento_CampanyasRow eventRow;
            
            private DataRowAction eventAction;
            
            public Descuento_CampanyasRowChangeEvent(Descuento_CampanyasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Descuento_CampanyasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsCliente : DataSet {
        
        private ClientesDataTable tableClientes;
        
        private EspecClientesComDataTable tableEspecClientesCom;
        
        private AficClientesCOMDataTable tableAficClientesCOM;
        
        private ClientesRedesDataTable tableClientesRedes;
        
        private CentrosDataTable tableCentros;
        
        private CentrosRedesDataTable tableCentrosRedes;
        
        private BrickClientesDataTable tableBrickClientes;
        
        private CPClientesDataTable tableCPClientes;
        
        private DelegadoBrickDataTable tableDelegadoBrick;
        
        private PresupuestosDataTable tablePresupuestos;
        
        private Pedidos_LinDataTable tablePedidos_Lin;
        
        private AtencionescomercialesDataTable tableAtencionescomerciales;
        
        private RepActividadCabDataTable tableRepActividadCab;
        
        private RepActividadCliDataTable tableRepActividadCli;
        
        private RepActividadAtenDataTable tableRepActividadAten;
        
        private RepActividadProxObjDataTable tableRepActividadProxObj;
        
        private RepActividadPromDataTable tableRepActividadProm;
        
        private RepActividadPedDataTable tableRepActividadPed;
        
        private RepActGADDataTable tableRepActGAD;
        
        private NotasGastosDataTable tableNotasGastos;
        
        private NotasGastos_LinDataTable tableNotasGastos_Lin;
        
        private AtencionesNGDataTable tableAtencionesNG;
        
        private AccionesMarkClientesDataTable tableAccionesMarkClientes;
        
        private ClientesCOMDataTable tableClientesCOM;
        
        private AgendaDataTable tableAgenda;
        
        private CentrosClientesSAPDataTable tableCentrosClientesSAP;
        
        private ContactosClientesSAPDataTable tableContactosClientesSAP;
        
        private ProdClientesCOMDataTable tableProdClientesCOM;
        
        private Pedidos_CabDataTable tablePedidos_Cab;
        
        private CentrosClientesCOMDataTable tableCentrosClientesCOM;
        
        private SolicitudGadgetDataTable tableSolicitudGadget;
        
        private AtencionesProductosDataTable tableAtencionesProductos;
        
        private DataRelation relationNotasGastosAtencionesNG;
        
        private DataRelation relationNotasGastosNotasGastos_Lin;
        
        private DataRelation relationRepActividadCabRepActGAD;
        
        private DataRelation relationRepActividadCabRepActividadPed;
        
        private DataRelation relationRepActividadCabRepActividadProm;
        
        private DataRelation relationRepActividadCabRepActividadProxObj;
        
        private DataRelation relationRepActividadCabRepActividadAten;
        
        private DataRelation relationRepActividadCabRepActividadCli;
        
        private DataRelation relationPedidos_CabPedidos_Lin;
        
        public dsCliente() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsCliente(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Clientes"] != null)) {
                    this.Tables.Add(new ClientesDataTable(ds.Tables["Clientes"]));
                }
                if ((ds.Tables["EspecClientesCom"] != null)) {
                    this.Tables.Add(new EspecClientesComDataTable(ds.Tables["EspecClientesCom"]));
                }
                if ((ds.Tables["AficClientesCOM"] != null)) {
                    this.Tables.Add(new AficClientesCOMDataTable(ds.Tables["AficClientesCOM"]));
                }
                if ((ds.Tables["ClientesRedes"] != null)) {
                    this.Tables.Add(new ClientesRedesDataTable(ds.Tables["ClientesRedes"]));
                }
                if ((ds.Tables["Centros"] != null)) {
                    this.Tables.Add(new CentrosDataTable(ds.Tables["Centros"]));
                }
                if ((ds.Tables["CentrosRedes"] != null)) {
                    this.Tables.Add(new CentrosRedesDataTable(ds.Tables["CentrosRedes"]));
                }
                if ((ds.Tables["BrickClientes"] != null)) {
                    this.Tables.Add(new BrickClientesDataTable(ds.Tables["BrickClientes"]));
                }
                if ((ds.Tables["CPClientes"] != null)) {
                    this.Tables.Add(new CPClientesDataTable(ds.Tables["CPClientes"]));
                }
                if ((ds.Tables["DelegadoBrick"] != null)) {
                    this.Tables.Add(new DelegadoBrickDataTable(ds.Tables["DelegadoBrick"]));
                }
                if ((ds.Tables["Presupuestos"] != null)) {
                    this.Tables.Add(new PresupuestosDataTable(ds.Tables["Presupuestos"]));
                }
                if ((ds.Tables["Pedidos_Lin"] != null)) {
                    this.Tables.Add(new Pedidos_LinDataTable(ds.Tables["Pedidos_Lin"]));
                }
                if ((ds.Tables["Atencionescomerciales"] != null)) {
                    this.Tables.Add(new AtencionescomercialesDataTable(ds.Tables["Atencionescomerciales"]));
                }
                if ((ds.Tables["RepActividadCab"] != null)) {
                    this.Tables.Add(new RepActividadCabDataTable(ds.Tables["RepActividadCab"]));
                }
                if ((ds.Tables["RepActividadCli"] != null)) {
                    this.Tables.Add(new RepActividadCliDataTable(ds.Tables["RepActividadCli"]));
                }
                if ((ds.Tables["RepActividadAten"] != null)) {
                    this.Tables.Add(new RepActividadAtenDataTable(ds.Tables["RepActividadAten"]));
                }
                if ((ds.Tables["RepActividadProxObj"] != null)) {
                    this.Tables.Add(new RepActividadProxObjDataTable(ds.Tables["RepActividadProxObj"]));
                }
                if ((ds.Tables["RepActividadProm"] != null)) {
                    this.Tables.Add(new RepActividadPromDataTable(ds.Tables["RepActividadProm"]));
                }
                if ((ds.Tables["RepActividadPed"] != null)) {
                    this.Tables.Add(new RepActividadPedDataTable(ds.Tables["RepActividadPed"]));
                }
                if ((ds.Tables["RepActGAD"] != null)) {
                    this.Tables.Add(new RepActGADDataTable(ds.Tables["RepActGAD"]));
                }
                if ((ds.Tables["NotasGastos"] != null)) {
                    this.Tables.Add(new NotasGastosDataTable(ds.Tables["NotasGastos"]));
                }
                if ((ds.Tables["NotasGastos_Lin"] != null)) {
                    this.Tables.Add(new NotasGastos_LinDataTable(ds.Tables["NotasGastos_Lin"]));
                }
                if ((ds.Tables["AtencionesNG"] != null)) {
                    this.Tables.Add(new AtencionesNGDataTable(ds.Tables["AtencionesNG"]));
                }
                if ((ds.Tables["AccionesMarkClientes"] != null)) {
                    this.Tables.Add(new AccionesMarkClientesDataTable(ds.Tables["AccionesMarkClientes"]));
                }
                if ((ds.Tables["ClientesCOM"] != null)) {
                    this.Tables.Add(new ClientesCOMDataTable(ds.Tables["ClientesCOM"]));
                }
                if ((ds.Tables["Agenda"] != null)) {
                    this.Tables.Add(new AgendaDataTable(ds.Tables["Agenda"]));
                }
                if ((ds.Tables["CentrosClientesSAP"] != null)) {
                    this.Tables.Add(new CentrosClientesSAPDataTable(ds.Tables["CentrosClientesSAP"]));
                }
                if ((ds.Tables["ContactosClientesSAP"] != null)) {
                    this.Tables.Add(new ContactosClientesSAPDataTable(ds.Tables["ContactosClientesSAP"]));
                }
                if ((ds.Tables["ProdClientesCOM"] != null)) {
                    this.Tables.Add(new ProdClientesCOMDataTable(ds.Tables["ProdClientesCOM"]));
                }
                if ((ds.Tables["Pedidos_Cab"] != null)) {
                    this.Tables.Add(new Pedidos_CabDataTable(ds.Tables["Pedidos_Cab"]));
                }
                if ((ds.Tables["CentrosClientesCOM"] != null)) {
                    this.Tables.Add(new CentrosClientesCOMDataTable(ds.Tables["CentrosClientesCOM"]));
                }
                if ((ds.Tables["SolicitudGadget"] != null)) {
                    this.Tables.Add(new SolicitudGadgetDataTable(ds.Tables["SolicitudGadget"]));
                }
                if ((ds.Tables["AtencionesProductos"] != null)) {
                    this.Tables.Add(new AtencionesProductosDataTable(ds.Tables["AtencionesProductos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientesDataTable Clientes {
            get {
                return this.tableClientes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EspecClientesComDataTable EspecClientesCom {
            get {
                return this.tableEspecClientesCom;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AficClientesCOMDataTable AficClientesCOM {
            get {
                return this.tableAficClientesCOM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientesRedesDataTable ClientesRedes {
            get {
                return this.tableClientesRedes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosDataTable Centros {
            get {
                return this.tableCentros;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosRedesDataTable CentrosRedes {
            get {
                return this.tableCentrosRedes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BrickClientesDataTable BrickClientes {
            get {
                return this.tableBrickClientes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CPClientesDataTable CPClientes {
            get {
                return this.tableCPClientes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DelegadoBrickDataTable DelegadoBrick {
            get {
                return this.tableDelegadoBrick;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PresupuestosDataTable Presupuestos {
            get {
                return this.tablePresupuestos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pedidos_LinDataTable Pedidos_Lin {
            get {
                return this.tablePedidos_Lin;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AtencionescomercialesDataTable Atencionescomerciales {
            get {
                return this.tableAtencionescomerciales;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividadCabDataTable RepActividadCab {
            get {
                return this.tableRepActividadCab;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividadCliDataTable RepActividadCli {
            get {
                return this.tableRepActividadCli;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividadAtenDataTable RepActividadAten {
            get {
                return this.tableRepActividadAten;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividadProxObjDataTable RepActividadProxObj {
            get {
                return this.tableRepActividadProxObj;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividadPromDataTable RepActividadProm {
            get {
                return this.tableRepActividadProm;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActividadPedDataTable RepActividadPed {
            get {
                return this.tableRepActividadPed;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RepActGADDataTable RepActGAD {
            get {
                return this.tableRepActGAD;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NotasGastosDataTable NotasGastos {
            get {
                return this.tableNotasGastos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NotasGastos_LinDataTable NotasGastos_Lin {
            get {
                return this.tableNotasGastos_Lin;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AtencionesNGDataTable AtencionesNG {
            get {
                return this.tableAtencionesNG;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccionesMarkClientesDataTable AccionesMarkClientes {
            get {
                return this.tableAccionesMarkClientes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientesCOMDataTable ClientesCOM {
            get {
                return this.tableClientesCOM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgendaDataTable Agenda {
            get {
                return this.tableAgenda;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosClientesSAPDataTable CentrosClientesSAP {
            get {
                return this.tableCentrosClientesSAP;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContactosClientesSAPDataTable ContactosClientesSAP {
            get {
                return this.tableContactosClientesSAP;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProdClientesCOMDataTable ProdClientesCOM {
            get {
                return this.tableProdClientesCOM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pedidos_CabDataTable Pedidos_Cab {
            get {
                return this.tablePedidos_Cab;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosClientesCOMDataTable CentrosClientesCOM {
            get {
                return this.tableCentrosClientesCOM;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SolicitudGadgetDataTable SolicitudGadget {
            get {
                return this.tableSolicitudGadget;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AtencionesProductosDataTable AtencionesProductos {
            get {
                return this.tableAtencionesProductos;
            }
        }
        
        public override DataSet Clone() {
            dsCliente cln = ((dsCliente)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Clientes"] != null)) {
                this.Tables.Add(new ClientesDataTable(ds.Tables["Clientes"]));
            }
            if ((ds.Tables["EspecClientesCom"] != null)) {
                this.Tables.Add(new EspecClientesComDataTable(ds.Tables["EspecClientesCom"]));
            }
            if ((ds.Tables["AficClientesCOM"] != null)) {
                this.Tables.Add(new AficClientesCOMDataTable(ds.Tables["AficClientesCOM"]));
            }
            if ((ds.Tables["ClientesRedes"] != null)) {
                this.Tables.Add(new ClientesRedesDataTable(ds.Tables["ClientesRedes"]));
            }
            if ((ds.Tables["Centros"] != null)) {
                this.Tables.Add(new CentrosDataTable(ds.Tables["Centros"]));
            }
            if ((ds.Tables["CentrosRedes"] != null)) {
                this.Tables.Add(new CentrosRedesDataTable(ds.Tables["CentrosRedes"]));
            }
            if ((ds.Tables["BrickClientes"] != null)) {
                this.Tables.Add(new BrickClientesDataTable(ds.Tables["BrickClientes"]));
            }
            if ((ds.Tables["CPClientes"] != null)) {
                this.Tables.Add(new CPClientesDataTable(ds.Tables["CPClientes"]));
            }
            if ((ds.Tables["DelegadoBrick"] != null)) {
                this.Tables.Add(new DelegadoBrickDataTable(ds.Tables["DelegadoBrick"]));
            }
            if ((ds.Tables["Presupuestos"] != null)) {
                this.Tables.Add(new PresupuestosDataTable(ds.Tables["Presupuestos"]));
            }
            if ((ds.Tables["Pedidos_Lin"] != null)) {
                this.Tables.Add(new Pedidos_LinDataTable(ds.Tables["Pedidos_Lin"]));
            }
            if ((ds.Tables["Atencionescomerciales"] != null)) {
                this.Tables.Add(new AtencionescomercialesDataTable(ds.Tables["Atencionescomerciales"]));
            }
            if ((ds.Tables["RepActividadCab"] != null)) {
                this.Tables.Add(new RepActividadCabDataTable(ds.Tables["RepActividadCab"]));
            }
            if ((ds.Tables["RepActividadCli"] != null)) {
                this.Tables.Add(new RepActividadCliDataTable(ds.Tables["RepActividadCli"]));
            }
            if ((ds.Tables["RepActividadAten"] != null)) {
                this.Tables.Add(new RepActividadAtenDataTable(ds.Tables["RepActividadAten"]));
            }
            if ((ds.Tables["RepActividadProxObj"] != null)) {
                this.Tables.Add(new RepActividadProxObjDataTable(ds.Tables["RepActividadProxObj"]));
            }
            if ((ds.Tables["RepActividadProm"] != null)) {
                this.Tables.Add(new RepActividadPromDataTable(ds.Tables["RepActividadProm"]));
            }
            if ((ds.Tables["RepActividadPed"] != null)) {
                this.Tables.Add(new RepActividadPedDataTable(ds.Tables["RepActividadPed"]));
            }
            if ((ds.Tables["RepActGAD"] != null)) {
                this.Tables.Add(new RepActGADDataTable(ds.Tables["RepActGAD"]));
            }
            if ((ds.Tables["NotasGastos"] != null)) {
                this.Tables.Add(new NotasGastosDataTable(ds.Tables["NotasGastos"]));
            }
            if ((ds.Tables["NotasGastos_Lin"] != null)) {
                this.Tables.Add(new NotasGastos_LinDataTable(ds.Tables["NotasGastos_Lin"]));
            }
            if ((ds.Tables["AtencionesNG"] != null)) {
                this.Tables.Add(new AtencionesNGDataTable(ds.Tables["AtencionesNG"]));
            }
            if ((ds.Tables["AccionesMarkClientes"] != null)) {
                this.Tables.Add(new AccionesMarkClientesDataTable(ds.Tables["AccionesMarkClientes"]));
            }
            if ((ds.Tables["ClientesCOM"] != null)) {
                this.Tables.Add(new ClientesCOMDataTable(ds.Tables["ClientesCOM"]));
            }
            if ((ds.Tables["Agenda"] != null)) {
                this.Tables.Add(new AgendaDataTable(ds.Tables["Agenda"]));
            }
            if ((ds.Tables["CentrosClientesSAP"] != null)) {
                this.Tables.Add(new CentrosClientesSAPDataTable(ds.Tables["CentrosClientesSAP"]));
            }
            if ((ds.Tables["ContactosClientesSAP"] != null)) {
                this.Tables.Add(new ContactosClientesSAPDataTable(ds.Tables["ContactosClientesSAP"]));
            }
            if ((ds.Tables["ProdClientesCOM"] != null)) {
                this.Tables.Add(new ProdClientesCOMDataTable(ds.Tables["ProdClientesCOM"]));
            }
            if ((ds.Tables["Pedidos_Cab"] != null)) {
                this.Tables.Add(new Pedidos_CabDataTable(ds.Tables["Pedidos_Cab"]));
            }
            if ((ds.Tables["CentrosClientesCOM"] != null)) {
                this.Tables.Add(new CentrosClientesCOMDataTable(ds.Tables["CentrosClientesCOM"]));
            }
            if ((ds.Tables["SolicitudGadget"] != null)) {
                this.Tables.Add(new SolicitudGadgetDataTable(ds.Tables["SolicitudGadget"]));
            }
            if ((ds.Tables["AtencionesProductos"] != null)) {
                this.Tables.Add(new AtencionesProductosDataTable(ds.Tables["AtencionesProductos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableClientes = ((ClientesDataTable)(this.Tables["Clientes"]));
            if ((this.tableClientes != null)) {
                this.tableClientes.InitVars();
            }
            this.tableEspecClientesCom = ((EspecClientesComDataTable)(this.Tables["EspecClientesCom"]));
            if ((this.tableEspecClientesCom != null)) {
                this.tableEspecClientesCom.InitVars();
            }
            this.tableAficClientesCOM = ((AficClientesCOMDataTable)(this.Tables["AficClientesCOM"]));
            if ((this.tableAficClientesCOM != null)) {
                this.tableAficClientesCOM.InitVars();
            }
            this.tableClientesRedes = ((ClientesRedesDataTable)(this.Tables["ClientesRedes"]));
            if ((this.tableClientesRedes != null)) {
                this.tableClientesRedes.InitVars();
            }
            this.tableCentros = ((CentrosDataTable)(this.Tables["Centros"]));
            if ((this.tableCentros != null)) {
                this.tableCentros.InitVars();
            }
            this.tableCentrosRedes = ((CentrosRedesDataTable)(this.Tables["CentrosRedes"]));
            if ((this.tableCentrosRedes != null)) {
                this.tableCentrosRedes.InitVars();
            }
            this.tableBrickClientes = ((BrickClientesDataTable)(this.Tables["BrickClientes"]));
            if ((this.tableBrickClientes != null)) {
                this.tableBrickClientes.InitVars();
            }
            this.tableCPClientes = ((CPClientesDataTable)(this.Tables["CPClientes"]));
            if ((this.tableCPClientes != null)) {
                this.tableCPClientes.InitVars();
            }
            this.tableDelegadoBrick = ((DelegadoBrickDataTable)(this.Tables["DelegadoBrick"]));
            if ((this.tableDelegadoBrick != null)) {
                this.tableDelegadoBrick.InitVars();
            }
            this.tablePresupuestos = ((PresupuestosDataTable)(this.Tables["Presupuestos"]));
            if ((this.tablePresupuestos != null)) {
                this.tablePresupuestos.InitVars();
            }
            this.tablePedidos_Lin = ((Pedidos_LinDataTable)(this.Tables["Pedidos_Lin"]));
            if ((this.tablePedidos_Lin != null)) {
                this.tablePedidos_Lin.InitVars();
            }
            this.tableAtencionescomerciales = ((AtencionescomercialesDataTable)(this.Tables["Atencionescomerciales"]));
            if ((this.tableAtencionescomerciales != null)) {
                this.tableAtencionescomerciales.InitVars();
            }
            this.tableRepActividadCab = ((RepActividadCabDataTable)(this.Tables["RepActividadCab"]));
            if ((this.tableRepActividadCab != null)) {
                this.tableRepActividadCab.InitVars();
            }
            this.tableRepActividadCli = ((RepActividadCliDataTable)(this.Tables["RepActividadCli"]));
            if ((this.tableRepActividadCli != null)) {
                this.tableRepActividadCli.InitVars();
            }
            this.tableRepActividadAten = ((RepActividadAtenDataTable)(this.Tables["RepActividadAten"]));
            if ((this.tableRepActividadAten != null)) {
                this.tableRepActividadAten.InitVars();
            }
            this.tableRepActividadProxObj = ((RepActividadProxObjDataTable)(this.Tables["RepActividadProxObj"]));
            if ((this.tableRepActividadProxObj != null)) {
                this.tableRepActividadProxObj.InitVars();
            }
            this.tableRepActividadProm = ((RepActividadPromDataTable)(this.Tables["RepActividadProm"]));
            if ((this.tableRepActividadProm != null)) {
                this.tableRepActividadProm.InitVars();
            }
            this.tableRepActividadPed = ((RepActividadPedDataTable)(this.Tables["RepActividadPed"]));
            if ((this.tableRepActividadPed != null)) {
                this.tableRepActividadPed.InitVars();
            }
            this.tableRepActGAD = ((RepActGADDataTable)(this.Tables["RepActGAD"]));
            if ((this.tableRepActGAD != null)) {
                this.tableRepActGAD.InitVars();
            }
            this.tableNotasGastos = ((NotasGastosDataTable)(this.Tables["NotasGastos"]));
            if ((this.tableNotasGastos != null)) {
                this.tableNotasGastos.InitVars();
            }
            this.tableNotasGastos_Lin = ((NotasGastos_LinDataTable)(this.Tables["NotasGastos_Lin"]));
            if ((this.tableNotasGastos_Lin != null)) {
                this.tableNotasGastos_Lin.InitVars();
            }
            this.tableAtencionesNG = ((AtencionesNGDataTable)(this.Tables["AtencionesNG"]));
            if ((this.tableAtencionesNG != null)) {
                this.tableAtencionesNG.InitVars();
            }
            this.tableAccionesMarkClientes = ((AccionesMarkClientesDataTable)(this.Tables["AccionesMarkClientes"]));
            if ((this.tableAccionesMarkClientes != null)) {
                this.tableAccionesMarkClientes.InitVars();
            }
            this.tableClientesCOM = ((ClientesCOMDataTable)(this.Tables["ClientesCOM"]));
            if ((this.tableClientesCOM != null)) {
                this.tableClientesCOM.InitVars();
            }
            this.tableAgenda = ((AgendaDataTable)(this.Tables["Agenda"]));
            if ((this.tableAgenda != null)) {
                this.tableAgenda.InitVars();
            }
            this.tableCentrosClientesSAP = ((CentrosClientesSAPDataTable)(this.Tables["CentrosClientesSAP"]));
            if ((this.tableCentrosClientesSAP != null)) {
                this.tableCentrosClientesSAP.InitVars();
            }
            this.tableContactosClientesSAP = ((ContactosClientesSAPDataTable)(this.Tables["ContactosClientesSAP"]));
            if ((this.tableContactosClientesSAP != null)) {
                this.tableContactosClientesSAP.InitVars();
            }
            this.tableProdClientesCOM = ((ProdClientesCOMDataTable)(this.Tables["ProdClientesCOM"]));
            if ((this.tableProdClientesCOM != null)) {
                this.tableProdClientesCOM.InitVars();
            }
            this.tablePedidos_Cab = ((Pedidos_CabDataTable)(this.Tables["Pedidos_Cab"]));
            if ((this.tablePedidos_Cab != null)) {
                this.tablePedidos_Cab.InitVars();
            }
            this.tableCentrosClientesCOM = ((CentrosClientesCOMDataTable)(this.Tables["CentrosClientesCOM"]));
            if ((this.tableCentrosClientesCOM != null)) {
                this.tableCentrosClientesCOM.InitVars();
            }
            this.tableSolicitudGadget = ((SolicitudGadgetDataTable)(this.Tables["SolicitudGadget"]));
            if ((this.tableSolicitudGadget != null)) {
                this.tableSolicitudGadget.InitVars();
            }
            this.tableAtencionesProductos = ((AtencionesProductosDataTable)(this.Tables["AtencionesProductos"]));
            if ((this.tableAtencionesProductos != null)) {
                this.tableAtencionesProductos.InitVars();
            }
            this.relationNotasGastosAtencionesNG = this.Relations["NotasGastosAtencionesNG"];
            this.relationNotasGastosNotasGastos_Lin = this.Relations["NotasGastosNotasGastos_Lin"];
            this.relationRepActividadCabRepActGAD = this.Relations["RepActividadCabRepActGAD"];
            this.relationRepActividadCabRepActividadPed = this.Relations["RepActividadCabRepActividadPed"];
            this.relationRepActividadCabRepActividadProm = this.Relations["RepActividadCabRepActividadProm"];
            this.relationRepActividadCabRepActividadProxObj = this.Relations["RepActividadCabRepActividadProxObj"];
            this.relationRepActividadCabRepActividadAten = this.Relations["RepActividadCabRepActividadAten"];
            this.relationRepActividadCabRepActividadCli = this.Relations["RepActividadCabRepActividadCli"];
            this.relationPedidos_CabPedidos_Lin = this.Relations["Pedidos_CabPedidos_Lin"];
        }
        
        private void InitClass() {
            this.DataSetName = "dsCliente";
            this.Prefix = "";
            this.Namespace = "http://STADACRM/dsCliente.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableClientes = new ClientesDataTable();
            this.Tables.Add(this.tableClientes);
            this.tableEspecClientesCom = new EspecClientesComDataTable();
            this.Tables.Add(this.tableEspecClientesCom);
            this.tableAficClientesCOM = new AficClientesCOMDataTable();
            this.Tables.Add(this.tableAficClientesCOM);
            this.tableClientesRedes = new ClientesRedesDataTable();
            this.Tables.Add(this.tableClientesRedes);
            this.tableCentros = new CentrosDataTable();
            this.Tables.Add(this.tableCentros);
            this.tableCentrosRedes = new CentrosRedesDataTable();
            this.Tables.Add(this.tableCentrosRedes);
            this.tableBrickClientes = new BrickClientesDataTable();
            this.Tables.Add(this.tableBrickClientes);
            this.tableCPClientes = new CPClientesDataTable();
            this.Tables.Add(this.tableCPClientes);
            this.tableDelegadoBrick = new DelegadoBrickDataTable();
            this.Tables.Add(this.tableDelegadoBrick);
            this.tablePresupuestos = new PresupuestosDataTable();
            this.Tables.Add(this.tablePresupuestos);
            this.tablePedidos_Lin = new Pedidos_LinDataTable();
            this.Tables.Add(this.tablePedidos_Lin);
            this.tableAtencionescomerciales = new AtencionescomercialesDataTable();
            this.Tables.Add(this.tableAtencionescomerciales);
            this.tableRepActividadCab = new RepActividadCabDataTable();
            this.Tables.Add(this.tableRepActividadCab);
            this.tableRepActividadCli = new RepActividadCliDataTable();
            this.Tables.Add(this.tableRepActividadCli);
            this.tableRepActividadAten = new RepActividadAtenDataTable();
            this.Tables.Add(this.tableRepActividadAten);
            this.tableRepActividadProxObj = new RepActividadProxObjDataTable();
            this.Tables.Add(this.tableRepActividadProxObj);
            this.tableRepActividadProm = new RepActividadPromDataTable();
            this.Tables.Add(this.tableRepActividadProm);
            this.tableRepActividadPed = new RepActividadPedDataTable();
            this.Tables.Add(this.tableRepActividadPed);
            this.tableRepActGAD = new RepActGADDataTable();
            this.Tables.Add(this.tableRepActGAD);
            this.tableNotasGastos = new NotasGastosDataTable();
            this.Tables.Add(this.tableNotasGastos);
            this.tableNotasGastos_Lin = new NotasGastos_LinDataTable();
            this.Tables.Add(this.tableNotasGastos_Lin);
            this.tableAtencionesNG = new AtencionesNGDataTable();
            this.Tables.Add(this.tableAtencionesNG);
            this.tableAccionesMarkClientes = new AccionesMarkClientesDataTable();
            this.Tables.Add(this.tableAccionesMarkClientes);
            this.tableClientesCOM = new ClientesCOMDataTable();
            this.Tables.Add(this.tableClientesCOM);
            this.tableAgenda = new AgendaDataTable();
            this.Tables.Add(this.tableAgenda);
            this.tableCentrosClientesSAP = new CentrosClientesSAPDataTable();
            this.Tables.Add(this.tableCentrosClientesSAP);
            this.tableContactosClientesSAP = new ContactosClientesSAPDataTable();
            this.Tables.Add(this.tableContactosClientesSAP);
            this.tableProdClientesCOM = new ProdClientesCOMDataTable();
            this.Tables.Add(this.tableProdClientesCOM);
            this.tablePedidos_Cab = new Pedidos_CabDataTable();
            this.Tables.Add(this.tablePedidos_Cab);
            this.tableCentrosClientesCOM = new CentrosClientesCOMDataTable();
            this.Tables.Add(this.tableCentrosClientesCOM);
            this.tableSolicitudGadget = new SolicitudGadgetDataTable();
            this.Tables.Add(this.tableSolicitudGadget);
            this.tableAtencionesProductos = new AtencionesProductosDataTable();
            this.Tables.Add(this.tableAtencionesProductos);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("Pedidos_CabPedidos_Lin", new DataColumn[] {
                        this.tablePedidos_Cab.sIdPedidoColumn}, new DataColumn[] {
                        this.tablePedidos_Lin.sIdPedidoColumn});
            this.tablePedidos_Lin.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividadCabRepActividadCli", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadCli.iIdReportColumn});
            this.tableRepActividadCli.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividadCabRepActividadAten", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadAten.iIdReportColumn});
            this.tableRepActividadAten.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividadCabRepActividadProxObj", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadProxObj.iIdReportColumn});
            this.tableRepActividadProxObj.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividadCabRepActividadProm", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadProm.iIdReportColumn});
            this.tableRepActividadProm.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividadCabRepActividadPed", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadPed.iIdReportColumn});
            this.tableRepActividadPed.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("RepActividadCabRepActGAD", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActGAD.iIdReportColumn});
            this.tableRepActGAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("NotasGastosNotasGastos_Lin", new DataColumn[] {
                        this.tableNotasGastos.iIdNotaColumn}, new DataColumn[] {
                        this.tableNotasGastos_Lin.iIdNotaColumn});
            this.tableNotasGastos_Lin.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("NotasGastosAtencionesNG", new DataColumn[] {
                        this.tableNotasGastos.iIdNotaColumn}, new DataColumn[] {
                        this.tableAtencionesNG.iIdNotaColumn});
            this.tableAtencionesNG.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationNotasGastosAtencionesNG = new DataRelation("NotasGastosAtencionesNG", new DataColumn[] {
                        this.tableNotasGastos.iIdNotaColumn}, new DataColumn[] {
                        this.tableAtencionesNG.iIdNotaColumn}, false);
            this.Relations.Add(this.relationNotasGastosAtencionesNG);
            this.relationNotasGastosNotasGastos_Lin = new DataRelation("NotasGastosNotasGastos_Lin", new DataColumn[] {
                        this.tableNotasGastos.iIdNotaColumn}, new DataColumn[] {
                        this.tableNotasGastos_Lin.iIdNotaColumn}, false);
            this.Relations.Add(this.relationNotasGastosNotasGastos_Lin);
            this.relationRepActividadCabRepActGAD = new DataRelation("RepActividadCabRepActGAD", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActGAD.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividadCabRepActGAD);
            this.relationRepActividadCabRepActividadPed = new DataRelation("RepActividadCabRepActividadPed", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadPed.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividadCabRepActividadPed);
            this.relationRepActividadCabRepActividadProm = new DataRelation("RepActividadCabRepActividadProm", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadProm.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividadCabRepActividadProm);
            this.relationRepActividadCabRepActividadProxObj = new DataRelation("RepActividadCabRepActividadProxObj", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadProxObj.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividadCabRepActividadProxObj);
            this.relationRepActividadCabRepActividadAten = new DataRelation("RepActividadCabRepActividadAten", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadAten.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividadCabRepActividadAten);
            this.relationRepActividadCabRepActividadCli = new DataRelation("RepActividadCabRepActividadCli", new DataColumn[] {
                        this.tableRepActividadCab.iIdReportColumn}, new DataColumn[] {
                        this.tableRepActividadCli.iIdReportColumn}, false);
            this.Relations.Add(this.relationRepActividadCabRepActividadCli);
            this.relationPedidos_CabPedidos_Lin = new DataRelation("Pedidos_CabPedidos_Lin", new DataColumn[] {
                        this.tablePedidos_Cab.sIdPedidoColumn}, new DataColumn[] {
                        this.tablePedidos_Lin.sIdPedidoColumn}, false);
            this.Relations.Add(this.relationPedidos_CabPedidos_Lin);
        }
        
        private bool ShouldSerializeClientes() {
            return false;
        }
        
        private bool ShouldSerializeEspecClientesCom() {
            return false;
        }
        
        private bool ShouldSerializeAficClientesCOM() {
            return false;
        }
        
        private bool ShouldSerializeClientesRedes() {
            return false;
        }
        
        private bool ShouldSerializeCentros() {
            return false;
        }
        
        private bool ShouldSerializeCentrosRedes() {
            return false;
        }
        
        private bool ShouldSerializeBrickClientes() {
            return false;
        }
        
        private bool ShouldSerializeCPClientes() {
            return false;
        }
        
        private bool ShouldSerializeDelegadoBrick() {
            return false;
        }
        
        private bool ShouldSerializePresupuestos() {
            return false;
        }
        
        private bool ShouldSerializePedidos_Lin() {
            return false;
        }
        
        private bool ShouldSerializeAtencionescomerciales() {
            return false;
        }
        
        private bool ShouldSerializeRepActividadCab() {
            return false;
        }
        
        private bool ShouldSerializeRepActividadCli() {
            return false;
        }
        
        private bool ShouldSerializeRepActividadAten() {
            return false;
        }
        
        private bool ShouldSerializeRepActividadProxObj() {
            return false;
        }
        
        private bool ShouldSerializeRepActividadProm() {
            return false;
        }
        
        private bool ShouldSerializeRepActividadPed() {
            return false;
        }
        
        private bool ShouldSerializeRepActGAD() {
            return false;
        }
        
        private bool ShouldSerializeNotasGastos() {
            return false;
        }
        
        private bool ShouldSerializeNotasGastos_Lin() {
            return false;
        }
        
        private bool ShouldSerializeAtencionesNG() {
            return false;
        }
        
        private bool ShouldSerializeAccionesMarkClientes() {
            return false;
        }
        
        private bool ShouldSerializeClientesCOM() {
            return false;
        }
        
        private bool ShouldSerializeAgenda() {
            return false;
        }
        
        private bool ShouldSerializeCentrosClientesSAP() {
            return false;
        }
        
        private bool ShouldSerializeContactosClientesSAP() {
            return false;
        }
        
        private bool ShouldSerializeProdClientesCOM() {
            return false;
        }
        
        private bool ShouldSerializePedidos_Cab() {
            return false;
        }
        
        private bool ShouldSerializeCentrosClientesCOM() {
            return false;
        }
        
        private bool ShouldSerializeSolicitudGadget() {
            return false;
        }
        
        private bool ShouldSerializeAtencionesProductos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ClientesRowChangeEventHandler(object sender, ClientesRowChangeEvent e);
        
        public delegate void EspecClientesComRowChangeEventHandler(object sender, EspecClientesComRowChangeEvent e);
        
        public delegate void AficClientesCOMRowChangeEventHandler(object sender, AficClientesCOMRowChangeEvent e);
        
        public delegate void ClientesRedesRowChangeEventHandler(object sender, ClientesRedesRowChangeEvent e);
        
        public delegate void CentrosRowChangeEventHandler(object sender, CentrosRowChangeEvent e);
        
        public delegate void CentrosRedesRowChangeEventHandler(object sender, CentrosRedesRowChangeEvent e);
        
        public delegate void BrickClientesRowChangeEventHandler(object sender, BrickClientesRowChangeEvent e);
        
        public delegate void CPClientesRowChangeEventHandler(object sender, CPClientesRowChangeEvent e);
        
        public delegate void DelegadoBrickRowChangeEventHandler(object sender, DelegadoBrickRowChangeEvent e);
        
        public delegate void PresupuestosRowChangeEventHandler(object sender, PresupuestosRowChangeEvent e);
        
        public delegate void Pedidos_LinRowChangeEventHandler(object sender, Pedidos_LinRowChangeEvent e);
        
        public delegate void AtencionescomercialesRowChangeEventHandler(object sender, AtencionescomercialesRowChangeEvent e);
        
        public delegate void RepActividadCabRowChangeEventHandler(object sender, RepActividadCabRowChangeEvent e);
        
        public delegate void RepActividadCliRowChangeEventHandler(object sender, RepActividadCliRowChangeEvent e);
        
        public delegate void RepActividadAtenRowChangeEventHandler(object sender, RepActividadAtenRowChangeEvent e);
        
        public delegate void RepActividadProxObjRowChangeEventHandler(object sender, RepActividadProxObjRowChangeEvent e);
        
        public delegate void RepActividadPromRowChangeEventHandler(object sender, RepActividadPromRowChangeEvent e);
        
        public delegate void RepActividadPedRowChangeEventHandler(object sender, RepActividadPedRowChangeEvent e);
        
        public delegate void RepActGADRowChangeEventHandler(object sender, RepActGADRowChangeEvent e);
        
        public delegate void NotasGastosRowChangeEventHandler(object sender, NotasGastosRowChangeEvent e);
        
        public delegate void NotasGastos_LinRowChangeEventHandler(object sender, NotasGastos_LinRowChangeEvent e);
        
        public delegate void AtencionesNGRowChangeEventHandler(object sender, AtencionesNGRowChangeEvent e);
        
        public delegate void AccionesMarkClientesRowChangeEventHandler(object sender, AccionesMarkClientesRowChangeEvent e);
        
        public delegate void ClientesCOMRowChangeEventHandler(object sender, ClientesCOMRowChangeEvent e);
        
        public delegate void AgendaRowChangeEventHandler(object sender, AgendaRowChangeEvent e);
        
        public delegate void CentrosClientesSAPRowChangeEventHandler(object sender, CentrosClientesSAPRowChangeEvent e);
        
        public delegate void ContactosClientesSAPRowChangeEventHandler(object sender, ContactosClientesSAPRowChangeEvent e);
        
        public delegate void ProdClientesCOMRowChangeEventHandler(object sender, ProdClientesCOMRowChangeEvent e);
        
        public delegate void Pedidos_CabRowChangeEventHandler(object sender, Pedidos_CabRowChangeEvent e);
        
        public delegate void CentrosClientesCOMRowChangeEventHandler(object sender, CentrosClientesCOMRowChangeEvent e);
        
        public delegate void SolicitudGadgetRowChangeEventHandler(object sender, SolicitudGadgetRowChangeEvent e);
        
        public delegate void AtencionesProductosRowChangeEventHandler(object sender, AtencionesProductosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdCliente;
            
            private DataColumn columnsTipoCliente;
            
            private DataColumn columnsIdClienteTemp;
            
            private DataColumn columnsNombre;
            
            private DataColumn columnsApellidos1;
            
            private DataColumn columnsApellidos2;
            
            private DataColumn columnsTelefono;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal ClientesDataTable() : 
                    base("Clientes") {
                this.InitClass();
            }
            
            internal ClientesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdClienteColumn {
                get {
                    return this.columnsIdCliente;
                }
            }
            
            internal DataColumn sTipoClienteColumn {
                get {
                    return this.columnsTipoCliente;
                }
            }
            
            internal DataColumn sIdClienteTempColumn {
                get {
                    return this.columnsIdClienteTemp;
                }
            }
            
            internal DataColumn sNombreColumn {
                get {
                    return this.columnsNombre;
                }
            }
            
            internal DataColumn sApellidos1Column {
                get {
                    return this.columnsApellidos1;
                }
            }
            
            internal DataColumn sApellidos2Column {
                get {
                    return this.columnsApellidos2;
                }
            }
            
            internal DataColumn sTelefonoColumn {
                get {
                    return this.columnsTelefono;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public ClientesRow this[int index] {
                get {
                    return ((ClientesRow)(this.Rows[index]));
                }
            }
            
            public event ClientesRowChangeEventHandler ClientesRowChanged;
            
            public event ClientesRowChangeEventHandler ClientesRowChanging;
            
            public event ClientesRowChangeEventHandler ClientesRowDeleted;
            
            public event ClientesRowChangeEventHandler ClientesRowDeleting;
            
            public void AddClientesRow(ClientesRow row) {
                this.Rows.Add(row);
            }
            
            public ClientesRow AddClientesRow(int iIdCliente, string sIdCliente, string sTipoCliente, string sIdClienteTemp, string sNombre, string sApellidos1, string sApellidos2, string sTelefono, short iEstado, System.DateTime dFUM) {
                ClientesRow rowClientesRow = ((ClientesRow)(this.NewRow()));
                rowClientesRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdCliente,
                        sTipoCliente,
                        sIdClienteTemp,
                        sNombre,
                        sApellidos1,
                        sApellidos2,
                        sTelefono,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowClientesRow);
                return rowClientesRow;
            }
            
            public ClientesRow FindByiIdCliente(int iIdCliente) {
                return ((ClientesRow)(this.Rows.Find(new object[] {
                            iIdCliente})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ClientesDataTable cln = ((ClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ClientesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdCliente = this.Columns["sIdCliente"];
                this.columnsTipoCliente = this.Columns["sTipoCliente"];
                this.columnsIdClienteTemp = this.Columns["sIdClienteTemp"];
                this.columnsNombre = this.Columns["sNombre"];
                this.columnsApellidos1 = this.Columns["sApellidos1"];
                this.columnsApellidos2 = this.Columns["sApellidos2"];
                this.columnsTelefono = this.Columns["sTelefono"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdCliente = new DataColumn("sIdCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCliente);
                this.columnsTipoCliente = new DataColumn("sTipoCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoCliente);
                this.columnsIdClienteTemp = new DataColumn("sIdClienteTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdClienteTemp);
                this.columnsNombre = new DataColumn("sNombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombre);
                this.columnsApellidos1 = new DataColumn("sApellidos1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsApellidos1);
                this.columnsApellidos2 = new DataColumn("sApellidos2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsApellidos2);
                this.columnsTelefono = new DataColumn("sTelefono", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTelefono);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey17", new DataColumn[] {
                                this.columniIdCliente}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCliente.Unique = true;
                this.columnsIdCliente.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public ClientesRow NewClientesRow() {
                return ((ClientesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ClientesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ClientesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientesRowChanged != null)) {
                    this.ClientesRowChanged(this, new ClientesRowChangeEvent(((ClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientesRowChanging != null)) {
                    this.ClientesRowChanging(this, new ClientesRowChangeEvent(((ClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientesRowDeleted != null)) {
                    this.ClientesRowDeleted(this, new ClientesRowChangeEvent(((ClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientesRowDeleting != null)) {
                    this.ClientesRowDeleting(this, new ClientesRowChangeEvent(((ClientesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveClientesRow(ClientesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRow : DataRow {
            
            private ClientesDataTable tableClientes;
            
            internal ClientesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientes = ((ClientesDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableClientes.iIdClienteColumn]));
                }
                set {
                    this[this.tableClientes.iIdClienteColumn] = value;
                }
            }
            
            public string sIdCliente {
                get {
                    return ((string)(this[this.tableClientes.sIdClienteColumn]));
                }
                set {
                    this[this.tableClientes.sIdClienteColumn] = value;
                }
            }
            
            public string sTipoCliente {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sTipoClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sTipoClienteColumn] = value;
                }
            }
            
            public string sIdClienteTemp {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sIdClienteTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sIdClienteTempColumn] = value;
                }
            }
            
            public string sNombre {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sNombreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sNombreColumn] = value;
                }
            }
            
            public string sApellidos1 {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sApellidos1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sApellidos1Column] = value;
                }
            }
            
            public string sApellidos2 {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sApellidos2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sApellidos2Column] = value;
                }
            }
            
            public string sTelefono {
                get {
                    try {
                        return ((string)(this[this.tableClientes.sTelefonoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientes.sTelefonoColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableClientes.iEstadoColumn]));
                }
                set {
                    this[this.tableClientes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableClientes.dFUMColumn]));
                }
                set {
                    this[this.tableClientes.dFUMColumn] = value;
                }
            }
            
            public bool IssTipoClienteNull() {
                return this.IsNull(this.tableClientes.sTipoClienteColumn);
            }
            
            public void SetsTipoClienteNull() {
                this[this.tableClientes.sTipoClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdClienteTempNull() {
                return this.IsNull(this.tableClientes.sIdClienteTempColumn);
            }
            
            public void SetsIdClienteTempNull() {
                this[this.tableClientes.sIdClienteTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssNombreNull() {
                return this.IsNull(this.tableClientes.sNombreColumn);
            }
            
            public void SetsNombreNull() {
                this[this.tableClientes.sNombreColumn] = System.Convert.DBNull;
            }
            
            public bool IssApellidos1Null() {
                return this.IsNull(this.tableClientes.sApellidos1Column);
            }
            
            public void SetsApellidos1Null() {
                this[this.tableClientes.sApellidos1Column] = System.Convert.DBNull;
            }
            
            public bool IssApellidos2Null() {
                return this.IsNull(this.tableClientes.sApellidos2Column);
            }
            
            public void SetsApellidos2Null() {
                this[this.tableClientes.sApellidos2Column] = System.Convert.DBNull;
            }
            
            public bool IssTelefonoNull() {
                return this.IsNull(this.tableClientes.sTelefonoColumn);
            }
            
            public void SetsTelefonoNull() {
                this[this.tableClientes.sTelefonoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRowChangeEvent : EventArgs {
            
            private ClientesRow eventRow;
            
            private DataRowAction eventAction;
            
            public ClientesRowChangeEvent(ClientesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecClientesComDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdEspecialidad;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal EspecClientesComDataTable() : 
                    base("EspecClientesCom") {
                this.InitClass();
            }
            
            internal EspecClientesComDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdEspecialidadColumn {
                get {
                    return this.columnsIdEspecialidad;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public EspecClientesComRow this[int index] {
                get {
                    return ((EspecClientesComRow)(this.Rows[index]));
                }
            }
            
            public event EspecClientesComRowChangeEventHandler EspecClientesComRowChanged;
            
            public event EspecClientesComRowChangeEventHandler EspecClientesComRowChanging;
            
            public event EspecClientesComRowChangeEventHandler EspecClientesComRowDeleted;
            
            public event EspecClientesComRowChangeEventHandler EspecClientesComRowDeleting;
            
            public void AddEspecClientesComRow(EspecClientesComRow row) {
                this.Rows.Add(row);
            }
            
            public EspecClientesComRow AddEspecClientesComRow(int iIdCliente, string sIdEspecialidad, System.DateTime dFUM, short iEstado) {
                EspecClientesComRow rowEspecClientesComRow = ((EspecClientesComRow)(this.NewRow()));
                rowEspecClientesComRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdEspecialidad,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowEspecClientesComRow);
                return rowEspecClientesComRow;
            }
            
            public EspecClientesComRow FindByiIdClientesIdEspecialidad(int iIdCliente, string sIdEspecialidad) {
                return ((EspecClientesComRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdEspecialidad})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EspecClientesComDataTable cln = ((EspecClientesComDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EspecClientesComDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdEspecialidad = this.Columns["sIdEspecialidad"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdEspecialidad = new DataColumn("sIdEspecialidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEspecialidad);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey1", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdEspecialidad}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdEspecialidad.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public EspecClientesComRow NewEspecClientesComRow() {
                return ((EspecClientesComRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EspecClientesComRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EspecClientesComRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EspecClientesComRowChanged != null)) {
                    this.EspecClientesComRowChanged(this, new EspecClientesComRowChangeEvent(((EspecClientesComRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EspecClientesComRowChanging != null)) {
                    this.EspecClientesComRowChanging(this, new EspecClientesComRowChangeEvent(((EspecClientesComRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EspecClientesComRowDeleted != null)) {
                    this.EspecClientesComRowDeleted(this, new EspecClientesComRowChangeEvent(((EspecClientesComRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EspecClientesComRowDeleting != null)) {
                    this.EspecClientesComRowDeleting(this, new EspecClientesComRowChangeEvent(((EspecClientesComRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEspecClientesComRow(EspecClientesComRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecClientesComRow : DataRow {
            
            private EspecClientesComDataTable tableEspecClientesCom;
            
            internal EspecClientesComRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEspecClientesCom = ((EspecClientesComDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableEspecClientesCom.iIdClienteColumn]));
                }
                set {
                    this[this.tableEspecClientesCom.iIdClienteColumn] = value;
                }
            }
            
            public string sIdEspecialidad {
                get {
                    return ((string)(this[this.tableEspecClientesCom.sIdEspecialidadColumn]));
                }
                set {
                    this[this.tableEspecClientesCom.sIdEspecialidadColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableEspecClientesCom.dFUMColumn]));
                }
                set {
                    this[this.tableEspecClientesCom.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableEspecClientesCom.iEstadoColumn]));
                }
                set {
                    this[this.tableEspecClientesCom.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EspecClientesComRowChangeEvent : EventArgs {
            
            private EspecClientesComRow eventRow;
            
            private DataRowAction eventAction;
            
            public EspecClientesComRowChangeEvent(EspecClientesComRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EspecClientesComRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AficClientesCOMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdAficion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal AficClientesCOMDataTable() : 
                    base("AficClientesCOM") {
                this.InitClass();
            }
            
            internal AficClientesCOMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdAficionColumn {
                get {
                    return this.columnsIdAficion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public AficClientesCOMRow this[int index] {
                get {
                    return ((AficClientesCOMRow)(this.Rows[index]));
                }
            }
            
            public event AficClientesCOMRowChangeEventHandler AficClientesCOMRowChanged;
            
            public event AficClientesCOMRowChangeEventHandler AficClientesCOMRowChanging;
            
            public event AficClientesCOMRowChangeEventHandler AficClientesCOMRowDeleted;
            
            public event AficClientesCOMRowChangeEventHandler AficClientesCOMRowDeleting;
            
            public void AddAficClientesCOMRow(AficClientesCOMRow row) {
                this.Rows.Add(row);
            }
            
            public AficClientesCOMRow AddAficClientesCOMRow(int iIdCliente, string sIdAficion, System.DateTime dFUM, short iEstado) {
                AficClientesCOMRow rowAficClientesCOMRow = ((AficClientesCOMRow)(this.NewRow()));
                rowAficClientesCOMRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdAficion,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowAficClientesCOMRow);
                return rowAficClientesCOMRow;
            }
            
            public AficClientesCOMRow FindByiIdClientesIdAficion(int iIdCliente, string sIdAficion) {
                return ((AficClientesCOMRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdAficion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AficClientesCOMDataTable cln = ((AficClientesCOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AficClientesCOMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdAficion = this.Columns["sIdAficion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdAficion = new DataColumn("sIdAficion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAficion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey2", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdAficion}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdAficion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public AficClientesCOMRow NewAficClientesCOMRow() {
                return ((AficClientesCOMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AficClientesCOMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AficClientesCOMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AficClientesCOMRowChanged != null)) {
                    this.AficClientesCOMRowChanged(this, new AficClientesCOMRowChangeEvent(((AficClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AficClientesCOMRowChanging != null)) {
                    this.AficClientesCOMRowChanging(this, new AficClientesCOMRowChangeEvent(((AficClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AficClientesCOMRowDeleted != null)) {
                    this.AficClientesCOMRowDeleted(this, new AficClientesCOMRowChangeEvent(((AficClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AficClientesCOMRowDeleting != null)) {
                    this.AficClientesCOMRowDeleting(this, new AficClientesCOMRowChangeEvent(((AficClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAficClientesCOMRow(AficClientesCOMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AficClientesCOMRow : DataRow {
            
            private AficClientesCOMDataTable tableAficClientesCOM;
            
            internal AficClientesCOMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAficClientesCOM = ((AficClientesCOMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableAficClientesCOM.iIdClienteColumn]));
                }
                set {
                    this[this.tableAficClientesCOM.iIdClienteColumn] = value;
                }
            }
            
            public string sIdAficion {
                get {
                    return ((string)(this[this.tableAficClientesCOM.sIdAficionColumn]));
                }
                set {
                    this[this.tableAficClientesCOM.sIdAficionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableAficClientesCOM.dFUMColumn]));
                }
                set {
                    this[this.tableAficClientesCOM.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableAficClientesCOM.iEstadoColumn]));
                }
                set {
                    this[this.tableAficClientesCOM.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AficClientesCOMRowChangeEvent : EventArgs {
            
            private AficClientesCOMRow eventRow;
            
            private DataRowAction eventAction;
            
            public AficClientesCOMRowChangeEvent(AficClientesCOMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AficClientesCOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRedesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columnsIdClasificacion;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal ClientesRedesDataTable() : 
                    base("ClientesRedes") {
                this.InitClass();
            }
            
            internal ClientesRedesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn sIdClasificacionColumn {
                get {
                    return this.columnsIdClasificacion;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public ClientesRedesRow this[int index] {
                get {
                    return ((ClientesRedesRow)(this.Rows[index]));
                }
            }
            
            public event ClientesRedesRowChangeEventHandler ClientesRedesRowChanged;
            
            public event ClientesRedesRowChangeEventHandler ClientesRedesRowChanging;
            
            public event ClientesRedesRowChangeEventHandler ClientesRedesRowDeleted;
            
            public event ClientesRedesRowChangeEventHandler ClientesRedesRowDeleting;
            
            public void AddClientesRedesRow(ClientesRedesRow row) {
                this.Rows.Add(row);
            }
            
            public ClientesRedesRow AddClientesRedesRow(int iIdCliente, string sIdRed, string sIdClasificacion, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                ClientesRedesRow rowClientesRedesRow = ((ClientesRedesRow)(this.NewRow()));
                rowClientesRedesRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdRed,
                        sIdClasificacion,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowClientesRedesRow);
                return rowClientesRedesRow;
            }
            
            public ClientesRedesRow FindByiIdClientesIdReddFAR(int iIdCliente, string sIdRed, System.DateTime dFAR) {
                return ((ClientesRedesRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdRed,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ClientesRedesDataTable cln = ((ClientesRedesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ClientesRedesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columnsIdClasificacion = this.Columns["sIdClasificacion"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columnsIdClasificacion = new DataColumn("sIdClasificacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdClasificacion);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey3", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdRed,
                                this.columndFAR}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public ClientesRedesRow NewClientesRedesRow() {
                return ((ClientesRedesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ClientesRedesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ClientesRedesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientesRedesRowChanged != null)) {
                    this.ClientesRedesRowChanged(this, new ClientesRedesRowChangeEvent(((ClientesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientesRedesRowChanging != null)) {
                    this.ClientesRedesRowChanging(this, new ClientesRedesRowChangeEvent(((ClientesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientesRedesRowDeleted != null)) {
                    this.ClientesRedesRowDeleted(this, new ClientesRedesRowChangeEvent(((ClientesRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientesRedesRowDeleting != null)) {
                    this.ClientesRedesRowDeleting(this, new ClientesRedesRowChangeEvent(((ClientesRedesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveClientesRedesRow(ClientesRedesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRedesRow : DataRow {
            
            private ClientesRedesDataTable tableClientesRedes;
            
            internal ClientesRedesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientesRedes = ((ClientesRedesDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableClientesRedes.iIdClienteColumn]));
                }
                set {
                    this[this.tableClientesRedes.iIdClienteColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableClientesRedes.sIdRedColumn]));
                }
                set {
                    this[this.tableClientesRedes.sIdRedColumn] = value;
                }
            }
            
            public string sIdClasificacion {
                get {
                    try {
                        return ((string)(this[this.tableClientesRedes.sIdClasificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesRedes.sIdClasificacionColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableClientesRedes.dFARColumn]));
                }
                set {
                    this[this.tableClientesRedes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableClientesRedes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesRedes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableClientesRedes.iEstadoColumn]));
                }
                set {
                    this[this.tableClientesRedes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableClientesRedes.dFUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesRedes.dFUMColumn] = value;
                }
            }
            
            public bool IssIdClasificacionNull() {
                return this.IsNull(this.tableClientesRedes.sIdClasificacionColumn);
            }
            
            public void SetsIdClasificacionNull() {
                this[this.tableClientesRedes.sIdClasificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableClientesRedes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableClientesRedes.dFBRColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFUMNull() {
                return this.IsNull(this.tableClientesRedes.dFUMColumn);
            }
            
            public void SetdFUMNull() {
                this[this.tableClientesRedes.dFUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesRedesRowChangeEvent : EventArgs {
            
            private ClientesRedesRow eventRow;
            
            private DataRowAction eventAction;
            
            public ClientesRedesRowChangeEvent(ClientesRedesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ClientesRedesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCentro;
            
            private DataColumn columnsIdCentro;
            
            private DataColumn columnsIdCentroTemp;
            
            private DataColumn columnsIdTipoCentro;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columnsDireccion;
            
            private DataColumn columniIdPoblacion;
            
            private DataColumn columnsFax;
            
            private DataColumn columnsTelefono;
            
            private DataColumn columnsIdPolPrescripcion;
            
            private DataColumn columnsIdTipoClasificacion;
            
            private DataColumn columnsIdSistInformatico;
            
            private DataColumn columnbPactoPrescripcion;
            
            private DataColumn columnbVisitaColectiva;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal CentrosDataTable() : 
                    base("Centros") {
                this.InitClass();
            }
            
            internal CentrosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn sIdCentroColumn {
                get {
                    return this.columnsIdCentro;
                }
            }
            
            internal DataColumn sIdCentroTempColumn {
                get {
                    return this.columnsIdCentroTemp;
                }
            }
            
            internal DataColumn sIdTipoCentroColumn {
                get {
                    return this.columnsIdTipoCentro;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn sDireccionColumn {
                get {
                    return this.columnsDireccion;
                }
            }
            
            internal DataColumn iIdPoblacionColumn {
                get {
                    return this.columniIdPoblacion;
                }
            }
            
            internal DataColumn sFaxColumn {
                get {
                    return this.columnsFax;
                }
            }
            
            internal DataColumn sTelefonoColumn {
                get {
                    return this.columnsTelefono;
                }
            }
            
            internal DataColumn sIdPolPrescripcionColumn {
                get {
                    return this.columnsIdPolPrescripcion;
                }
            }
            
            internal DataColumn sIdTipoClasificacionColumn {
                get {
                    return this.columnsIdTipoClasificacion;
                }
            }
            
            internal DataColumn sIdSistInformaticoColumn {
                get {
                    return this.columnsIdSistInformatico;
                }
            }
            
            internal DataColumn bPactoPrescripcionColumn {
                get {
                    return this.columnbPactoPrescripcion;
                }
            }
            
            internal DataColumn bVisitaColectivaColumn {
                get {
                    return this.columnbVisitaColectiva;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public CentrosRow this[int index] {
                get {
                    return ((CentrosRow)(this.Rows[index]));
                }
            }
            
            public event CentrosRowChangeEventHandler CentrosRowChanged;
            
            public event CentrosRowChangeEventHandler CentrosRowChanging;
            
            public event CentrosRowChangeEventHandler CentrosRowDeleted;
            
            public event CentrosRowChangeEventHandler CentrosRowDeleting;
            
            public void AddCentrosRow(CentrosRow row) {
                this.Rows.Add(row);
            }
            
            public CentrosRow AddCentrosRow(
                        int iIdCentro, 
                        string sIdCentro, 
                        string sIdCentroTemp, 
                        string sIdTipoCentro, 
                        string sDescripcion, 
                        string sDireccion, 
                        int iIdPoblacion, 
                        string sFax, 
                        string sTelefono, 
                        string sIdPolPrescripcion, 
                        string sIdTipoClasificacion, 
                        string sIdSistInformatico, 
                        bool bPactoPrescripcion, 
                        bool bVisitaColectiva, 
                        System.DateTime dFUM, 
                        short iEstado) {
                CentrosRow rowCentrosRow = ((CentrosRow)(this.NewRow()));
                rowCentrosRow.ItemArray = new object[] {
                        iIdCentro,
                        sIdCentro,
                        sIdCentroTemp,
                        sIdTipoCentro,
                        sDescripcion,
                        sDireccion,
                        iIdPoblacion,
                        sFax,
                        sTelefono,
                        sIdPolPrescripcion,
                        sIdTipoClasificacion,
                        sIdSistInformatico,
                        bPactoPrescripcion,
                        bVisitaColectiva,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowCentrosRow);
                return rowCentrosRow;
            }
            
            public CentrosRow FindByiIdCentro(int iIdCentro) {
                return ((CentrosRow)(this.Rows.Find(new object[] {
                            iIdCentro})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CentrosDataTable cln = ((CentrosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CentrosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columnsIdCentro = this.Columns["sIdCentro"];
                this.columnsIdCentroTemp = this.Columns["sIdCentroTemp"];
                this.columnsIdTipoCentro = this.Columns["sIdTipoCentro"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columnsDireccion = this.Columns["sDireccion"];
                this.columniIdPoblacion = this.Columns["iIdPoblacion"];
                this.columnsFax = this.Columns["sFax"];
                this.columnsTelefono = this.Columns["sTelefono"];
                this.columnsIdPolPrescripcion = this.Columns["sIdPolPrescripcion"];
                this.columnsIdTipoClasificacion = this.Columns["sIdTipoClasificacion"];
                this.columnsIdSistInformatico = this.Columns["sIdSistInformatico"];
                this.columnbPactoPrescripcion = this.Columns["bPactoPrescripcion"];
                this.columnbVisitaColectiva = this.Columns["bVisitaColectiva"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columnsIdCentro = new DataColumn("sIdCentro", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentro);
                this.columnsIdCentroTemp = new DataColumn("sIdCentroTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentroTemp);
                this.columnsIdTipoCentro = new DataColumn("sIdTipoCentro", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoCentro);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columnsDireccion = new DataColumn("sDireccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDireccion);
                this.columniIdPoblacion = new DataColumn("iIdPoblacion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdPoblacion);
                this.columnsFax = new DataColumn("sFax", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsFax);
                this.columnsTelefono = new DataColumn("sTelefono", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTelefono);
                this.columnsIdPolPrescripcion = new DataColumn("sIdPolPrescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPolPrescripcion);
                this.columnsIdTipoClasificacion = new DataColumn("sIdTipoClasificacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoClasificacion);
                this.columnsIdSistInformatico = new DataColumn("sIdSistInformatico", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdSistInformatico);
                this.columnbPactoPrescripcion = new DataColumn("bPactoPrescripcion", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbPactoPrescripcion);
                this.columnbVisitaColectiva = new DataColumn("bVisitaColectiva", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbVisitaColectiva);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey5", new DataColumn[] {
                                this.columniIdCentro}, true));
                this.columniIdCentro.AllowDBNull = false;
                this.columniIdCentro.Unique = true;
                this.columnsIdCentro.AllowDBNull = false;
                this.columnsIdCentroTemp.AllowDBNull = false;
                this.columnsDescripcion.AllowDBNull = false;
                this.columnsDireccion.AllowDBNull = false;
                this.columniIdPoblacion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public CentrosRow NewCentrosRow() {
                return ((CentrosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CentrosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CentrosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosRowChanged != null)) {
                    this.CentrosRowChanged(this, new CentrosRowChangeEvent(((CentrosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosRowChanging != null)) {
                    this.CentrosRowChanging(this, new CentrosRowChangeEvent(((CentrosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosRowDeleted != null)) {
                    this.CentrosRowDeleted(this, new CentrosRowChangeEvent(((CentrosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosRowDeleting != null)) {
                    this.CentrosRowDeleting(this, new CentrosRowChangeEvent(((CentrosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCentrosRow(CentrosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRow : DataRow {
            
            private CentrosDataTable tableCentros;
            
            internal CentrosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentros = ((CentrosDataTable)(this.Table));
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableCentros.iIdCentroColumn]));
                }
                set {
                    this[this.tableCentros.iIdCentroColumn] = value;
                }
            }
            
            public string sIdCentro {
                get {
                    return ((string)(this[this.tableCentros.sIdCentroColumn]));
                }
                set {
                    this[this.tableCentros.sIdCentroColumn] = value;
                }
            }
            
            public string sIdCentroTemp {
                get {
                    return ((string)(this[this.tableCentros.sIdCentroTempColumn]));
                }
                set {
                    this[this.tableCentros.sIdCentroTempColumn] = value;
                }
            }
            
            public string sIdTipoCentro {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sIdTipoCentroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sIdTipoCentroColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    return ((string)(this[this.tableCentros.sDescripcionColumn]));
                }
                set {
                    this[this.tableCentros.sDescripcionColumn] = value;
                }
            }
            
            public string sDireccion {
                get {
                    return ((string)(this[this.tableCentros.sDireccionColumn]));
                }
                set {
                    this[this.tableCentros.sDireccionColumn] = value;
                }
            }
            
            public int iIdPoblacion {
                get {
                    return ((int)(this[this.tableCentros.iIdPoblacionColumn]));
                }
                set {
                    this[this.tableCentros.iIdPoblacionColumn] = value;
                }
            }
            
            public string sFax {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sFaxColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sFaxColumn] = value;
                }
            }
            
            public string sTelefono {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sTelefonoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sTelefonoColumn] = value;
                }
            }
            
            public string sIdPolPrescripcion {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sIdPolPrescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sIdPolPrescripcionColumn] = value;
                }
            }
            
            public string sIdTipoClasificacion {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sIdTipoClasificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sIdTipoClasificacionColumn] = value;
                }
            }
            
            public string sIdSistInformatico {
                get {
                    try {
                        return ((string)(this[this.tableCentros.sIdSistInformaticoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.sIdSistInformaticoColumn] = value;
                }
            }
            
            public bool bPactoPrescripcion {
                get {
                    try {
                        return ((bool)(this[this.tableCentros.bPactoPrescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.bPactoPrescripcionColumn] = value;
                }
            }
            
            public bool bVisitaColectiva {
                get {
                    try {
                        return ((bool)(this[this.tableCentros.bVisitaColectivaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentros.bVisitaColectivaColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableCentros.dFUMColumn]));
                }
                set {
                    this[this.tableCentros.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCentros.iEstadoColumn]));
                }
                set {
                    this[this.tableCentros.iEstadoColumn] = value;
                }
            }
            
            public bool IssIdTipoCentroNull() {
                return this.IsNull(this.tableCentros.sIdTipoCentroColumn);
            }
            
            public void SetsIdTipoCentroNull() {
                this[this.tableCentros.sIdTipoCentroColumn] = System.Convert.DBNull;
            }
            
            public bool IssFaxNull() {
                return this.IsNull(this.tableCentros.sFaxColumn);
            }
            
            public void SetsFaxNull() {
                this[this.tableCentros.sFaxColumn] = System.Convert.DBNull;
            }
            
            public bool IssTelefonoNull() {
                return this.IsNull(this.tableCentros.sTelefonoColumn);
            }
            
            public void SetsTelefonoNull() {
                this[this.tableCentros.sTelefonoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdPolPrescripcionNull() {
                return this.IsNull(this.tableCentros.sIdPolPrescripcionColumn);
            }
            
            public void SetsIdPolPrescripcionNull() {
                this[this.tableCentros.sIdPolPrescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoClasificacionNull() {
                return this.IsNull(this.tableCentros.sIdTipoClasificacionColumn);
            }
            
            public void SetsIdTipoClasificacionNull() {
                this[this.tableCentros.sIdTipoClasificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdSistInformaticoNull() {
                return this.IsNull(this.tableCentros.sIdSistInformaticoColumn);
            }
            
            public void SetsIdSistInformaticoNull() {
                this[this.tableCentros.sIdSistInformaticoColumn] = System.Convert.DBNull;
            }
            
            public bool IsbPactoPrescripcionNull() {
                return this.IsNull(this.tableCentros.bPactoPrescripcionColumn);
            }
            
            public void SetbPactoPrescripcionNull() {
                this[this.tableCentros.bPactoPrescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsbVisitaColectivaNull() {
                return this.IsNull(this.tableCentros.bVisitaColectivaColumn);
            }
            
            public void SetbVisitaColectivaNull() {
                this[this.tableCentros.bVisitaColectivaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRowChangeEvent : EventArgs {
            
            private CentrosRow eventRow;
            
            private DataRowAction eventAction;
            
            public CentrosRowChangeEvent(CentrosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CentrosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRedesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCentro;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal CentrosRedesDataTable() : 
                    base("CentrosRedes") {
                this.InitClass();
            }
            
            internal CentrosRedesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public CentrosRedesRow this[int index] {
                get {
                    return ((CentrosRedesRow)(this.Rows[index]));
                }
            }
            
            public event CentrosRedesRowChangeEventHandler CentrosRedesRowChanged;
            
            public event CentrosRedesRowChangeEventHandler CentrosRedesRowChanging;
            
            public event CentrosRedesRowChangeEventHandler CentrosRedesRowDeleted;
            
            public event CentrosRedesRowChangeEventHandler CentrosRedesRowDeleting;
            
            public void AddCentrosRedesRow(CentrosRedesRow row) {
                this.Rows.Add(row);
            }
            
            public CentrosRedesRow AddCentrosRedesRow(int iIdCentro, string sIdRed, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                CentrosRedesRow rowCentrosRedesRow = ((CentrosRedesRow)(this.NewRow()));
                rowCentrosRedesRow.ItemArray = new object[] {
                        iIdCentro,
                        sIdRed,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowCentrosRedesRow);
                return rowCentrosRedesRow;
            }
            
            public CentrosRedesRow FindByiIdCentrosIdReddFAR(int iIdCentro, string sIdRed, System.DateTime dFAR) {
                return ((CentrosRedesRow)(this.Rows.Find(new object[] {
                            iIdCentro,
                            sIdRed,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CentrosRedesDataTable cln = ((CentrosRedesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CentrosRedesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey6", new DataColumn[] {
                                this.columniIdCentro,
                                this.columnsIdRed,
                                this.columndFAR}, true));
                this.columniIdCentro.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public CentrosRedesRow NewCentrosRedesRow() {
                return ((CentrosRedesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CentrosRedesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CentrosRedesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosRedesRowChanged != null)) {
                    this.CentrosRedesRowChanged(this, new CentrosRedesRowChangeEvent(((CentrosRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosRedesRowChanging != null)) {
                    this.CentrosRedesRowChanging(this, new CentrosRedesRowChangeEvent(((CentrosRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosRedesRowDeleted != null)) {
                    this.CentrosRedesRowDeleted(this, new CentrosRedesRowChangeEvent(((CentrosRedesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosRedesRowDeleting != null)) {
                    this.CentrosRedesRowDeleting(this, new CentrosRedesRowChangeEvent(((CentrosRedesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCentrosRedesRow(CentrosRedesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRedesRow : DataRow {
            
            private CentrosRedesDataTable tableCentrosRedes;
            
            internal CentrosRedesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentrosRedes = ((CentrosRedesDataTable)(this.Table));
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableCentrosRedes.iIdCentroColumn]));
                }
                set {
                    this[this.tableCentrosRedes.iIdCentroColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableCentrosRedes.sIdRedColumn]));
                }
                set {
                    this[this.tableCentrosRedes.sIdRedColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableCentrosRedes.dFARColumn]));
                }
                set {
                    this[this.tableCentrosRedes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosRedes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosRedes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCentrosRedes.iEstadoColumn]));
                }
                set {
                    this[this.tableCentrosRedes.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosRedes.dFUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosRedes.dFUMColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableCentrosRedes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableCentrosRedes.dFBRColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFUMNull() {
                return this.IsNull(this.tableCentrosRedes.dFUMColumn);
            }
            
            public void SetdFUMNull() {
                this[this.tableCentrosRedes.dFUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosRedesRowChangeEvent : EventArgs {
            
            private CentrosRedesRow eventRow;
            
            private DataRowAction eventAction;
            
            public CentrosRedesRowChangeEvent(CentrosRedesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CentrosRedesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickClientesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdBrick;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            internal BrickClientesDataTable() : 
                    base("BrickClientes") {
                this.InitClass();
            }
            
            internal BrickClientesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdBrickColumn {
                get {
                    return this.columnsIdBrick;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public BrickClientesRow this[int index] {
                get {
                    return ((BrickClientesRow)(this.Rows[index]));
                }
            }
            
            public event BrickClientesRowChangeEventHandler BrickClientesRowChanged;
            
            public event BrickClientesRowChangeEventHandler BrickClientesRowChanging;
            
            public event BrickClientesRowChangeEventHandler BrickClientesRowDeleted;
            
            public event BrickClientesRowChangeEventHandler BrickClientesRowDeleting;
            
            public void AddBrickClientesRow(BrickClientesRow row) {
                this.Rows.Add(row);
            }
            
            public BrickClientesRow AddBrickClientesRow(int iIdCliente, string sIdBrick, System.DateTime dFAR, System.DateTime dFBR, short iEstado) {
                BrickClientesRow rowBrickClientesRow = ((BrickClientesRow)(this.NewRow()));
                rowBrickClientesRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdBrick,
                        dFAR,
                        dFBR,
                        iEstado};
                this.Rows.Add(rowBrickClientesRow);
                return rowBrickClientesRow;
            }
            
            public BrickClientesRow FindByiIdClientesIdBrickdFAR(int iIdCliente, string sIdBrick, System.DateTime dFAR) {
                return ((BrickClientesRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdBrick,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                BrickClientesDataTable cln = ((BrickClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new BrickClientesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdBrick = this.Columns["sIdBrick"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdBrick = new DataColumn("sIdBrick", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdBrick);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey9", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdBrick,
                                this.columndFAR}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdBrick.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public BrickClientesRow NewBrickClientesRow() {
                return ((BrickClientesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new BrickClientesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(BrickClientesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BrickClientesRowChanged != null)) {
                    this.BrickClientesRowChanged(this, new BrickClientesRowChangeEvent(((BrickClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BrickClientesRowChanging != null)) {
                    this.BrickClientesRowChanging(this, new BrickClientesRowChangeEvent(((BrickClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BrickClientesRowDeleted != null)) {
                    this.BrickClientesRowDeleted(this, new BrickClientesRowChangeEvent(((BrickClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BrickClientesRowDeleting != null)) {
                    this.BrickClientesRowDeleting(this, new BrickClientesRowChangeEvent(((BrickClientesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveBrickClientesRow(BrickClientesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickClientesRow : DataRow {
            
            private BrickClientesDataTable tableBrickClientes;
            
            internal BrickClientesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableBrickClientes = ((BrickClientesDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableBrickClientes.iIdClienteColumn]));
                }
                set {
                    this[this.tableBrickClientes.iIdClienteColumn] = value;
                }
            }
            
            public string sIdBrick {
                get {
                    return ((string)(this[this.tableBrickClientes.sIdBrickColumn]));
                }
                set {
                    this[this.tableBrickClientes.sIdBrickColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableBrickClientes.dFARColumn]));
                }
                set {
                    this[this.tableBrickClientes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableBrickClientes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableBrickClientes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableBrickClientes.iEstadoColumn]));
                }
                set {
                    this[this.tableBrickClientes.iEstadoColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableBrickClientes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableBrickClientes.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BrickClientesRowChangeEvent : EventArgs {
            
            private BrickClientesRow eventRow;
            
            private DataRowAction eventAction;
            
            public BrickClientesRowChangeEvent(BrickClientesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public BrickClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CPClientesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsCodPostal;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            internal CPClientesDataTable() : 
                    base("CPClientes") {
                this.InitClass();
            }
            
            internal CPClientesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sCodPostalColumn {
                get {
                    return this.columnsCodPostal;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public CPClientesRow this[int index] {
                get {
                    return ((CPClientesRow)(this.Rows[index]));
                }
            }
            
            public event CPClientesRowChangeEventHandler CPClientesRowChanged;
            
            public event CPClientesRowChangeEventHandler CPClientesRowChanging;
            
            public event CPClientesRowChangeEventHandler CPClientesRowDeleted;
            
            public event CPClientesRowChangeEventHandler CPClientesRowDeleting;
            
            public void AddCPClientesRow(CPClientesRow row) {
                this.Rows.Add(row);
            }
            
            public CPClientesRow AddCPClientesRow(int iIdCliente, string sCodPostal, System.DateTime dFAR, System.DateTime dFBR, short iEstado) {
                CPClientesRow rowCPClientesRow = ((CPClientesRow)(this.NewRow()));
                rowCPClientesRow.ItemArray = new object[] {
                        iIdCliente,
                        sCodPostal,
                        dFAR,
                        dFBR,
                        iEstado};
                this.Rows.Add(rowCPClientesRow);
                return rowCPClientesRow;
            }
            
            public CPClientesRow FindByiIdClientesCodPostaldFAR(int iIdCliente, string sCodPostal, System.DateTime dFAR) {
                return ((CPClientesRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sCodPostal,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CPClientesDataTable cln = ((CPClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CPClientesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsCodPostal = this.Columns["sCodPostal"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsCodPostal = new DataColumn("sCodPostal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCodPostal);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey10", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsCodPostal,
                                this.columndFAR}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsCodPostal.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public CPClientesRow NewCPClientesRow() {
                return ((CPClientesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CPClientesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CPClientesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CPClientesRowChanged != null)) {
                    this.CPClientesRowChanged(this, new CPClientesRowChangeEvent(((CPClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CPClientesRowChanging != null)) {
                    this.CPClientesRowChanging(this, new CPClientesRowChangeEvent(((CPClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CPClientesRowDeleted != null)) {
                    this.CPClientesRowDeleted(this, new CPClientesRowChangeEvent(((CPClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CPClientesRowDeleting != null)) {
                    this.CPClientesRowDeleting(this, new CPClientesRowChangeEvent(((CPClientesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCPClientesRow(CPClientesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CPClientesRow : DataRow {
            
            private CPClientesDataTable tableCPClientes;
            
            internal CPClientesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCPClientes = ((CPClientesDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableCPClientes.iIdClienteColumn]));
                }
                set {
                    this[this.tableCPClientes.iIdClienteColumn] = value;
                }
            }
            
            public string sCodPostal {
                get {
                    return ((string)(this[this.tableCPClientes.sCodPostalColumn]));
                }
                set {
                    this[this.tableCPClientes.sCodPostalColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableCPClientes.dFARColumn]));
                }
                set {
                    this[this.tableCPClientes.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCPClientes.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPClientes.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCPClientes.iEstadoColumn]));
                }
                set {
                    this[this.tableCPClientes.iEstadoColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableCPClientes.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableCPClientes.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CPClientesRowChangeEvent : EventArgs {
            
            private CPClientesRow eventRow;
            
            private DataRowAction eventAction;
            
            public CPClientesRowChangeEvent(CPClientesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CPClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadoBrickDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdBrick;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            internal DelegadoBrickDataTable() : 
                    base("DelegadoBrick") {
                this.InitClass();
            }
            
            internal DelegadoBrickDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdBrickColumn {
                get {
                    return this.columnsIdBrick;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public DelegadoBrickRow this[int index] {
                get {
                    return ((DelegadoBrickRow)(this.Rows[index]));
                }
            }
            
            public event DelegadoBrickRowChangeEventHandler DelegadoBrickRowChanged;
            
            public event DelegadoBrickRowChangeEventHandler DelegadoBrickRowChanging;
            
            public event DelegadoBrickRowChangeEventHandler DelegadoBrickRowDeleted;
            
            public event DelegadoBrickRowChangeEventHandler DelegadoBrickRowDeleting;
            
            public void AddDelegadoBrickRow(DelegadoBrickRow row) {
                this.Rows.Add(row);
            }
            
            public DelegadoBrickRow AddDelegadoBrickRow(int iIdDelegado, string sIdBrick, System.DateTime dFAR, System.DateTime dFBR, short iEstado) {
                DelegadoBrickRow rowDelegadoBrickRow = ((DelegadoBrickRow)(this.NewRow()));
                rowDelegadoBrickRow.ItemArray = new object[] {
                        iIdDelegado,
                        sIdBrick,
                        dFAR,
                        dFBR,
                        iEstado};
                this.Rows.Add(rowDelegadoBrickRow);
                return rowDelegadoBrickRow;
            }
            
            public DelegadoBrickRow FindByiIdDelegadosIdBrickdFAR(int iIdDelegado, string sIdBrick, System.DateTime dFAR) {
                return ((DelegadoBrickRow)(this.Rows.Find(new object[] {
                            iIdDelegado,
                            sIdBrick,
                            dFAR})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DelegadoBrickDataTable cln = ((DelegadoBrickDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DelegadoBrickDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdBrick = this.Columns["sIdBrick"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdBrick = new DataColumn("sIdBrick", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdBrick);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey11", new DataColumn[] {
                                this.columniIdDelegado,
                                this.columnsIdBrick,
                                this.columndFAR}, true));
                this.columniIdDelegado.AllowDBNull = false;
                this.columnsIdBrick.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public DelegadoBrickRow NewDelegadoBrickRow() {
                return ((DelegadoBrickRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DelegadoBrickRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DelegadoBrickRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DelegadoBrickRowChanged != null)) {
                    this.DelegadoBrickRowChanged(this, new DelegadoBrickRowChangeEvent(((DelegadoBrickRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DelegadoBrickRowChanging != null)) {
                    this.DelegadoBrickRowChanging(this, new DelegadoBrickRowChangeEvent(((DelegadoBrickRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DelegadoBrickRowDeleted != null)) {
                    this.DelegadoBrickRowDeleted(this, new DelegadoBrickRowChangeEvent(((DelegadoBrickRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DelegadoBrickRowDeleting != null)) {
                    this.DelegadoBrickRowDeleting(this, new DelegadoBrickRowChangeEvent(((DelegadoBrickRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDelegadoBrickRow(DelegadoBrickRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadoBrickRow : DataRow {
            
            private DelegadoBrickDataTable tableDelegadoBrick;
            
            internal DelegadoBrickRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDelegadoBrick = ((DelegadoBrickDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableDelegadoBrick.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdBrick {
                get {
                    return ((string)(this[this.tableDelegadoBrick.sIdBrickColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.sIdBrickColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableDelegadoBrick.dFARColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDelegadoBrick.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDelegadoBrick.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableDelegadoBrick.iEstadoColumn]));
                }
                set {
                    this[this.tableDelegadoBrick.iEstadoColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableDelegadoBrick.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableDelegadoBrick.dFBRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DelegadoBrickRowChangeEvent : EventArgs {
            
            private DelegadoBrickRow eventRow;
            
            private DataRowAction eventAction;
            
            public DelegadoBrickRowChangeEvent(DelegadoBrickRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DelegadoBrickRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PresupuestosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsTipoPresupuesto;
            
            private DataColumn columniIdPeriodo;
            
            private DataColumn columnfImporte;
            
            private DataColumn columnfImporteActual;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal PresupuestosDataTable() : 
                    base("Presupuestos") {
                this.InitClass();
            }
            
            internal PresupuestosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sTipoPresupuestoColumn {
                get {
                    return this.columnsTipoPresupuesto;
                }
            }
            
            internal DataColumn iIdPeriodoColumn {
                get {
                    return this.columniIdPeriodo;
                }
            }
            
            internal DataColumn fImporteColumn {
                get {
                    return this.columnfImporte;
                }
            }
            
            internal DataColumn fImporteActualColumn {
                get {
                    return this.columnfImporteActual;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public PresupuestosRow this[int index] {
                get {
                    return ((PresupuestosRow)(this.Rows[index]));
                }
            }
            
            public event PresupuestosRowChangeEventHandler PresupuestosRowChanged;
            
            public event PresupuestosRowChangeEventHandler PresupuestosRowChanging;
            
            public event PresupuestosRowChangeEventHandler PresupuestosRowDeleted;
            
            public event PresupuestosRowChangeEventHandler PresupuestosRowDeleting;
            
            public void AddPresupuestosRow(PresupuestosRow row) {
                this.Rows.Add(row);
            }
            
            public PresupuestosRow AddPresupuestosRow(int iIdDelegado, string sTipoPresupuesto, int iIdPeriodo, System.Double fImporte, System.Double fImporteActual, System.DateTime dFUM, short iEstado) {
                PresupuestosRow rowPresupuestosRow = ((PresupuestosRow)(this.NewRow()));
                rowPresupuestosRow.ItemArray = new object[] {
                        iIdDelegado,
                        sTipoPresupuesto,
                        iIdPeriodo,
                        fImporte,
                        fImporteActual,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowPresupuestosRow);
                return rowPresupuestosRow;
            }
            
            public PresupuestosRow FindByiIdDelegadosTipoPresupuestoiIdPeriodo(int iIdDelegado, string sTipoPresupuesto, int iIdPeriodo) {
                return ((PresupuestosRow)(this.Rows.Find(new object[] {
                            iIdDelegado,
                            sTipoPresupuesto,
                            iIdPeriodo})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PresupuestosDataTable cln = ((PresupuestosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PresupuestosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsTipoPresupuesto = this.Columns["sTipoPresupuesto"];
                this.columniIdPeriodo = this.Columns["iIdPeriodo"];
                this.columnfImporte = this.Columns["fImporte"];
                this.columnfImporteActual = this.Columns["fImporteActual"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsTipoPresupuesto = new DataColumn("sTipoPresupuesto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoPresupuesto);
                this.columniIdPeriodo = new DataColumn("iIdPeriodo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdPeriodo);
                this.columnfImporte = new DataColumn("fImporte", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporte);
                this.columnfImporteActual = new DataColumn("fImporteActual", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporteActual);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey12", new DataColumn[] {
                                this.columniIdDelegado,
                                this.columnsTipoPresupuesto,
                                this.columniIdPeriodo}, true));
                this.columniIdDelegado.AllowDBNull = false;
                this.columnsTipoPresupuesto.AllowDBNull = false;
                this.columniIdPeriodo.AllowDBNull = false;
                this.columnfImporte.AllowDBNull = false;
                this.columnfImporteActual.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public PresupuestosRow NewPresupuestosRow() {
                return ((PresupuestosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PresupuestosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PresupuestosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PresupuestosRowChanged != null)) {
                    this.PresupuestosRowChanged(this, new PresupuestosRowChangeEvent(((PresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PresupuestosRowChanging != null)) {
                    this.PresupuestosRowChanging(this, new PresupuestosRowChangeEvent(((PresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PresupuestosRowDeleted != null)) {
                    this.PresupuestosRowDeleted(this, new PresupuestosRowChangeEvent(((PresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PresupuestosRowDeleting != null)) {
                    this.PresupuestosRowDeleting(this, new PresupuestosRowChangeEvent(((PresupuestosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePresupuestosRow(PresupuestosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PresupuestosRow : DataRow {
            
            private PresupuestosDataTable tablePresupuestos;
            
            internal PresupuestosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePresupuestos = ((PresupuestosDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tablePresupuestos.iIdDelegadoColumn]));
                }
                set {
                    this[this.tablePresupuestos.iIdDelegadoColumn] = value;
                }
            }
            
            public string sTipoPresupuesto {
                get {
                    return ((string)(this[this.tablePresupuestos.sTipoPresupuestoColumn]));
                }
                set {
                    this[this.tablePresupuestos.sTipoPresupuestoColumn] = value;
                }
            }
            
            public int iIdPeriodo {
                get {
                    return ((int)(this[this.tablePresupuestos.iIdPeriodoColumn]));
                }
                set {
                    this[this.tablePresupuestos.iIdPeriodoColumn] = value;
                }
            }
            
            public System.Double fImporte {
                get {
                    return ((System.Double)(this[this.tablePresupuestos.fImporteColumn]));
                }
                set {
                    this[this.tablePresupuestos.fImporteColumn] = value;
                }
            }
            
            public System.Double fImporteActual {
                get {
                    return ((System.Double)(this[this.tablePresupuestos.fImporteActualColumn]));
                }
                set {
                    this[this.tablePresupuestos.fImporteActualColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tablePresupuestos.dFUMColumn]));
                }
                set {
                    this[this.tablePresupuestos.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tablePresupuestos.iEstadoColumn]));
                }
                set {
                    this[this.tablePresupuestos.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PresupuestosRowChangeEvent : EventArgs {
            
            private PresupuestosRow eventRow;
            
            private DataRowAction eventAction;
            
            public PresupuestosRowChangeEvent(PresupuestosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PresupuestosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdPedido;
            
            private DataColumn columniIdLinea;
            
            private DataColumn columnsIdMaterial;
            
            private DataColumn columniCantidad;
            
            private DataColumn columnfPrecio;
            
            private DataColumn columnsIdTipoPosicion;
            
            private DataColumn columnbEntregado;
            
            private DataColumn columndFechaPreferente;
            
            private DataColumn columnsCentro;
            
            private DataColumn columnsAlmacen;
            
            private DataColumn columnfDescuento;
            
            internal Pedidos_LinDataTable() : 
                    base("Pedidos_Lin") {
                this.InitClass();
            }
            
            internal Pedidos_LinDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            internal DataColumn iIdLineaColumn {
                get {
                    return this.columniIdLinea;
                }
            }
            
            internal DataColumn sIdMaterialColumn {
                get {
                    return this.columnsIdMaterial;
                }
            }
            
            internal DataColumn iCantidadColumn {
                get {
                    return this.columniCantidad;
                }
            }
            
            internal DataColumn fPrecioColumn {
                get {
                    return this.columnfPrecio;
                }
            }
            
            internal DataColumn sIdTipoPosicionColumn {
                get {
                    return this.columnsIdTipoPosicion;
                }
            }
            
            internal DataColumn bEntregadoColumn {
                get {
                    return this.columnbEntregado;
                }
            }
            
            internal DataColumn dFechaPreferenteColumn {
                get {
                    return this.columndFechaPreferente;
                }
            }
            
            internal DataColumn sCentroColumn {
                get {
                    return this.columnsCentro;
                }
            }
            
            internal DataColumn sAlmacenColumn {
                get {
                    return this.columnsAlmacen;
                }
            }
            
            internal DataColumn fDescuentoColumn {
                get {
                    return this.columnfDescuento;
                }
            }
            
            public Pedidos_LinRow this[int index] {
                get {
                    return ((Pedidos_LinRow)(this.Rows[index]));
                }
            }
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowChanged;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowChanging;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowDeleted;
            
            public event Pedidos_LinRowChangeEventHandler Pedidos_LinRowDeleting;
            
            public void AddPedidos_LinRow(Pedidos_LinRow row) {
                this.Rows.Add(row);
            }
            
            public Pedidos_LinRow AddPedidos_LinRow(Pedidos_CabRow parentPedidos_CabRowByPedidos_CabPedidos_Lin, int iIdLinea, string sIdMaterial, int iCantidad, System.Double fPrecio, string sIdTipoPosicion, bool bEntregado, System.DateTime dFechaPreferente, string sCentro, string sAlmacen, System.Double fDescuento) {
                Pedidos_LinRow rowPedidos_LinRow = ((Pedidos_LinRow)(this.NewRow()));
                rowPedidos_LinRow.ItemArray = new object[] {
                        parentPedidos_CabRowByPedidos_CabPedidos_Lin[0],
                        iIdLinea,
                        sIdMaterial,
                        iCantidad,
                        fPrecio,
                        sIdTipoPosicion,
                        bEntregado,
                        dFechaPreferente,
                        sCentro,
                        sAlmacen,
                        fDescuento};
                this.Rows.Add(rowPedidos_LinRow);
                return rowPedidos_LinRow;
            }
            
            public Pedidos_LinRow FindBysIdPedidoiIdLineasIdMaterial(string sIdPedido, int iIdLinea, string sIdMaterial) {
                return ((Pedidos_LinRow)(this.Rows.Find(new object[] {
                            sIdPedido,
                            iIdLinea,
                            sIdMaterial})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pedidos_LinDataTable cln = ((Pedidos_LinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pedidos_LinDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdPedido = this.Columns["sIdPedido"];
                this.columniIdLinea = this.Columns["iIdLinea"];
                this.columnsIdMaterial = this.Columns["sIdMaterial"];
                this.columniCantidad = this.Columns["iCantidad"];
                this.columnfPrecio = this.Columns["fPrecio"];
                this.columnsIdTipoPosicion = this.Columns["sIdTipoPosicion"];
                this.columnbEntregado = this.Columns["bEntregado"];
                this.columndFechaPreferente = this.Columns["dFechaPreferente"];
                this.columnsCentro = this.Columns["sCentro"];
                this.columnsAlmacen = this.Columns["sAlmacen"];
                this.columnfDescuento = this.Columns["fDescuento"];
            }
            
            private void InitClass() {
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.columniIdLinea = new DataColumn("iIdLinea", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdLinea);
                this.columnsIdMaterial = new DataColumn("sIdMaterial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdMaterial);
                this.columniCantidad = new DataColumn("iCantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidad);
                this.columnfPrecio = new DataColumn("fPrecio", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPrecio);
                this.columnsIdTipoPosicion = new DataColumn("sIdTipoPosicion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoPosicion);
                this.columnbEntregado = new DataColumn("bEntregado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEntregado);
                this.columndFechaPreferente = new DataColumn("dFechaPreferente", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPreferente);
                this.columnsCentro = new DataColumn("sCentro", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCentro);
                this.columnsAlmacen = new DataColumn("sAlmacen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsAlmacen);
                this.columnfDescuento = new DataColumn("fDescuento", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfDescuento);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey18", new DataColumn[] {
                                this.columnsIdPedido,
                                this.columniIdLinea,
                                this.columnsIdMaterial}, true));
                this.columnsIdPedido.AllowDBNull = false;
                this.columniIdLinea.AllowDBNull = false;
                this.columnsIdMaterial.AllowDBNull = false;
                this.columniCantidad.AllowDBNull = false;
                this.columnfPrecio.AllowDBNull = false;
                this.columnsIdTipoPosicion.AllowDBNull = false;
                this.columnbEntregado.AllowDBNull = false;
                this.columndFechaPreferente.AllowDBNull = false;
                this.columnsCentro.AllowDBNull = false;
                this.columnsAlmacen.AllowDBNull = false;
                this.columnfDescuento.AllowDBNull = false;
            }
            
            public Pedidos_LinRow NewPedidos_LinRow() {
                return ((Pedidos_LinRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pedidos_LinRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pedidos_LinRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pedidos_LinRowChanged != null)) {
                    this.Pedidos_LinRowChanged(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pedidos_LinRowChanging != null)) {
                    this.Pedidos_LinRowChanging(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pedidos_LinRowDeleted != null)) {
                    this.Pedidos_LinRowDeleted(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pedidos_LinRowDeleting != null)) {
                    this.Pedidos_LinRowDeleting(this, new Pedidos_LinRowChangeEvent(((Pedidos_LinRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePedidos_LinRow(Pedidos_LinRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinRow : DataRow {
            
            private Pedidos_LinDataTable tablePedidos_Lin;
            
            internal Pedidos_LinRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePedidos_Lin = ((Pedidos_LinDataTable)(this.Table));
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sIdPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sIdPedidoColumn] = value;
                }
            }
            
            public int iIdLinea {
                get {
                    return ((int)(this[this.tablePedidos_Lin.iIdLineaColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.iIdLineaColumn] = value;
                }
            }
            
            public string sIdMaterial {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sIdMaterialColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sIdMaterialColumn] = value;
                }
            }
            
            public int iCantidad {
                get {
                    return ((int)(this[this.tablePedidos_Lin.iCantidadColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.iCantidadColumn] = value;
                }
            }
            
            public System.Double fPrecio {
                get {
                    return ((System.Double)(this[this.tablePedidos_Lin.fPrecioColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.fPrecioColumn] = value;
                }
            }
            
            public string sIdTipoPosicion {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sIdTipoPosicionColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sIdTipoPosicionColumn] = value;
                }
            }
            
            public bool bEntregado {
                get {
                    return ((bool)(this[this.tablePedidos_Lin.bEntregadoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.bEntregadoColumn] = value;
                }
            }
            
            public System.DateTime dFechaPreferente {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Lin.dFechaPreferenteColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.dFechaPreferenteColumn] = value;
                }
            }
            
            public string sCentro {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sCentroColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sCentroColumn] = value;
                }
            }
            
            public string sAlmacen {
                get {
                    return ((string)(this[this.tablePedidos_Lin.sAlmacenColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.sAlmacenColumn] = value;
                }
            }
            
            public System.Double fDescuento {
                get {
                    return ((System.Double)(this[this.tablePedidos_Lin.fDescuentoColumn]));
                }
                set {
                    this[this.tablePedidos_Lin.fDescuentoColumn] = value;
                }
            }
            
            public Pedidos_CabRow Pedidos_CabRow {
                get {
                    return ((Pedidos_CabRow)(this.GetParentRow(this.Table.ParentRelations["Pedidos_CabPedidos_Lin"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Pedidos_CabPedidos_Lin"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_LinRowChangeEvent : EventArgs {
            
            private Pedidos_LinRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pedidos_LinRowChangeEvent(Pedidos_LinRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pedidos_LinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionescomercialesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdAtencion;
            
            private DataColumn columnsIdAtencionTemp;
            
            private DataColumn columnsIdAtencion;
            
            private DataColumn columnsDescripcion;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnsIdTipoAtencion;
            
            private DataColumn columnbBolsaViaje;
            
            private DataColumn columnbLiqNotaGastos;
            
            private DataColumn columnsIdCentroCoste;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdEstAtencion;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnfImportePrev;
            
            private DataColumn columnfImporteReal;
            
            private DataColumn columndFechaCreacion;
            
            private DataColumn columndFechaPrev;
            
            private DataColumn columndFechaAprob1;
            
            private DataColumn columndFechaAprob2;
            
            private DataColumn columndFechaReal;
            
            private DataColumn columndFechaLiq;
            
            private DataColumn columndFechaCierre;
            
            private DataColumn columnsUsuAprob1;
            
            private DataColumn columnsUsuAprob2;
            
            private DataColumn columnsUsuLiq;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFechaAprob3;
            
            private DataColumn columndFechaAprob4;
            
            private DataColumn columnsUsuAprob3;
            
            private DataColumn columnsUsuAprob4;
            
            internal AtencionescomercialesDataTable() : 
                    base("Atencionescomerciales") {
                this.InitClass();
            }
            
            internal AtencionescomercialesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdAtencionColumn {
                get {
                    return this.columniIdAtencion;
                }
            }
            
            internal DataColumn sIdAtencionTempColumn {
                get {
                    return this.columnsIdAtencionTemp;
                }
            }
            
            internal DataColumn sIdAtencionColumn {
                get {
                    return this.columnsIdAtencion;
                }
            }
            
            internal DataColumn sDescripcionColumn {
                get {
                    return this.columnsDescripcion;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn sIdTipoAtencionColumn {
                get {
                    return this.columnsIdTipoAtencion;
                }
            }
            
            internal DataColumn bBolsaViajeColumn {
                get {
                    return this.columnbBolsaViaje;
                }
            }
            
            internal DataColumn bLiqNotaGastosColumn {
                get {
                    return this.columnbLiqNotaGastos;
                }
            }
            
            internal DataColumn sIdCentroCosteColumn {
                get {
                    return this.columnsIdCentroCoste;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdEstAtencionColumn {
                get {
                    return this.columnsIdEstAtencion;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn fImportePrevColumn {
                get {
                    return this.columnfImportePrev;
                }
            }
            
            internal DataColumn fImporteRealColumn {
                get {
                    return this.columnfImporteReal;
                }
            }
            
            internal DataColumn dFechaCreacionColumn {
                get {
                    return this.columndFechaCreacion;
                }
            }
            
            internal DataColumn dFechaPrevColumn {
                get {
                    return this.columndFechaPrev;
                }
            }
            
            internal DataColumn dFechaAprob1Column {
                get {
                    return this.columndFechaAprob1;
                }
            }
            
            internal DataColumn dFechaAprob2Column {
                get {
                    return this.columndFechaAprob2;
                }
            }
            
            internal DataColumn dFechaRealColumn {
                get {
                    return this.columndFechaReal;
                }
            }
            
            internal DataColumn dFechaLiqColumn {
                get {
                    return this.columndFechaLiq;
                }
            }
            
            internal DataColumn dFechaCierreColumn {
                get {
                    return this.columndFechaCierre;
                }
            }
            
            internal DataColumn sUsuAprob1Column {
                get {
                    return this.columnsUsuAprob1;
                }
            }
            
            internal DataColumn sUsuAprob2Column {
                get {
                    return this.columnsUsuAprob2;
                }
            }
            
            internal DataColumn sUsuLiqColumn {
                get {
                    return this.columnsUsuLiq;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFechaAprob3Column {
                get {
                    return this.columndFechaAprob3;
                }
            }
            
            internal DataColumn dFechaAprob4Column {
                get {
                    return this.columndFechaAprob4;
                }
            }
            
            internal DataColumn sUsuAprob3Column {
                get {
                    return this.columnsUsuAprob3;
                }
            }
            
            internal DataColumn sUsuAprob4Column {
                get {
                    return this.columnsUsuAprob4;
                }
            }
            
            public AtencionescomercialesRow this[int index] {
                get {
                    return ((AtencionescomercialesRow)(this.Rows[index]));
                }
            }
            
            public event AtencionescomercialesRowChangeEventHandler AtencionescomercialesRowChanged;
            
            public event AtencionescomercialesRowChangeEventHandler AtencionescomercialesRowChanging;
            
            public event AtencionescomercialesRowChangeEventHandler AtencionescomercialesRowDeleted;
            
            public event AtencionescomercialesRowChangeEventHandler AtencionescomercialesRowDeleting;
            
            public void AddAtencionescomercialesRow(AtencionescomercialesRow row) {
                this.Rows.Add(row);
            }
            
            public AtencionescomercialesRow AddAtencionescomercialesRow(
                        int iIdAtencion, 
                        string sIdAtencionTemp, 
                        string sIdAtencion, 
                        string sDescripcion, 
                        string tObservaciones, 
                        string sIdTipoAtencion, 
                        bool bBolsaViaje, 
                        bool bLiqNotaGastos, 
                        string sIdCentroCoste, 
                        int iIdDelegado, 
                        string sIdEstAtencion, 
                        int iIdCliente, 
                        System.Double fImportePrev, 
                        System.Double fImporteReal, 
                        System.DateTime dFechaCreacion, 
                        System.DateTime dFechaPrev, 
                        System.DateTime dFechaAprob1, 
                        System.DateTime dFechaAprob2, 
                        System.DateTime dFechaReal, 
                        System.DateTime dFechaLiq, 
                        System.DateTime dFechaCierre, 
                        string sUsuAprob1, 
                        string sUsuAprob2, 
                        string sUsuLiq, 
                        System.DateTime dFUM, 
                        short iEstado, 
                        System.DateTime dFechaAprob3, 
                        System.DateTime dFechaAprob4, 
                        string sUsuAprob3, 
                        string sUsuAprob4) {
                AtencionescomercialesRow rowAtencionescomercialesRow = ((AtencionescomercialesRow)(this.NewRow()));
                rowAtencionescomercialesRow.ItemArray = new object[] {
                        iIdAtencion,
                        sIdAtencionTemp,
                        sIdAtencion,
                        sDescripcion,
                        tObservaciones,
                        sIdTipoAtencion,
                        bBolsaViaje,
                        bLiqNotaGastos,
                        sIdCentroCoste,
                        iIdDelegado,
                        sIdEstAtencion,
                        iIdCliente,
                        fImportePrev,
                        fImporteReal,
                        dFechaCreacion,
                        dFechaPrev,
                        dFechaAprob1,
                        dFechaAprob2,
                        dFechaReal,
                        dFechaLiq,
                        dFechaCierre,
                        sUsuAprob1,
                        sUsuAprob2,
                        sUsuLiq,
                        dFUM,
                        iEstado,
                        dFechaAprob3,
                        dFechaAprob4,
                        sUsuAprob3,
                        sUsuAprob4};
                this.Rows.Add(rowAtencionescomercialesRow);
                return rowAtencionescomercialesRow;
            }
            
            public AtencionescomercialesRow FindByiIdAtencion(int iIdAtencion) {
                return ((AtencionescomercialesRow)(this.Rows.Find(new object[] {
                            iIdAtencion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AtencionescomercialesDataTable cln = ((AtencionescomercialesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AtencionescomercialesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdAtencion = this.Columns["iIdAtencion"];
                this.columnsIdAtencionTemp = this.Columns["sIdAtencionTemp"];
                this.columnsIdAtencion = this.Columns["sIdAtencion"];
                this.columnsDescripcion = this.Columns["sDescripcion"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnsIdTipoAtencion = this.Columns["sIdTipoAtencion"];
                this.columnbBolsaViaje = this.Columns["bBolsaViaje"];
                this.columnbLiqNotaGastos = this.Columns["bLiqNotaGastos"];
                this.columnsIdCentroCoste = this.Columns["sIdCentroCoste"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdEstAtencion = this.Columns["sIdEstAtencion"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnfImportePrev = this.Columns["fImportePrev"];
                this.columnfImporteReal = this.Columns["fImporteReal"];
                this.columndFechaCreacion = this.Columns["dFechaCreacion"];
                this.columndFechaPrev = this.Columns["dFechaPrev"];
                this.columndFechaAprob1 = this.Columns["dFechaAprob1"];
                this.columndFechaAprob2 = this.Columns["dFechaAprob2"];
                this.columndFechaReal = this.Columns["dFechaReal"];
                this.columndFechaLiq = this.Columns["dFechaLiq"];
                this.columndFechaCierre = this.Columns["dFechaCierre"];
                this.columnsUsuAprob1 = this.Columns["sUsuAprob1"];
                this.columnsUsuAprob2 = this.Columns["sUsuAprob2"];
                this.columnsUsuLiq = this.Columns["sUsuLiq"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFechaAprob3 = this.Columns["dFechaAprob3"];
                this.columndFechaAprob4 = this.Columns["dFechaAprob4"];
                this.columnsUsuAprob3 = this.Columns["sUsuAprob3"];
                this.columnsUsuAprob4 = this.Columns["sUsuAprob4"];
            }
            
            private void InitClass() {
                this.columniIdAtencion = new DataColumn("iIdAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAtencion);
                this.columnsIdAtencionTemp = new DataColumn("sIdAtencionTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAtencionTemp);
                this.columnsIdAtencion = new DataColumn("sIdAtencion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAtencion);
                this.columnsDescripcion = new DataColumn("sDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDescripcion);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnsIdTipoAtencion = new DataColumn("sIdTipoAtencion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoAtencion);
                this.columnbBolsaViaje = new DataColumn("bBolsaViaje", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbBolsaViaje);
                this.columnbLiqNotaGastos = new DataColumn("bLiqNotaGastos", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbLiqNotaGastos);
                this.columnsIdCentroCoste = new DataColumn("sIdCentroCoste", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentroCoste);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdEstAtencion = new DataColumn("sIdEstAtencion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdEstAtencion);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnfImportePrev = new DataColumn("fImportePrev", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImportePrev);
                this.columnfImporteReal = new DataColumn("fImporteReal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporteReal);
                this.columndFechaCreacion = new DataColumn("dFechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaCreacion);
                this.columndFechaPrev = new DataColumn("dFechaPrev", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPrev);
                this.columndFechaAprob1 = new DataColumn("dFechaAprob1", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob1);
                this.columndFechaAprob2 = new DataColumn("dFechaAprob2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob2);
                this.columndFechaReal = new DataColumn("dFechaReal", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaReal);
                this.columndFechaLiq = new DataColumn("dFechaLiq", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaLiq);
                this.columndFechaCierre = new DataColumn("dFechaCierre", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaCierre);
                this.columnsUsuAprob1 = new DataColumn("sUsuAprob1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuAprob1);
                this.columnsUsuAprob2 = new DataColumn("sUsuAprob2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuAprob2);
                this.columnsUsuLiq = new DataColumn("sUsuLiq", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuLiq);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFechaAprob3 = new DataColumn("dFechaAprob3", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob3);
                this.columndFechaAprob4 = new DataColumn("dFechaAprob4", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob4);
                this.columnsUsuAprob3 = new DataColumn("sUsuAprob3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuAprob3);
                this.columnsUsuAprob4 = new DataColumn("sUsuAprob4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuAprob4);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey14", new DataColumn[] {
                                this.columniIdAtencion}, true));
                this.columniIdAtencion.AllowDBNull = false;
                this.columniIdAtencion.Unique = true;
                this.columnsIdAtencionTemp.AllowDBNull = false;
                this.columnsIdAtencion.AllowDBNull = false;
                this.columnbBolsaViaje.AllowDBNull = false;
                this.columnbLiqNotaGastos.AllowDBNull = false;
                this.columnfImportePrev.AllowDBNull = false;
                this.columndFechaCreacion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public AtencionescomercialesRow NewAtencionescomercialesRow() {
                return ((AtencionescomercialesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AtencionescomercialesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AtencionescomercialesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AtencionescomercialesRowChanged != null)) {
                    this.AtencionescomercialesRowChanged(this, new AtencionescomercialesRowChangeEvent(((AtencionescomercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AtencionescomercialesRowChanging != null)) {
                    this.AtencionescomercialesRowChanging(this, new AtencionescomercialesRowChangeEvent(((AtencionescomercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AtencionescomercialesRowDeleted != null)) {
                    this.AtencionescomercialesRowDeleted(this, new AtencionescomercialesRowChangeEvent(((AtencionescomercialesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AtencionescomercialesRowDeleting != null)) {
                    this.AtencionescomercialesRowDeleting(this, new AtencionescomercialesRowChangeEvent(((AtencionescomercialesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAtencionescomercialesRow(AtencionescomercialesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionescomercialesRow : DataRow {
            
            private AtencionescomercialesDataTable tableAtencionescomerciales;
            
            internal AtencionescomercialesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAtencionescomerciales = ((AtencionescomercialesDataTable)(this.Table));
            }
            
            public int iIdAtencion {
                get {
                    return ((int)(this[this.tableAtencionescomerciales.iIdAtencionColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.iIdAtencionColumn] = value;
                }
            }
            
            public string sIdAtencionTemp {
                get {
                    return ((string)(this[this.tableAtencionescomerciales.sIdAtencionTempColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.sIdAtencionTempColumn] = value;
                }
            }
            
            public string sIdAtencion {
                get {
                    return ((string)(this[this.tableAtencionescomerciales.sIdAtencionColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.sIdAtencionColumn] = value;
                }
            }
            
            public string sDescripcion {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sDescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sDescripcionColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.tObservacionesColumn] = value;
                }
            }
            
            public string sIdTipoAtencion {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sIdTipoAtencionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sIdTipoAtencionColumn] = value;
                }
            }
            
            public bool bBolsaViaje {
                get {
                    return ((bool)(this[this.tableAtencionescomerciales.bBolsaViajeColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.bBolsaViajeColumn] = value;
                }
            }
            
            public bool bLiqNotaGastos {
                get {
                    return ((bool)(this[this.tableAtencionescomerciales.bLiqNotaGastosColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.bLiqNotaGastosColumn] = value;
                }
            }
            
            public string sIdCentroCoste {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sIdCentroCosteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sIdCentroCosteColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    try {
                        return ((int)(this[this.tableAtencionescomerciales.iIdDelegadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdEstAtencion {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sIdEstAtencionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sIdEstAtencionColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    try {
                        return ((int)(this[this.tableAtencionescomerciales.iIdClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.iIdClienteColumn] = value;
                }
            }
            
            public System.Double fImportePrev {
                get {
                    return ((System.Double)(this[this.tableAtencionescomerciales.fImportePrevColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.fImportePrevColumn] = value;
                }
            }
            
            public System.Double fImporteReal {
                get {
                    try {
                        return ((System.Double)(this[this.tableAtencionescomerciales.fImporteRealColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.fImporteRealColumn] = value;
                }
            }
            
            public System.DateTime dFechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaCreacionColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaCreacionColumn] = value;
                }
            }
            
            public System.DateTime dFechaPrev {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaPrevColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaPrevColumn] = value;
                }
            }
            
            public System.DateTime dFechaAprob1 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaAprob1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaAprob1Column] = value;
                }
            }
            
            public System.DateTime dFechaAprob2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaAprob2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaAprob2Column] = value;
                }
            }
            
            public System.DateTime dFechaReal {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaRealColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaRealColumn] = value;
                }
            }
            
            public System.DateTime dFechaLiq {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaLiqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaLiqColumn] = value;
                }
            }
            
            public System.DateTime dFechaCierre {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaCierreColumn] = value;
                }
            }
            
            public string sUsuAprob1 {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sUsuAprob1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sUsuAprob1Column] = value;
                }
            }
            
            public string sUsuAprob2 {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sUsuAprob2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sUsuAprob2Column] = value;
                }
            }
            
            public string sUsuLiq {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sUsuLiqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sUsuLiqColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableAtencionescomerciales.dFUMColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableAtencionescomerciales.iEstadoColumn]));
                }
                set {
                    this[this.tableAtencionescomerciales.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFechaAprob3 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaAprob3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaAprob3Column] = value;
                }
            }
            
            public System.DateTime dFechaAprob4 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAtencionescomerciales.dFechaAprob4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.dFechaAprob4Column] = value;
                }
            }
            
            public string sUsuAprob3 {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sUsuAprob3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sUsuAprob3Column] = value;
                }
            }
            
            public string sUsuAprob4 {
                get {
                    try {
                        return ((string)(this[this.tableAtencionescomerciales.sUsuAprob4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionescomerciales.sUsuAprob4Column] = value;
                }
            }
            
            public bool IssDescripcionNull() {
                return this.IsNull(this.tableAtencionescomerciales.sDescripcionColumn);
            }
            
            public void SetsDescripcionNull() {
                this[this.tableAtencionescomerciales.sDescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableAtencionescomerciales.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableAtencionescomerciales.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoAtencionNull() {
                return this.IsNull(this.tableAtencionescomerciales.sIdTipoAtencionColumn);
            }
            
            public void SetsIdTipoAtencionNull() {
                this[this.tableAtencionescomerciales.sIdTipoAtencionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdCentroCosteNull() {
                return this.IsNull(this.tableAtencionescomerciales.sIdCentroCosteColumn);
            }
            
            public void SetsIdCentroCosteNull() {
                this[this.tableAtencionescomerciales.sIdCentroCosteColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdDelegadoNull() {
                return this.IsNull(this.tableAtencionescomerciales.iIdDelegadoColumn);
            }
            
            public void SetiIdDelegadoNull() {
                this[this.tableAtencionescomerciales.iIdDelegadoColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdEstAtencionNull() {
                return this.IsNull(this.tableAtencionescomerciales.sIdEstAtencionColumn);
            }
            
            public void SetsIdEstAtencionNull() {
                this[this.tableAtencionescomerciales.sIdEstAtencionColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdClienteNull() {
                return this.IsNull(this.tableAtencionescomerciales.iIdClienteColumn);
            }
            
            public void SetiIdClienteNull() {
                this[this.tableAtencionescomerciales.iIdClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IsfImporteRealNull() {
                return this.IsNull(this.tableAtencionescomerciales.fImporteRealColumn);
            }
            
            public void SetfImporteRealNull() {
                this[this.tableAtencionescomerciales.fImporteRealColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaPrevNull() {
                return this.IsNull(this.tableAtencionescomerciales.dFechaPrevColumn);
            }
            
            public void SetdFechaPrevNull() {
                this[this.tableAtencionescomerciales.dFechaPrevColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaAprob1Null() {
                return this.IsNull(this.tableAtencionescomerciales.dFechaAprob1Column);
            }
            
            public void SetdFechaAprob1Null() {
                this[this.tableAtencionescomerciales.dFechaAprob1Column] = System.Convert.DBNull;
            }
            
            public bool IsdFechaAprob2Null() {
                return this.IsNull(this.tableAtencionescomerciales.dFechaAprob2Column);
            }
            
            public void SetdFechaAprob2Null() {
                this[this.tableAtencionescomerciales.dFechaAprob2Column] = System.Convert.DBNull;
            }
            
            public bool IsdFechaRealNull() {
                return this.IsNull(this.tableAtencionescomerciales.dFechaRealColumn);
            }
            
            public void SetdFechaRealNull() {
                this[this.tableAtencionescomerciales.dFechaRealColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaLiqNull() {
                return this.IsNull(this.tableAtencionescomerciales.dFechaLiqColumn);
            }
            
            public void SetdFechaLiqNull() {
                this[this.tableAtencionescomerciales.dFechaLiqColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaCierreNull() {
                return this.IsNull(this.tableAtencionescomerciales.dFechaCierreColumn);
            }
            
            public void SetdFechaCierreNull() {
                this[this.tableAtencionescomerciales.dFechaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IssUsuAprob1Null() {
                return this.IsNull(this.tableAtencionescomerciales.sUsuAprob1Column);
            }
            
            public void SetsUsuAprob1Null() {
                this[this.tableAtencionescomerciales.sUsuAprob1Column] = System.Convert.DBNull;
            }
            
            public bool IssUsuAprob2Null() {
                return this.IsNull(this.tableAtencionescomerciales.sUsuAprob2Column);
            }
            
            public void SetsUsuAprob2Null() {
                this[this.tableAtencionescomerciales.sUsuAprob2Column] = System.Convert.DBNull;
            }
            
            public bool IssUsuLiqNull() {
                return this.IsNull(this.tableAtencionescomerciales.sUsuLiqColumn);
            }
            
            public void SetsUsuLiqNull() {
                this[this.tableAtencionescomerciales.sUsuLiqColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaAprob3Null() {
                return this.IsNull(this.tableAtencionescomerciales.dFechaAprob3Column);
            }
            
            public void SetdFechaAprob3Null() {
                this[this.tableAtencionescomerciales.dFechaAprob3Column] = System.Convert.DBNull;
            }
            
            public bool IsdFechaAprob4Null() {
                return this.IsNull(this.tableAtencionescomerciales.dFechaAprob4Column);
            }
            
            public void SetdFechaAprob4Null() {
                this[this.tableAtencionescomerciales.dFechaAprob4Column] = System.Convert.DBNull;
            }
            
            public bool IssUsuAprob3Null() {
                return this.IsNull(this.tableAtencionescomerciales.sUsuAprob3Column);
            }
            
            public void SetsUsuAprob3Null() {
                this[this.tableAtencionescomerciales.sUsuAprob3Column] = System.Convert.DBNull;
            }
            
            public bool IssUsuAprob4Null() {
                return this.IsNull(this.tableAtencionescomerciales.sUsuAprob4Column);
            }
            
            public void SetsUsuAprob4Null() {
                this[this.tableAtencionescomerciales.sUsuAprob4Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionescomercialesRowChangeEvent : EventArgs {
            
            private AtencionescomercialesRow eventRow;
            
            private DataRowAction eventAction;
            
            public AtencionescomercialesRowChangeEvent(AtencionescomercialesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AtencionescomercialesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCabDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdReportTemp;
            
            private DataColumn columnsTipoRActividad;
            
            private DataColumn columnsIdTipoCliente;
            
            private DataColumn columniIdCentro;
            
            private DataColumn columndFecha;
            
            private DataColumn columniHorario;
            
            private DataColumn columntObjetivo;
            
            private DataColumn columntProxObjetivo;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnbPlanificacion;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal RepActividadCabDataTable() : 
                    base("RepActividadCab") {
                this.InitClass();
            }
            
            internal RepActividadCabDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdReportTempColumn {
                get {
                    return this.columnsIdReportTemp;
                }
            }
            
            internal DataColumn sTipoRActividadColumn {
                get {
                    return this.columnsTipoRActividad;
                }
            }
            
            internal DataColumn sIdTipoClienteColumn {
                get {
                    return this.columnsIdTipoCliente;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            internal DataColumn iHorarioColumn {
                get {
                    return this.columniHorario;
                }
            }
            
            internal DataColumn tObjetivoColumn {
                get {
                    return this.columntObjetivo;
                }
            }
            
            internal DataColumn tProxObjetivoColumn {
                get {
                    return this.columntProxObjetivo;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn bPlanificacionColumn {
                get {
                    return this.columnbPlanificacion;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public RepActividadCabRow this[int index] {
                get {
                    return ((RepActividadCabRow)(this.Rows[index]));
                }
            }
            
            public event RepActividadCabRowChangeEventHandler RepActividadCabRowChanged;
            
            public event RepActividadCabRowChangeEventHandler RepActividadCabRowChanging;
            
            public event RepActividadCabRowChangeEventHandler RepActividadCabRowDeleted;
            
            public event RepActividadCabRowChangeEventHandler RepActividadCabRowDeleting;
            
            public void AddRepActividadCabRow(RepActividadCabRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividadCabRow AddRepActividadCabRow(int iIdReport, int iIdDelegado, string sIdReportTemp, string sTipoRActividad, string sIdTipoCliente, int iIdCentro, System.DateTime dFecha, string iHorario, string tObjetivo, string tProxObjetivo, string tObservaciones, short bPlanificacion, System.DateTime dFUM, short iEstado) {
                RepActividadCabRow rowRepActividadCabRow = ((RepActividadCabRow)(this.NewRow()));
                rowRepActividadCabRow.ItemArray = new object[] {
                        iIdReport,
                        iIdDelegado,
                        sIdReportTemp,
                        sTipoRActividad,
                        sIdTipoCliente,
                        iIdCentro,
                        dFecha,
                        iHorario,
                        tObjetivo,
                        tProxObjetivo,
                        tObservaciones,
                        bPlanificacion,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowRepActividadCabRow);
                return rowRepActividadCabRow;
            }
            
            public RepActividadCabRow FindByiIdReport(int iIdReport) {
                return ((RepActividadCabRow)(this.Rows.Find(new object[] {
                            iIdReport})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividadCabDataTable cln = ((RepActividadCabDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividadCabDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdReportTemp = this.Columns["sIdReportTemp"];
                this.columnsTipoRActividad = this.Columns["sTipoRActividad"];
                this.columnsIdTipoCliente = this.Columns["sIdTipoCliente"];
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columndFecha = this.Columns["dFecha"];
                this.columniHorario = this.Columns["iHorario"];
                this.columntObjetivo = this.Columns["tObjetivo"];
                this.columntProxObjetivo = this.Columns["tProxObjetivo"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnbPlanificacion = this.Columns["bPlanificacion"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdReportTemp = new DataColumn("sIdReportTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdReportTemp);
                this.columnsTipoRActividad = new DataColumn("sTipoRActividad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoRActividad);
                this.columnsIdTipoCliente = new DataColumn("sIdTipoCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoCliente);
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.columniHorario = new DataColumn("iHorario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniHorario);
                this.columntObjetivo = new DataColumn("tObjetivo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObjetivo);
                this.columntProxObjetivo = new DataColumn("tProxObjetivo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObjetivo);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnbPlanificacion = new DataColumn("bPlanificacion", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbPlanificacion);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteReportKey", new DataColumn[] {
                                this.columniIdReport}, true));
                this.columniIdReport.AllowDBNull = false;
                this.columniIdReport.Unique = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columndFecha.AllowDBNull = false;
                this.columntObjetivo.ReadOnly = true;
                this.columntProxObjetivo.ReadOnly = true;
                this.columntObservaciones.ReadOnly = true;
                this.columnbPlanificacion.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public RepActividadCabRow NewRepActividadCabRow() {
                return ((RepActividadCabRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividadCabRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividadCabRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividadCabRowChanged != null)) {
                    this.RepActividadCabRowChanged(this, new RepActividadCabRowChangeEvent(((RepActividadCabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividadCabRowChanging != null)) {
                    this.RepActividadCabRowChanging(this, new RepActividadCabRowChangeEvent(((RepActividadCabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividadCabRowDeleted != null)) {
                    this.RepActividadCabRowDeleted(this, new RepActividadCabRowChangeEvent(((RepActividadCabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividadCabRowDeleting != null)) {
                    this.RepActividadCabRowDeleting(this, new RepActividadCabRowChangeEvent(((RepActividadCabRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividadCabRow(RepActividadCabRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCabRow : DataRow {
            
            private RepActividadCabDataTable tableRepActividadCab;
            
            internal RepActividadCabRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividadCab = ((RepActividadCabDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividadCab.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividadCab.iIdReportColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableRepActividadCab.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableRepActividadCab.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdReportTemp {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCab.sIdReportTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCab.sIdReportTempColumn] = value;
                }
            }
            
            public string sTipoRActividad {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCab.sTipoRActividadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCab.sTipoRActividadColumn] = value;
                }
            }
            
            public string sIdTipoCliente {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCab.sIdTipoClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCab.sIdTipoClienteColumn] = value;
                }
            }
            
            public int iIdCentro {
                get {
                    try {
                        return ((int)(this[this.tableRepActividadCab.iIdCentroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCab.iIdCentroColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableRepActividadCab.dFechaColumn]));
                }
                set {
                    this[this.tableRepActividadCab.dFechaColumn] = value;
                }
            }
            
            public string iHorario {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCab.iHorarioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCab.iHorarioColumn] = value;
                }
            }
            
            public string tObjetivo {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCab.tObjetivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCab.tObjetivoColumn] = value;
                }
            }
            
            public string tProxObjetivo {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCab.tProxObjetivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCab.tProxObjetivoColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCab.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCab.tObservacionesColumn] = value;
                }
            }
            
            public short bPlanificacion {
                get {
                    return ((short)(this[this.tableRepActividadCab.bPlanificacionColumn]));
                }
                set {
                    this[this.tableRepActividadCab.bPlanificacionColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableRepActividadCab.dFUMColumn]));
                }
                set {
                    this[this.tableRepActividadCab.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableRepActividadCab.iEstadoColumn]));
                }
                set {
                    this[this.tableRepActividadCab.iEstadoColumn] = value;
                }
            }
            
            public bool IssIdReportTempNull() {
                return this.IsNull(this.tableRepActividadCab.sIdReportTempColumn);
            }
            
            public void SetsIdReportTempNull() {
                this[this.tableRepActividadCab.sIdReportTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssTipoRActividadNull() {
                return this.IsNull(this.tableRepActividadCab.sTipoRActividadColumn);
            }
            
            public void SetsTipoRActividadNull() {
                this[this.tableRepActividadCab.sTipoRActividadColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoClienteNull() {
                return this.IsNull(this.tableRepActividadCab.sIdTipoClienteColumn);
            }
            
            public void SetsIdTipoClienteNull() {
                this[this.tableRepActividadCab.sIdTipoClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdCentroNull() {
                return this.IsNull(this.tableRepActividadCab.iIdCentroColumn);
            }
            
            public void SetiIdCentroNull() {
                this[this.tableRepActividadCab.iIdCentroColumn] = System.Convert.DBNull;
            }
            
            public bool IsiHorarioNull() {
                return this.IsNull(this.tableRepActividadCab.iHorarioColumn);
            }
            
            public void SetiHorarioNull() {
                this[this.tableRepActividadCab.iHorarioColumn] = System.Convert.DBNull;
            }
            
            public bool IstObjetivoNull() {
                return this.IsNull(this.tableRepActividadCab.tObjetivoColumn);
            }
            
            public void SettObjetivoNull() {
                this[this.tableRepActividadCab.tObjetivoColumn] = System.Convert.DBNull;
            }
            
            public bool IstProxObjetivoNull() {
                return this.IsNull(this.tableRepActividadCab.tProxObjetivoColumn);
            }
            
            public void SettProxObjetivoNull() {
                this[this.tableRepActividadCab.tProxObjetivoColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableRepActividadCab.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableRepActividadCab.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public RepActGADRow[] GetRepActGADRows() {
                return ((RepActGADRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividadCabRepActGAD"])));
            }
            
            public RepActividadPedRow[] GetRepActividadPedRows() {
                return ((RepActividadPedRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividadCabRepActividadPed"])));
            }
            
            public RepActividadPromRow[] GetRepActividadPromRows() {
                return ((RepActividadPromRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividadCabRepActividadProm"])));
            }
            
            public RepActividadProxObjRow[] GetRepActividadProxObjRows() {
                return ((RepActividadProxObjRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividadCabRepActividadProxObj"])));
            }
            
            public RepActividadAtenRow[] GetRepActividadAtenRows() {
                return ((RepActividadAtenRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividadCabRepActividadAten"])));
            }
            
            public RepActividadCliRow[] GetRepActividadCliRows() {
                return ((RepActividadCliRow[])(this.GetChildRows(this.Table.ChildRelations["RepActividadCabRepActividadCli"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCabRowChangeEvent : EventArgs {
            
            private RepActividadCabRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividadCabRowChangeEvent(RepActividadCabRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividadCabRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCliDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columntObjetivos;
            
            private DataColumn columntProxObj;
            
            private DataColumn columnbSustituto;
            
            internal RepActividadCliDataTable() : 
                    base("RepActividadCli") {
                this.InitClass();
            }
            
            internal RepActividadCliDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn tObjetivosColumn {
                get {
                    return this.columntObjetivos;
                }
            }
            
            internal DataColumn tProxObjColumn {
                get {
                    return this.columntProxObj;
                }
            }
            
            internal DataColumn bSustitutoColumn {
                get {
                    return this.columnbSustituto;
                }
            }
            
            public RepActividadCliRow this[int index] {
                get {
                    return ((RepActividadCliRow)(this.Rows[index]));
                }
            }
            
            public event RepActividadCliRowChangeEventHandler RepActividadCliRowChanged;
            
            public event RepActividadCliRowChangeEventHandler RepActividadCliRowChanging;
            
            public event RepActividadCliRowChangeEventHandler RepActividadCliRowDeleted;
            
            public event RepActividadCliRowChangeEventHandler RepActividadCliRowDeleting;
            
            public void AddRepActividadCliRow(RepActividadCliRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividadCliRow AddRepActividadCliRow(RepActividadCabRow parentRepActividadCabRowByRepActividadCabRepActividadCli, int iIdCliente, string tObservaciones, string tObjetivos, string tProxObj, bool bSustituto) {
                RepActividadCliRow rowRepActividadCliRow = ((RepActividadCliRow)(this.NewRow()));
                rowRepActividadCliRow.ItemArray = new object[] {
                        parentRepActividadCabRowByRepActividadCabRepActividadCli[0],
                        iIdCliente,
                        tObservaciones,
                        tObjetivos,
                        tProxObj,
                        bSustituto};
                this.Rows.Add(rowRepActividadCliRow);
                return rowRepActividadCliRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividadCliDataTable cln = ((RepActividadCliDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividadCliDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columntObjetivos = this.Columns["tObjetivos"];
                this.columntProxObj = this.Columns["tProxObj"];
                this.columnbSustituto = this.Columns["bSustituto"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columntObjetivos = new DataColumn("tObjetivos", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObjetivos);
                this.columntProxObj = new DataColumn("tProxObj", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObj);
                this.columnbSustituto = new DataColumn("bSustituto", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbSustituto);
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columntObservaciones.ReadOnly = true;
                this.columntObjetivos.ReadOnly = true;
                this.columntProxObj.ReadOnly = true;
                this.columnbSustituto.AllowDBNull = false;
            }
            
            public RepActividadCliRow NewRepActividadCliRow() {
                return ((RepActividadCliRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividadCliRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividadCliRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividadCliRowChanged != null)) {
                    this.RepActividadCliRowChanged(this, new RepActividadCliRowChangeEvent(((RepActividadCliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividadCliRowChanging != null)) {
                    this.RepActividadCliRowChanging(this, new RepActividadCliRowChangeEvent(((RepActividadCliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividadCliRowDeleted != null)) {
                    this.RepActividadCliRowDeleted(this, new RepActividadCliRowChangeEvent(((RepActividadCliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividadCliRowDeleting != null)) {
                    this.RepActividadCliRowDeleting(this, new RepActividadCliRowChangeEvent(((RepActividadCliRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividadCliRow(RepActividadCliRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCliRow : DataRow {
            
            private RepActividadCliDataTable tableRepActividadCli;
            
            internal RepActividadCliRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividadCli = ((RepActividadCliDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividadCli.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividadCli.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividadCli.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividadCli.iIdClienteColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCli.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCli.tObservacionesColumn] = value;
                }
            }
            
            public string tObjetivos {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCli.tObjetivosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCli.tObjetivosColumn] = value;
                }
            }
            
            public string tProxObj {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadCli.tProxObjColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadCli.tProxObjColumn] = value;
                }
            }
            
            public bool bSustituto {
                get {
                    return ((bool)(this[this.tableRepActividadCli.bSustitutoColumn]));
                }
                set {
                    this[this.tableRepActividadCli.bSustitutoColumn] = value;
                }
            }
            
            public RepActividadCabRow RepActividadCabRow {
                get {
                    return ((RepActividadCabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividadCabRepActividadCli"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividadCabRepActividadCli"]);
                }
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableRepActividadCli.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableRepActividadCli.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IstObjetivosNull() {
                return this.IsNull(this.tableRepActividadCli.tObjetivosColumn);
            }
            
            public void SettObjetivosNull() {
                this[this.tableRepActividadCli.tObjetivosColumn] = System.Convert.DBNull;
            }
            
            public bool IstProxObjNull() {
                return this.IsNull(this.tableRepActividadCli.tProxObjColumn);
            }
            
            public void SettProxObjNull() {
                this[this.tableRepActividadCli.tProxObjColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadCliRowChangeEvent : EventArgs {
            
            private RepActividadCliRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividadCliRowChangeEvent(RepActividadCliRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividadCliRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadAtenDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdAtencion;
            
            private DataColumn columniNumAtencion;
            
            private DataColumn columnfimporte;
            
            private DataColumn columnsIdAtencionTemp;
            
            internal RepActividadAtenDataTable() : 
                    base("RepActividadAten") {
                this.InitClass();
            }
            
            internal RepActividadAtenDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdAtencionColumn {
                get {
                    return this.columniIdAtencion;
                }
            }
            
            internal DataColumn iNumAtencionColumn {
                get {
                    return this.columniNumAtencion;
                }
            }
            
            internal DataColumn fimporteColumn {
                get {
                    return this.columnfimporte;
                }
            }
            
            internal DataColumn sIdAtencionTempColumn {
                get {
                    return this.columnsIdAtencionTemp;
                }
            }
            
            public RepActividadAtenRow this[int index] {
                get {
                    return ((RepActividadAtenRow)(this.Rows[index]));
                }
            }
            
            public event RepActividadAtenRowChangeEventHandler RepActividadAtenRowChanged;
            
            public event RepActividadAtenRowChangeEventHandler RepActividadAtenRowChanging;
            
            public event RepActividadAtenRowChangeEventHandler RepActividadAtenRowDeleted;
            
            public event RepActividadAtenRowChangeEventHandler RepActividadAtenRowDeleting;
            
            public void AddRepActividadAtenRow(RepActividadAtenRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividadAtenRow AddRepActividadAtenRow(RepActividadCabRow parentRepActividadCabRowByRepActividadCabRepActividadAten, int iIdCliente, int iIdAtencion, int iNumAtencion, System.Double fimporte, string sIdAtencionTemp) {
                RepActividadAtenRow rowRepActividadAtenRow = ((RepActividadAtenRow)(this.NewRow()));
                rowRepActividadAtenRow.ItemArray = new object[] {
                        parentRepActividadCabRowByRepActividadCabRepActividadAten[0],
                        iIdCliente,
                        iIdAtencion,
                        iNumAtencion,
                        fimporte,
                        sIdAtencionTemp};
                this.Rows.Add(rowRepActividadAtenRow);
                return rowRepActividadAtenRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividadAtenDataTable cln = ((RepActividadAtenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividadAtenDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdAtencion = this.Columns["iIdAtencion"];
                this.columniNumAtencion = this.Columns["iNumAtencion"];
                this.columnfimporte = this.Columns["fimporte"];
                this.columnsIdAtencionTemp = this.Columns["sIdAtencionTemp"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdAtencion = new DataColumn("iIdAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAtencion);
                this.columniNumAtencion = new DataColumn("iNumAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniNumAtencion);
                this.columnfimporte = new DataColumn("fimporte", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfimporte);
                this.columnsIdAtencionTemp = new DataColumn("sIdAtencionTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAtencionTemp);
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdAtencion.AllowDBNull = false;
                this.columniNumAtencion.AllowDBNull = false;
                this.columnfimporte.AllowDBNull = false;
                this.columnsIdAtencionTemp.ReadOnly = true;
            }
            
            public RepActividadAtenRow NewRepActividadAtenRow() {
                return ((RepActividadAtenRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividadAtenRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividadAtenRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividadAtenRowChanged != null)) {
                    this.RepActividadAtenRowChanged(this, new RepActividadAtenRowChangeEvent(((RepActividadAtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividadAtenRowChanging != null)) {
                    this.RepActividadAtenRowChanging(this, new RepActividadAtenRowChangeEvent(((RepActividadAtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividadAtenRowDeleted != null)) {
                    this.RepActividadAtenRowDeleted(this, new RepActividadAtenRowChangeEvent(((RepActividadAtenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividadAtenRowDeleting != null)) {
                    this.RepActividadAtenRowDeleting(this, new RepActividadAtenRowChangeEvent(((RepActividadAtenRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividadAtenRow(RepActividadAtenRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadAtenRow : DataRow {
            
            private RepActividadAtenDataTable tableRepActividadAten;
            
            internal RepActividadAtenRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividadAten = ((RepActividadAtenDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividadAten.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividadAten.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividadAten.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividadAten.iIdClienteColumn] = value;
                }
            }
            
            public int iIdAtencion {
                get {
                    return ((int)(this[this.tableRepActividadAten.iIdAtencionColumn]));
                }
                set {
                    this[this.tableRepActividadAten.iIdAtencionColumn] = value;
                }
            }
            
            public int iNumAtencion {
                get {
                    return ((int)(this[this.tableRepActividadAten.iNumAtencionColumn]));
                }
                set {
                    this[this.tableRepActividadAten.iNumAtencionColumn] = value;
                }
            }
            
            public System.Double fimporte {
                get {
                    return ((System.Double)(this[this.tableRepActividadAten.fimporteColumn]));
                }
                set {
                    this[this.tableRepActividadAten.fimporteColumn] = value;
                }
            }
            
            public string sIdAtencionTemp {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadAten.sIdAtencionTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadAten.sIdAtencionTempColumn] = value;
                }
            }
            
            public RepActividadCabRow RepActividadCabRow {
                get {
                    return ((RepActividadCabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividadCabRepActividadAten"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividadCabRepActividadAten"]);
                }
            }
            
            public bool IssIdAtencionTempNull() {
                return this.IsNull(this.tableRepActividadAten.sIdAtencionTempColumn);
            }
            
            public void SetsIdAtencionTempNull() {
                this[this.tableRepActividadAten.sIdAtencionTempColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadAtenRowChangeEvent : EventArgs {
            
            private RepActividadAtenRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividadAtenRowChangeEvent(RepActividadAtenRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividadAtenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadProxObjDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCentro;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdReport;
            
            private DataColumn columntProxObj;
            
            private DataColumn columndFecha;
            
            internal RepActividadProxObjDataTable() : 
                    base("RepActividadProxObj") {
                this.InitClass();
            }
            
            internal RepActividadProxObjDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn tProxObjColumn {
                get {
                    return this.columntProxObj;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            public RepActividadProxObjRow this[int index] {
                get {
                    return ((RepActividadProxObjRow)(this.Rows[index]));
                }
            }
            
            public event RepActividadProxObjRowChangeEventHandler RepActividadProxObjRowChanged;
            
            public event RepActividadProxObjRowChangeEventHandler RepActividadProxObjRowChanging;
            
            public event RepActividadProxObjRowChangeEventHandler RepActividadProxObjRowDeleted;
            
            public event RepActividadProxObjRowChangeEventHandler RepActividadProxObjRowDeleting;
            
            public void AddRepActividadProxObjRow(RepActividadProxObjRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividadProxObjRow AddRepActividadProxObjRow(int iIdCentro, int iIdCliente, RepActividadCabRow parentRepActividadCabRowByRepActividadCabRepActividadProxObj, string tProxObj, System.DateTime dFecha) {
                RepActividadProxObjRow rowRepActividadProxObjRow = ((RepActividadProxObjRow)(this.NewRow()));
                rowRepActividadProxObjRow.ItemArray = new object[] {
                        iIdCentro,
                        iIdCliente,
                        parentRepActividadCabRowByRepActividadCabRepActividadProxObj[0],
                        tProxObj,
                        dFecha};
                this.Rows.Add(rowRepActividadProxObjRow);
                return rowRepActividadProxObjRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividadProxObjDataTable cln = ((RepActividadProxObjDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividadProxObjDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdReport = this.Columns["iIdReport"];
                this.columntProxObj = this.Columns["tProxObj"];
                this.columndFecha = this.Columns["dFecha"];
            }
            
            private void InitClass() {
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columntProxObj = new DataColumn("tProxObj", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntProxObj);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.columniIdCentro.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdReport.AllowDBNull = false;
                this.columntProxObj.ReadOnly = true;
                this.columndFecha.AllowDBNull = false;
            }
            
            public RepActividadProxObjRow NewRepActividadProxObjRow() {
                return ((RepActividadProxObjRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividadProxObjRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividadProxObjRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividadProxObjRowChanged != null)) {
                    this.RepActividadProxObjRowChanged(this, new RepActividadProxObjRowChangeEvent(((RepActividadProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividadProxObjRowChanging != null)) {
                    this.RepActividadProxObjRowChanging(this, new RepActividadProxObjRowChangeEvent(((RepActividadProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividadProxObjRowDeleted != null)) {
                    this.RepActividadProxObjRowDeleted(this, new RepActividadProxObjRowChangeEvent(((RepActividadProxObjRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividadProxObjRowDeleting != null)) {
                    this.RepActividadProxObjRowDeleting(this, new RepActividadProxObjRowChangeEvent(((RepActividadProxObjRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividadProxObjRow(RepActividadProxObjRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadProxObjRow : DataRow {
            
            private RepActividadProxObjDataTable tableRepActividadProxObj;
            
            internal RepActividadProxObjRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividadProxObj = ((RepActividadProxObjDataTable)(this.Table));
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableRepActividadProxObj.iIdCentroColumn]));
                }
                set {
                    this[this.tableRepActividadProxObj.iIdCentroColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividadProxObj.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividadProxObj.iIdClienteColumn] = value;
                }
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividadProxObj.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividadProxObj.iIdReportColumn] = value;
                }
            }
            
            public string tProxObj {
                get {
                    try {
                        return ((string)(this[this.tableRepActividadProxObj.tProxObjColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRepActividadProxObj.tProxObjColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableRepActividadProxObj.dFechaColumn]));
                }
                set {
                    this[this.tableRepActividadProxObj.dFechaColumn] = value;
                }
            }
            
            public RepActividadCabRow RepActividadCabRow {
                get {
                    return ((RepActividadCabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividadCabRepActividadProxObj"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividadCabRepActividadProxObj"]);
                }
            }
            
            public bool IstProxObjNull() {
                return this.IsNull(this.tableRepActividadProxObj.tProxObjColumn);
            }
            
            public void SettProxObjNull() {
                this[this.tableRepActividadProxObj.tProxObjColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadProxObjRowChangeEvent : EventArgs {
            
            private RepActividadProxObjRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividadProxObjRowChangeEvent(RepActividadProxObjRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividadProxObjRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadPromDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columniCantidad;
            
            private DataColumn columnOrden;
            
            internal RepActividadPromDataTable() : 
                    base("RepActividadProm") {
                this.InitClass();
            }
            
            internal RepActividadPromDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn iCantidadColumn {
                get {
                    return this.columniCantidad;
                }
            }
            
            internal DataColumn OrdenColumn {
                get {
                    return this.columnOrden;
                }
            }
            
            public RepActividadPromRow this[int index] {
                get {
                    return ((RepActividadPromRow)(this.Rows[index]));
                }
            }
            
            public event RepActividadPromRowChangeEventHandler RepActividadPromRowChanged;
            
            public event RepActividadPromRowChangeEventHandler RepActividadPromRowChanging;
            
            public event RepActividadPromRowChangeEventHandler RepActividadPromRowDeleted;
            
            public event RepActividadPromRowChangeEventHandler RepActividadPromRowDeleting;
            
            public void AddRepActividadPromRow(RepActividadPromRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividadPromRow AddRepActividadPromRow(RepActividadCabRow parentRepActividadCabRowByRepActividadCabRepActividadProm, int iIdCliente, string sIdProducto, int iCantidad, int Orden) {
                RepActividadPromRow rowRepActividadPromRow = ((RepActividadPromRow)(this.NewRow()));
                rowRepActividadPromRow.ItemArray = new object[] {
                        parentRepActividadCabRowByRepActividadCabRepActividadProm[0],
                        iIdCliente,
                        sIdProducto,
                        iCantidad,
                        Orden};
                this.Rows.Add(rowRepActividadPromRow);
                return rowRepActividadPromRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividadPromDataTable cln = ((RepActividadPromDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividadPromDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columniCantidad = this.Columns["iCantidad"];
                this.columnOrden = this.Columns["Orden"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columniCantidad = new DataColumn("iCantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidad);
                this.columnOrden = new DataColumn("Orden", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrden);
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdProducto.AllowDBNull = false;
                this.columniCantidad.AllowDBNull = false;
                this.columnOrden.AllowDBNull = false;
            }
            
            public RepActividadPromRow NewRepActividadPromRow() {
                return ((RepActividadPromRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividadPromRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividadPromRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividadPromRowChanged != null)) {
                    this.RepActividadPromRowChanged(this, new RepActividadPromRowChangeEvent(((RepActividadPromRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividadPromRowChanging != null)) {
                    this.RepActividadPromRowChanging(this, new RepActividadPromRowChangeEvent(((RepActividadPromRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividadPromRowDeleted != null)) {
                    this.RepActividadPromRowDeleted(this, new RepActividadPromRowChangeEvent(((RepActividadPromRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividadPromRowDeleting != null)) {
                    this.RepActividadPromRowDeleting(this, new RepActividadPromRowChangeEvent(((RepActividadPromRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividadPromRow(RepActividadPromRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadPromRow : DataRow {
            
            private RepActividadPromDataTable tableRepActividadProm;
            
            internal RepActividadPromRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividadProm = ((RepActividadPromDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividadProm.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividadProm.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActividadProm.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActividadProm.iIdClienteColumn] = value;
                }
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tableRepActividadProm.sIdProductoColumn]));
                }
                set {
                    this[this.tableRepActividadProm.sIdProductoColumn] = value;
                }
            }
            
            public int iCantidad {
                get {
                    return ((int)(this[this.tableRepActividadProm.iCantidadColumn]));
                }
                set {
                    this[this.tableRepActividadProm.iCantidadColumn] = value;
                }
            }
            
            public int Orden {
                get {
                    return ((int)(this[this.tableRepActividadProm.OrdenColumn]));
                }
                set {
                    this[this.tableRepActividadProm.OrdenColumn] = value;
                }
            }
            
            public RepActividadCabRow RepActividadCabRow {
                get {
                    return ((RepActividadCabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividadCabRepActividadProm"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividadCabRepActividadProm"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadPromRowChangeEvent : EventArgs {
            
            private RepActividadPromRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividadPromRowChangeEvent(RepActividadPromRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividadPromRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadPedDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columnsIdPedido;
            
            internal RepActividadPedDataTable() : 
                    base("RepActividadPed") {
                this.InitClass();
            }
            
            internal RepActividadPedDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            public RepActividadPedRow this[int index] {
                get {
                    return ((RepActividadPedRow)(this.Rows[index]));
                }
            }
            
            public event RepActividadPedRowChangeEventHandler RepActividadPedRowChanged;
            
            public event RepActividadPedRowChangeEventHandler RepActividadPedRowChanging;
            
            public event RepActividadPedRowChangeEventHandler RepActividadPedRowDeleted;
            
            public event RepActividadPedRowChangeEventHandler RepActividadPedRowDeleting;
            
            public void AddRepActividadPedRow(RepActividadPedRow row) {
                this.Rows.Add(row);
            }
            
            public RepActividadPedRow AddRepActividadPedRow(RepActividadCabRow parentRepActividadCabRowByRepActividadCabRepActividadPed, string sIdPedido) {
                RepActividadPedRow rowRepActividadPedRow = ((RepActividadPedRow)(this.NewRow()));
                rowRepActividadPedRow.ItemArray = new object[] {
                        parentRepActividadCabRowByRepActividadCabRepActividadPed[0],
                        sIdPedido};
                this.Rows.Add(rowRepActividadPedRow);
                return rowRepActividadPedRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActividadPedDataTable cln = ((RepActividadPedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActividadPedDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columnsIdPedido = this.Columns["sIdPedido"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.columniIdReport.AllowDBNull = false;
                this.columnsIdPedido.AllowDBNull = false;
            }
            
            public RepActividadPedRow NewRepActividadPedRow() {
                return ((RepActividadPedRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActividadPedRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActividadPedRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActividadPedRowChanged != null)) {
                    this.RepActividadPedRowChanged(this, new RepActividadPedRowChangeEvent(((RepActividadPedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActividadPedRowChanging != null)) {
                    this.RepActividadPedRowChanging(this, new RepActividadPedRowChangeEvent(((RepActividadPedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActividadPedRowDeleted != null)) {
                    this.RepActividadPedRowDeleted(this, new RepActividadPedRowChangeEvent(((RepActividadPedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActividadPedRowDeleting != null)) {
                    this.RepActividadPedRowDeleting(this, new RepActividadPedRowChangeEvent(((RepActividadPedRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActividadPedRow(RepActividadPedRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadPedRow : DataRow {
            
            private RepActividadPedDataTable tableRepActividadPed;
            
            internal RepActividadPedRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActividadPed = ((RepActividadPedDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActividadPed.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActividadPed.iIdReportColumn] = value;
                }
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tableRepActividadPed.sIdPedidoColumn]));
                }
                set {
                    this[this.tableRepActividadPed.sIdPedidoColumn] = value;
                }
            }
            
            public RepActividadCabRow RepActividadCabRow {
                get {
                    return ((RepActividadCabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividadCabRepActividadPed"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividadCabRepActividadPed"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActividadPedRowChangeEvent : EventArgs {
            
            private RepActividadPedRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActividadPedRowChangeEvent(RepActividadPedRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActividadPedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActGADDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdReport;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdAccion;
            
            private DataColumn columniCantidad;
            
            internal RepActGADDataTable() : 
                    base("RepActGAD") {
                this.InitClass();
            }
            
            internal RepActGADDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdReportColumn {
                get {
                    return this.columniIdReport;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdAccionColumn {
                get {
                    return this.columniIdAccion;
                }
            }
            
            internal DataColumn iCantidadColumn {
                get {
                    return this.columniCantidad;
                }
            }
            
            public RepActGADRow this[int index] {
                get {
                    return ((RepActGADRow)(this.Rows[index]));
                }
            }
            
            public event RepActGADRowChangeEventHandler RepActGADRowChanged;
            
            public event RepActGADRowChangeEventHandler RepActGADRowChanging;
            
            public event RepActGADRowChangeEventHandler RepActGADRowDeleted;
            
            public event RepActGADRowChangeEventHandler RepActGADRowDeleting;
            
            public void AddRepActGADRow(RepActGADRow row) {
                this.Rows.Add(row);
            }
            
            public RepActGADRow AddRepActGADRow(RepActividadCabRow parentRepActividadCabRowByRepActividadCabRepActGAD, int iIdCliente, int iIdAccion, int iCantidad) {
                RepActGADRow rowRepActGADRow = ((RepActGADRow)(this.NewRow()));
                rowRepActGADRow.ItemArray = new object[] {
                        parentRepActividadCabRowByRepActividadCabRepActGAD[0],
                        iIdCliente,
                        iIdAccion,
                        iCantidad};
                this.Rows.Add(rowRepActGADRow);
                return rowRepActGADRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RepActGADDataTable cln = ((RepActGADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RepActGADDataTable();
            }
            
            internal void InitVars() {
                this.columniIdReport = this.Columns["iIdReport"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdAccion = this.Columns["iIdAccion"];
                this.columniCantidad = this.Columns["iCantidad"];
            }
            
            private void InitClass() {
                this.columniIdReport = new DataColumn("iIdReport", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdReport);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdAccion = new DataColumn("iIdAccion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAccion);
                this.columniCantidad = new DataColumn("iCantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidad);
                this.columniIdReport.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdAccion.AllowDBNull = false;
                this.columniCantidad.AllowDBNull = false;
            }
            
            public RepActGADRow NewRepActGADRow() {
                return ((RepActGADRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RepActGADRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RepActGADRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RepActGADRowChanged != null)) {
                    this.RepActGADRowChanged(this, new RepActGADRowChangeEvent(((RepActGADRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RepActGADRowChanging != null)) {
                    this.RepActGADRowChanging(this, new RepActGADRowChangeEvent(((RepActGADRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RepActGADRowDeleted != null)) {
                    this.RepActGADRowDeleted(this, new RepActGADRowChangeEvent(((RepActGADRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RepActGADRowDeleting != null)) {
                    this.RepActGADRowDeleting(this, new RepActGADRowChangeEvent(((RepActGADRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRepActGADRow(RepActGADRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActGADRow : DataRow {
            
            private RepActGADDataTable tableRepActGAD;
            
            internal RepActGADRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRepActGAD = ((RepActGADDataTable)(this.Table));
            }
            
            public int iIdReport {
                get {
                    return ((int)(this[this.tableRepActGAD.iIdReportColumn]));
                }
                set {
                    this[this.tableRepActGAD.iIdReportColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableRepActGAD.iIdClienteColumn]));
                }
                set {
                    this[this.tableRepActGAD.iIdClienteColumn] = value;
                }
            }
            
            public int iIdAccion {
                get {
                    return ((int)(this[this.tableRepActGAD.iIdAccionColumn]));
                }
                set {
                    this[this.tableRepActGAD.iIdAccionColumn] = value;
                }
            }
            
            public int iCantidad {
                get {
                    return ((int)(this[this.tableRepActGAD.iCantidadColumn]));
                }
                set {
                    this[this.tableRepActGAD.iCantidadColumn] = value;
                }
            }
            
            public RepActividadCabRow RepActividadCabRow {
                get {
                    return ((RepActividadCabRow)(this.GetParentRow(this.Table.ParentRelations["RepActividadCabRepActGAD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RepActividadCabRepActGAD"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RepActGADRowChangeEvent : EventArgs {
            
            private RepActGADRow eventRow;
            
            private DataRowAction eventAction;
            
            public RepActGADRowChangeEvent(RepActGADRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RepActGADRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdNota;
            
            private DataColumn columnsIdNotaTemp;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columndFecha;
            
            private DataColumn columnbVisa;
            
            private DataColumn columndFechaAprob;
            
            private DataColumn columnsUsuarioAprob;
            
            private DataColumn columndFechaLiq;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal NotasGastosDataTable() : 
                    base("NotasGastos") {
                this.InitClass();
            }
            
            internal NotasGastosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdNotaColumn {
                get {
                    return this.columniIdNota;
                }
            }
            
            internal DataColumn sIdNotaTempColumn {
                get {
                    return this.columnsIdNotaTemp;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            internal DataColumn bVisaColumn {
                get {
                    return this.columnbVisa;
                }
            }
            
            internal DataColumn dFechaAprobColumn {
                get {
                    return this.columndFechaAprob;
                }
            }
            
            internal DataColumn sUsuarioAprobColumn {
                get {
                    return this.columnsUsuarioAprob;
                }
            }
            
            internal DataColumn dFechaLiqColumn {
                get {
                    return this.columndFechaLiq;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public NotasGastosRow this[int index] {
                get {
                    return ((NotasGastosRow)(this.Rows[index]));
                }
            }
            
            public event NotasGastosRowChangeEventHandler NotasGastosRowChanged;
            
            public event NotasGastosRowChangeEventHandler NotasGastosRowChanging;
            
            public event NotasGastosRowChangeEventHandler NotasGastosRowDeleted;
            
            public event NotasGastosRowChangeEventHandler NotasGastosRowDeleting;
            
            public void AddNotasGastosRow(NotasGastosRow row) {
                this.Rows.Add(row);
            }
            
            public NotasGastosRow AddNotasGastosRow(int iIdNota, string sIdNotaTemp, int iIdDelegado, System.DateTime dFecha, System.Byte bVisa, System.DateTime dFechaAprob, string sUsuarioAprob, System.DateTime dFechaLiq, string tObservaciones, System.DateTime dFUM, short iEstado) {
                NotasGastosRow rowNotasGastosRow = ((NotasGastosRow)(this.NewRow()));
                rowNotasGastosRow.ItemArray = new object[] {
                        iIdNota,
                        sIdNotaTemp,
                        iIdDelegado,
                        dFecha,
                        bVisa,
                        dFechaAprob,
                        sUsuarioAprob,
                        dFechaLiq,
                        tObservaciones,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowNotasGastosRow);
                return rowNotasGastosRow;
            }
            
            public NotasGastosRow FindByiIdNota(int iIdNota) {
                return ((NotasGastosRow)(this.Rows.Find(new object[] {
                            iIdNota})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                NotasGastosDataTable cln = ((NotasGastosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new NotasGastosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdNota = this.Columns["iIdNota"];
                this.columnsIdNotaTemp = this.Columns["sIdNotaTemp"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columndFecha = this.Columns["dFecha"];
                this.columnbVisa = this.Columns["bVisa"];
                this.columndFechaAprob = this.Columns["dFechaAprob"];
                this.columnsUsuarioAprob = this.Columns["sUsuarioAprob"];
                this.columndFechaLiq = this.Columns["dFechaLiq"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdNota = new DataColumn("iIdNota", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdNota);
                this.columnsIdNotaTemp = new DataColumn("sIdNotaTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdNotaTemp);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.columnbVisa = new DataColumn("bVisa", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbVisa);
                this.columndFechaAprob = new DataColumn("dFechaAprob", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaAprob);
                this.columnsUsuarioAprob = new DataColumn("sUsuarioAprob", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsUsuarioAprob);
                this.columndFechaLiq = new DataColumn("dFechaLiq", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaLiq);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey15", new DataColumn[] {
                                this.columniIdNota}, true));
                this.columniIdNota.AllowDBNull = false;
                this.columniIdNota.Unique = true;
                this.columnsIdNotaTemp.AllowDBNull = false;
                this.columniIdDelegado.AllowDBNull = false;
                this.columndFecha.AllowDBNull = false;
                this.columnbVisa.AllowDBNull = false;
                this.columntObservaciones.ReadOnly = true;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public NotasGastosRow NewNotasGastosRow() {
                return ((NotasGastosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new NotasGastosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(NotasGastosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NotasGastosRowChanged != null)) {
                    this.NotasGastosRowChanged(this, new NotasGastosRowChangeEvent(((NotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NotasGastosRowChanging != null)) {
                    this.NotasGastosRowChanging(this, new NotasGastosRowChangeEvent(((NotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NotasGastosRowDeleted != null)) {
                    this.NotasGastosRowDeleted(this, new NotasGastosRowChangeEvent(((NotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NotasGastosRowDeleting != null)) {
                    this.NotasGastosRowDeleting(this, new NotasGastosRowChangeEvent(((NotasGastosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveNotasGastosRow(NotasGastosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastosRow : DataRow {
            
            private NotasGastosDataTable tableNotasGastos;
            
            internal NotasGastosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableNotasGastos = ((NotasGastosDataTable)(this.Table));
            }
            
            public int iIdNota {
                get {
                    return ((int)(this[this.tableNotasGastos.iIdNotaColumn]));
                }
                set {
                    this[this.tableNotasGastos.iIdNotaColumn] = value;
                }
            }
            
            public string sIdNotaTemp {
                get {
                    return ((string)(this[this.tableNotasGastos.sIdNotaTempColumn]));
                }
                set {
                    this[this.tableNotasGastos.sIdNotaTempColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableNotasGastos.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableNotasGastos.iIdDelegadoColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableNotasGastos.dFechaColumn]));
                }
                set {
                    this[this.tableNotasGastos.dFechaColumn] = value;
                }
            }
            
            public System.Byte bVisa {
                get {
                    return ((System.Byte)(this[this.tableNotasGastos.bVisaColumn]));
                }
                set {
                    this[this.tableNotasGastos.bVisaColumn] = value;
                }
            }
            
            public System.DateTime dFechaAprob {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableNotasGastos.dFechaAprobColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos.dFechaAprobColumn] = value;
                }
            }
            
            public string sUsuarioAprob {
                get {
                    try {
                        return ((string)(this[this.tableNotasGastos.sUsuarioAprobColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos.sUsuarioAprobColumn] = value;
                }
            }
            
            public System.DateTime dFechaLiq {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableNotasGastos.dFechaLiqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos.dFechaLiqColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableNotasGastos.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos.tObservacionesColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableNotasGastos.dFUMColumn]));
                }
                set {
                    this[this.tableNotasGastos.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableNotasGastos.iEstadoColumn]));
                }
                set {
                    this[this.tableNotasGastos.iEstadoColumn] = value;
                }
            }
            
            public bool IsdFechaAprobNull() {
                return this.IsNull(this.tableNotasGastos.dFechaAprobColumn);
            }
            
            public void SetdFechaAprobNull() {
                this[this.tableNotasGastos.dFechaAprobColumn] = System.Convert.DBNull;
            }
            
            public bool IssUsuarioAprobNull() {
                return this.IsNull(this.tableNotasGastos.sUsuarioAprobColumn);
            }
            
            public void SetsUsuarioAprobNull() {
                this[this.tableNotasGastos.sUsuarioAprobColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFechaLiqNull() {
                return this.IsNull(this.tableNotasGastos.dFechaLiqColumn);
            }
            
            public void SetdFechaLiqNull() {
                this[this.tableNotasGastos.dFechaLiqColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableNotasGastos.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableNotasGastos.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public AtencionesNGRow[] GetAtencionesNGRows() {
                return ((AtencionesNGRow[])(this.GetChildRows(this.Table.ChildRelations["NotasGastosAtencionesNG"])));
            }
            
            public NotasGastos_LinRow[] GetNotasGastos_LinRows() {
                return ((NotasGastos_LinRow[])(this.GetChildRows(this.Table.ChildRelations["NotasGastosNotasGastos_Lin"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastosRowChangeEvent : EventArgs {
            
            private NotasGastosRow eventRow;
            
            private DataRowAction eventAction;
            
            public NotasGastosRowChangeEvent(NotasGastosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public NotasGastosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastos_LinDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdNota;
            
            private DataColumn columniIdGasto;
            
            private DataColumn columnfCantidad;
            
            private DataColumn columnfPrecio;
            
            private DataColumn columntDescripcion;
            
            private DataColumn columnsIdCentroCoste;
            
            internal NotasGastos_LinDataTable() : 
                    base("NotasGastos_Lin") {
                this.InitClass();
            }
            
            internal NotasGastos_LinDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdNotaColumn {
                get {
                    return this.columniIdNota;
                }
            }
            
            internal DataColumn iIdGastoColumn {
                get {
                    return this.columniIdGasto;
                }
            }
            
            internal DataColumn fCantidadColumn {
                get {
                    return this.columnfCantidad;
                }
            }
            
            internal DataColumn fPrecioColumn {
                get {
                    return this.columnfPrecio;
                }
            }
            
            internal DataColumn tDescripcionColumn {
                get {
                    return this.columntDescripcion;
                }
            }
            
            internal DataColumn sIdCentroCosteColumn {
                get {
                    return this.columnsIdCentroCoste;
                }
            }
            
            public NotasGastos_LinRow this[int index] {
                get {
                    return ((NotasGastos_LinRow)(this.Rows[index]));
                }
            }
            
            public event NotasGastos_LinRowChangeEventHandler NotasGastos_LinRowChanged;
            
            public event NotasGastos_LinRowChangeEventHandler NotasGastos_LinRowChanging;
            
            public event NotasGastos_LinRowChangeEventHandler NotasGastos_LinRowDeleted;
            
            public event NotasGastos_LinRowChangeEventHandler NotasGastos_LinRowDeleting;
            
            public void AddNotasGastos_LinRow(NotasGastos_LinRow row) {
                this.Rows.Add(row);
            }
            
            public NotasGastos_LinRow AddNotasGastos_LinRow(NotasGastosRow parentNotasGastosRowByNotasGastosNotasGastos_Lin, int iIdGasto, System.Double fCantidad, System.Double fPrecio, string tDescripcion, string sIdCentroCoste) {
                NotasGastos_LinRow rowNotasGastos_LinRow = ((NotasGastos_LinRow)(this.NewRow()));
                rowNotasGastos_LinRow.ItemArray = new object[] {
                        parentNotasGastosRowByNotasGastosNotasGastos_Lin[0],
                        iIdGasto,
                        fCantidad,
                        fPrecio,
                        tDescripcion,
                        sIdCentroCoste};
                this.Rows.Add(rowNotasGastos_LinRow);
                return rowNotasGastos_LinRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                NotasGastos_LinDataTable cln = ((NotasGastos_LinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new NotasGastos_LinDataTable();
            }
            
            internal void InitVars() {
                this.columniIdNota = this.Columns["iIdNota"];
                this.columniIdGasto = this.Columns["iIdGasto"];
                this.columnfCantidad = this.Columns["fCantidad"];
                this.columnfPrecio = this.Columns["fPrecio"];
                this.columntDescripcion = this.Columns["tDescripcion"];
                this.columnsIdCentroCoste = this.Columns["sIdCentroCoste"];
            }
            
            private void InitClass() {
                this.columniIdNota = new DataColumn("iIdNota", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdNota);
                this.columniIdGasto = new DataColumn("iIdGasto", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdGasto);
                this.columnfCantidad = new DataColumn("fCantidad", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfCantidad);
                this.columnfPrecio = new DataColumn("fPrecio", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPrecio);
                this.columntDescripcion = new DataColumn("tDescripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntDescripcion);
                this.columnsIdCentroCoste = new DataColumn("sIdCentroCoste", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCentroCoste);
                this.columniIdNota.AllowDBNull = false;
                this.columniIdGasto.AllowDBNull = false;
                this.columnfCantidad.AllowDBNull = false;
                this.columnfPrecio.AllowDBNull = false;
                this.columntDescripcion.ReadOnly = true;
            }
            
            public NotasGastos_LinRow NewNotasGastos_LinRow() {
                return ((NotasGastos_LinRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new NotasGastos_LinRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(NotasGastos_LinRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NotasGastos_LinRowChanged != null)) {
                    this.NotasGastos_LinRowChanged(this, new NotasGastos_LinRowChangeEvent(((NotasGastos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NotasGastos_LinRowChanging != null)) {
                    this.NotasGastos_LinRowChanging(this, new NotasGastos_LinRowChangeEvent(((NotasGastos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NotasGastos_LinRowDeleted != null)) {
                    this.NotasGastos_LinRowDeleted(this, new NotasGastos_LinRowChangeEvent(((NotasGastos_LinRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NotasGastos_LinRowDeleting != null)) {
                    this.NotasGastos_LinRowDeleting(this, new NotasGastos_LinRowChangeEvent(((NotasGastos_LinRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveNotasGastos_LinRow(NotasGastos_LinRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastos_LinRow : DataRow {
            
            private NotasGastos_LinDataTable tableNotasGastos_Lin;
            
            internal NotasGastos_LinRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableNotasGastos_Lin = ((NotasGastos_LinDataTable)(this.Table));
            }
            
            public int iIdNota {
                get {
                    return ((int)(this[this.tableNotasGastos_Lin.iIdNotaColumn]));
                }
                set {
                    this[this.tableNotasGastos_Lin.iIdNotaColumn] = value;
                }
            }
            
            public int iIdGasto {
                get {
                    return ((int)(this[this.tableNotasGastos_Lin.iIdGastoColumn]));
                }
                set {
                    this[this.tableNotasGastos_Lin.iIdGastoColumn] = value;
                }
            }
            
            public System.Double fCantidad {
                get {
                    return ((System.Double)(this[this.tableNotasGastos_Lin.fCantidadColumn]));
                }
                set {
                    this[this.tableNotasGastos_Lin.fCantidadColumn] = value;
                }
            }
            
            public System.Double fPrecio {
                get {
                    return ((System.Double)(this[this.tableNotasGastos_Lin.fPrecioColumn]));
                }
                set {
                    this[this.tableNotasGastos_Lin.fPrecioColumn] = value;
                }
            }
            
            public string tDescripcion {
                get {
                    try {
                        return ((string)(this[this.tableNotasGastos_Lin.tDescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos_Lin.tDescripcionColumn] = value;
                }
            }
            
            public string sIdCentroCoste {
                get {
                    try {
                        return ((string)(this[this.tableNotasGastos_Lin.sIdCentroCosteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNotasGastos_Lin.sIdCentroCosteColumn] = value;
                }
            }
            
            public NotasGastosRow NotasGastosRow {
                get {
                    return ((NotasGastosRow)(this.GetParentRow(this.Table.ParentRelations["NotasGastosNotasGastos_Lin"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["NotasGastosNotasGastos_Lin"]);
                }
            }
            
            public bool IstDescripcionNull() {
                return this.IsNull(this.tableNotasGastos_Lin.tDescripcionColumn);
            }
            
            public void SettDescripcionNull() {
                this[this.tableNotasGastos_Lin.tDescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdCentroCosteNull() {
                return this.IsNull(this.tableNotasGastos_Lin.sIdCentroCosteColumn);
            }
            
            public void SetsIdCentroCosteNull() {
                this[this.tableNotasGastos_Lin.sIdCentroCosteColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class NotasGastos_LinRowChangeEvent : EventArgs {
            
            private NotasGastos_LinRow eventRow;
            
            private DataRowAction eventAction;
            
            public NotasGastos_LinRowChangeEvent(NotasGastos_LinRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public NotasGastos_LinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesNGDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdNota;
            
            private DataColumn columnsIdReportTemp;
            
            private DataColumn columnsIdAtencionTemp;
            
            private DataColumn columniNumAtencion;
            
            private DataColumn columnsIdNotaTemp;
            
            private DataColumn columniIdCliente;
            
            internal AtencionesNGDataTable() : 
                    base("AtencionesNG") {
                this.InitClass();
            }
            
            internal AtencionesNGDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdNotaColumn {
                get {
                    return this.columniIdNota;
                }
            }
            
            internal DataColumn sIdReportTempColumn {
                get {
                    return this.columnsIdReportTemp;
                }
            }
            
            internal DataColumn sIdAtencionTempColumn {
                get {
                    return this.columnsIdAtencionTemp;
                }
            }
            
            internal DataColumn iNumAtencionColumn {
                get {
                    return this.columniNumAtencion;
                }
            }
            
            internal DataColumn sIdNotaTempColumn {
                get {
                    return this.columnsIdNotaTemp;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            public AtencionesNGRow this[int index] {
                get {
                    return ((AtencionesNGRow)(this.Rows[index]));
                }
            }
            
            public event AtencionesNGRowChangeEventHandler AtencionesNGRowChanged;
            
            public event AtencionesNGRowChangeEventHandler AtencionesNGRowChanging;
            
            public event AtencionesNGRowChangeEventHandler AtencionesNGRowDeleted;
            
            public event AtencionesNGRowChangeEventHandler AtencionesNGRowDeleting;
            
            public void AddAtencionesNGRow(AtencionesNGRow row) {
                this.Rows.Add(row);
            }
            
            public AtencionesNGRow AddAtencionesNGRow(NotasGastosRow parentNotasGastosRowByNotasGastosAtencionesNG, string sIdReportTemp, string sIdAtencionTemp, int iNumAtencion, string sIdNotaTemp, int iIdCliente) {
                AtencionesNGRow rowAtencionesNGRow = ((AtencionesNGRow)(this.NewRow()));
                rowAtencionesNGRow.ItemArray = new object[] {
                        parentNotasGastosRowByNotasGastosAtencionesNG[0],
                        sIdReportTemp,
                        sIdAtencionTemp,
                        iNumAtencion,
                        sIdNotaTemp,
                        iIdCliente};
                this.Rows.Add(rowAtencionesNGRow);
                return rowAtencionesNGRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AtencionesNGDataTable cln = ((AtencionesNGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AtencionesNGDataTable();
            }
            
            internal void InitVars() {
                this.columniIdNota = this.Columns["iIdNota"];
                this.columnsIdReportTemp = this.Columns["sIdReportTemp"];
                this.columnsIdAtencionTemp = this.Columns["sIdAtencionTemp"];
                this.columniNumAtencion = this.Columns["iNumAtencion"];
                this.columnsIdNotaTemp = this.Columns["sIdNotaTemp"];
                this.columniIdCliente = this.Columns["iIdCliente"];
            }
            
            private void InitClass() {
                this.columniIdNota = new DataColumn("iIdNota", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdNota);
                this.columnsIdReportTemp = new DataColumn("sIdReportTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdReportTemp);
                this.columnsIdAtencionTemp = new DataColumn("sIdAtencionTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdAtencionTemp);
                this.columniNumAtencion = new DataColumn("iNumAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniNumAtencion);
                this.columnsIdNotaTemp = new DataColumn("sIdNotaTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdNotaTemp);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdNota.AllowDBNull = false;
                this.columnsIdAtencionTemp.ReadOnly = true;
                this.columniNumAtencion.AllowDBNull = false;
                this.columnsIdNotaTemp.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
            }
            
            public AtencionesNGRow NewAtencionesNGRow() {
                return ((AtencionesNGRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AtencionesNGRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AtencionesNGRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AtencionesNGRowChanged != null)) {
                    this.AtencionesNGRowChanged(this, new AtencionesNGRowChangeEvent(((AtencionesNGRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AtencionesNGRowChanging != null)) {
                    this.AtencionesNGRowChanging(this, new AtencionesNGRowChangeEvent(((AtencionesNGRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AtencionesNGRowDeleted != null)) {
                    this.AtencionesNGRowDeleted(this, new AtencionesNGRowChangeEvent(((AtencionesNGRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AtencionesNGRowDeleting != null)) {
                    this.AtencionesNGRowDeleting(this, new AtencionesNGRowChangeEvent(((AtencionesNGRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAtencionesNGRow(AtencionesNGRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesNGRow : DataRow {
            
            private AtencionesNGDataTable tableAtencionesNG;
            
            internal AtencionesNGRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAtencionesNG = ((AtencionesNGDataTable)(this.Table));
            }
            
            public int iIdNota {
                get {
                    return ((int)(this[this.tableAtencionesNG.iIdNotaColumn]));
                }
                set {
                    this[this.tableAtencionesNG.iIdNotaColumn] = value;
                }
            }
            
            public string sIdReportTemp {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesNG.sIdReportTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesNG.sIdReportTempColumn] = value;
                }
            }
            
            public string sIdAtencionTemp {
                get {
                    try {
                        return ((string)(this[this.tableAtencionesNG.sIdAtencionTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesNG.sIdAtencionTempColumn] = value;
                }
            }
            
            public int iNumAtencion {
                get {
                    return ((int)(this[this.tableAtencionesNG.iNumAtencionColumn]));
                }
                set {
                    this[this.tableAtencionesNG.iNumAtencionColumn] = value;
                }
            }
            
            public string sIdNotaTemp {
                get {
                    return ((string)(this[this.tableAtencionesNG.sIdNotaTempColumn]));
                }
                set {
                    this[this.tableAtencionesNG.sIdNotaTempColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableAtencionesNG.iIdClienteColumn]));
                }
                set {
                    this[this.tableAtencionesNG.iIdClienteColumn] = value;
                }
            }
            
            public NotasGastosRow NotasGastosRow {
                get {
                    return ((NotasGastosRow)(this.GetParentRow(this.Table.ParentRelations["NotasGastosAtencionesNG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["NotasGastosAtencionesNG"]);
                }
            }
            
            public bool IssIdReportTempNull() {
                return this.IsNull(this.tableAtencionesNG.sIdReportTempColumn);
            }
            
            public void SetsIdReportTempNull() {
                this[this.tableAtencionesNG.sIdReportTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdAtencionTempNull() {
                return this.IsNull(this.tableAtencionesNG.sIdAtencionTempColumn);
            }
            
            public void SetsIdAtencionTempNull() {
                this[this.tableAtencionesNG.sIdAtencionTempColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesNGRowChangeEvent : EventArgs {
            
            private AtencionesNGRow eventRow;
            
            private DataRowAction eventAction;
            
            public AtencionesNGRowChangeEvent(AtencionesNGRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AtencionesNGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarkClientesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdAccion;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columndFechaEntrega;
            
            private DataColumn columnfCantidad;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnsCCoste;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            private DataColumn columniIdDelegado;
            
            internal AccionesMarkClientesDataTable() : 
                    base("AccionesMarkClientes") {
                this.InitClass();
            }
            
            internal AccionesMarkClientesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdAccionColumn {
                get {
                    return this.columniIdAccion;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn dFechaEntregaColumn {
                get {
                    return this.columndFechaEntrega;
                }
            }
            
            internal DataColumn fCantidadColumn {
                get {
                    return this.columnfCantidad;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn sCCosteColumn {
                get {
                    return this.columnsCCoste;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            public AccionesMarkClientesRow this[int index] {
                get {
                    return ((AccionesMarkClientesRow)(this.Rows[index]));
                }
            }
            
            public event AccionesMarkClientesRowChangeEventHandler AccionesMarkClientesRowChanged;
            
            public event AccionesMarkClientesRowChangeEventHandler AccionesMarkClientesRowChanging;
            
            public event AccionesMarkClientesRowChangeEventHandler AccionesMarkClientesRowDeleted;
            
            public event AccionesMarkClientesRowChangeEventHandler AccionesMarkClientesRowDeleting;
            
            public void AddAccionesMarkClientesRow(AccionesMarkClientesRow row) {
                this.Rows.Add(row);
            }
            
            public AccionesMarkClientesRow AddAccionesMarkClientesRow(int iIdAccion, int iIdCliente, System.DateTime dFechaEntrega, System.Double fCantidad, string tObservaciones, string sCCoste, System.DateTime dFUM, short iEstado, int iIdDelegado) {
                AccionesMarkClientesRow rowAccionesMarkClientesRow = ((AccionesMarkClientesRow)(this.NewRow()));
                rowAccionesMarkClientesRow.ItemArray = new object[] {
                        iIdAccion,
                        iIdCliente,
                        dFechaEntrega,
                        fCantidad,
                        tObservaciones,
                        sCCoste,
                        dFUM,
                        iEstado,
                        iIdDelegado};
                this.Rows.Add(rowAccionesMarkClientesRow);
                return rowAccionesMarkClientesRow;
            }
            
            public AccionesMarkClientesRow FindByiIdAccioniIdClientedFechaEntrega(int iIdAccion, int iIdCliente, System.DateTime dFechaEntrega) {
                return ((AccionesMarkClientesRow)(this.Rows.Find(new object[] {
                            iIdAccion,
                            iIdCliente,
                            dFechaEntrega})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AccionesMarkClientesDataTable cln = ((AccionesMarkClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AccionesMarkClientesDataTable();
            }
            
            internal void InitVars() {
                this.columniIdAccion = this.Columns["iIdAccion"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columndFechaEntrega = this.Columns["dFechaEntrega"];
                this.columnfCantidad = this.Columns["fCantidad"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnsCCoste = this.Columns["sCCoste"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
            }
            
            private void InitClass() {
                this.columniIdAccion = new DataColumn("iIdAccion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAccion);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columndFechaEntrega = new DataColumn("dFechaEntrega", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaEntrega);
                this.columnfCantidad = new DataColumn("fCantidad", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfCantidad);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnsCCoste = new DataColumn("sCCoste", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCCoste);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey8", new DataColumn[] {
                                this.columniIdAccion,
                                this.columniIdCliente,
                                this.columndFechaEntrega}, true));
                this.columniIdAccion.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columndFechaEntrega.AllowDBNull = false;
                this.columnfCantidad.AllowDBNull = false;
                this.columntObservaciones.ReadOnly = true;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public AccionesMarkClientesRow NewAccionesMarkClientesRow() {
                return ((AccionesMarkClientesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AccionesMarkClientesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AccionesMarkClientesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccionesMarkClientesRowChanged != null)) {
                    this.AccionesMarkClientesRowChanged(this, new AccionesMarkClientesRowChangeEvent(((AccionesMarkClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccionesMarkClientesRowChanging != null)) {
                    this.AccionesMarkClientesRowChanging(this, new AccionesMarkClientesRowChangeEvent(((AccionesMarkClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccionesMarkClientesRowDeleted != null)) {
                    this.AccionesMarkClientesRowDeleted(this, new AccionesMarkClientesRowChangeEvent(((AccionesMarkClientesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccionesMarkClientesRowDeleting != null)) {
                    this.AccionesMarkClientesRowDeleting(this, new AccionesMarkClientesRowChangeEvent(((AccionesMarkClientesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAccionesMarkClientesRow(AccionesMarkClientesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarkClientesRow : DataRow {
            
            private AccionesMarkClientesDataTable tableAccionesMarkClientes;
            
            internal AccionesMarkClientesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccionesMarkClientes = ((AccionesMarkClientesDataTable)(this.Table));
            }
            
            public int iIdAccion {
                get {
                    return ((int)(this[this.tableAccionesMarkClientes.iIdAccionColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.iIdAccionColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableAccionesMarkClientes.iIdClienteColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.iIdClienteColumn] = value;
                }
            }
            
            public System.DateTime dFechaEntrega {
                get {
                    return ((System.DateTime)(this[this.tableAccionesMarkClientes.dFechaEntregaColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.dFechaEntregaColumn] = value;
                }
            }
            
            public System.Double fCantidad {
                get {
                    return ((System.Double)(this[this.tableAccionesMarkClientes.fCantidadColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.fCantidadColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableAccionesMarkClientes.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarkClientes.tObservacionesColumn] = value;
                }
            }
            
            public string sCCoste {
                get {
                    try {
                        return ((string)(this[this.tableAccionesMarkClientes.sCCosteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarkClientes.sCCosteColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableAccionesMarkClientes.dFUMColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableAccionesMarkClientes.iEstadoColumn]));
                }
                set {
                    this[this.tableAccionesMarkClientes.iEstadoColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    try {
                        return ((int)(this[this.tableAccionesMarkClientes.iIdDelegadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccionesMarkClientes.iIdDelegadoColumn] = value;
                }
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableAccionesMarkClientes.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableAccionesMarkClientes.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IssCCosteNull() {
                return this.IsNull(this.tableAccionesMarkClientes.sCCosteColumn);
            }
            
            public void SetsCCosteNull() {
                this[this.tableAccionesMarkClientes.sCCosteColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdDelegadoNull() {
                return this.IsNull(this.tableAccionesMarkClientes.iIdDelegadoColumn);
            }
            
            public void SetiIdDelegadoNull() {
                this[this.tableAccionesMarkClientes.iIdDelegadoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AccionesMarkClientesRowChangeEvent : EventArgs {
            
            private AccionesMarkClientesRow eventRow;
            
            private DataRowAction eventAction;
            
            public AccionesMarkClientesRowChangeEvent(AccionesMarkClientesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AccionesMarkClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesCOMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsTipoCliente_COM;
            
            private DataColumn columnsNumColegiado;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columnsEMail;
            
            private DataColumn columnsFax;
            
            private DataColumn columnsTelMovil;
            
            private DataColumn columnsDireccion;
            
            private DataColumn columniIdPoblacion;
            
            private DataColumn columndFecNacimiento;
            
            private DataColumn columndFecAniversario;
            
            private DataColumn columnsNIF;
            
            private DataColumn columnbAsignado;
            
            private DataColumn columnbOcasional;
            
            private DataColumn columndFUM;
            
            internal ClientesCOMDataTable() : 
                    base("ClientesCOM") {
                this.InitClass();
            }
            
            internal ClientesCOMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sTipoCliente_COMColumn {
                get {
                    return this.columnsTipoCliente_COM;
                }
            }
            
            internal DataColumn sNumColegiadoColumn {
                get {
                    return this.columnsNumColegiado;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn sEMailColumn {
                get {
                    return this.columnsEMail;
                }
            }
            
            internal DataColumn sFaxColumn {
                get {
                    return this.columnsFax;
                }
            }
            
            internal DataColumn sTelMovilColumn {
                get {
                    return this.columnsTelMovil;
                }
            }
            
            internal DataColumn sDireccionColumn {
                get {
                    return this.columnsDireccion;
                }
            }
            
            internal DataColumn iIdPoblacionColumn {
                get {
                    return this.columniIdPoblacion;
                }
            }
            
            internal DataColumn dFecNacimientoColumn {
                get {
                    return this.columndFecNacimiento;
                }
            }
            
            internal DataColumn dFecAniversarioColumn {
                get {
                    return this.columndFecAniversario;
                }
            }
            
            internal DataColumn sNIFColumn {
                get {
                    return this.columnsNIF;
                }
            }
            
            internal DataColumn bAsignadoColumn {
                get {
                    return this.columnbAsignado;
                }
            }
            
            internal DataColumn bOcasionalColumn {
                get {
                    return this.columnbOcasional;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public ClientesCOMRow this[int index] {
                get {
                    return ((ClientesCOMRow)(this.Rows[index]));
                }
            }
            
            public event ClientesCOMRowChangeEventHandler ClientesCOMRowChanged;
            
            public event ClientesCOMRowChangeEventHandler ClientesCOMRowChanging;
            
            public event ClientesCOMRowChangeEventHandler ClientesCOMRowDeleted;
            
            public event ClientesCOMRowChangeEventHandler ClientesCOMRowDeleting;
            
            public void AddClientesCOMRow(ClientesCOMRow row) {
                this.Rows.Add(row);
            }
            
            public ClientesCOMRow AddClientesCOMRow(int iIdCliente, string sTipoCliente_COM, string sNumColegiado, string tObservaciones, string sEMail, string sFax, string sTelMovil, string sDireccion, int iIdPoblacion, System.DateTime dFecNacimiento, System.DateTime dFecAniversario, string sNIF, bool bAsignado, bool bOcasional, System.DateTime dFUM) {
                ClientesCOMRow rowClientesCOMRow = ((ClientesCOMRow)(this.NewRow()));
                rowClientesCOMRow.ItemArray = new object[] {
                        iIdCliente,
                        sTipoCliente_COM,
                        sNumColegiado,
                        tObservaciones,
                        sEMail,
                        sFax,
                        sTelMovil,
                        sDireccion,
                        iIdPoblacion,
                        dFecNacimiento,
                        dFecAniversario,
                        sNIF,
                        bAsignado,
                        bOcasional,
                        dFUM};
                this.Rows.Add(rowClientesCOMRow);
                return rowClientesCOMRow;
            }
            
            public ClientesCOMRow FindByiIdCliente(int iIdCliente) {
                return ((ClientesCOMRow)(this.Rows.Find(new object[] {
                            iIdCliente})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ClientesCOMDataTable cln = ((ClientesCOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ClientesCOMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsTipoCliente_COM = this.Columns["sTipoCliente_COM"];
                this.columnsNumColegiado = this.Columns["sNumColegiado"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columnsEMail = this.Columns["sEMail"];
                this.columnsFax = this.Columns["sFax"];
                this.columnsTelMovil = this.Columns["sTelMovil"];
                this.columnsDireccion = this.Columns["sDireccion"];
                this.columniIdPoblacion = this.Columns["iIdPoblacion"];
                this.columndFecNacimiento = this.Columns["dFecNacimiento"];
                this.columndFecAniversario = this.Columns["dFecAniversario"];
                this.columnsNIF = this.Columns["sNIF"];
                this.columnbAsignado = this.Columns["bAsignado"];
                this.columnbOcasional = this.Columns["bOcasional"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsTipoCliente_COM = new DataColumn("sTipoCliente_COM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTipoCliente_COM);
                this.columnsNumColegiado = new DataColumn("sNumColegiado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNumColegiado);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columnsEMail = new DataColumn("sEMail", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsEMail);
                this.columnsFax = new DataColumn("sFax", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsFax);
                this.columnsTelMovil = new DataColumn("sTelMovil", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsTelMovil);
                this.columnsDireccion = new DataColumn("sDireccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsDireccion);
                this.columniIdPoblacion = new DataColumn("iIdPoblacion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdPoblacion);
                this.columndFecNacimiento = new DataColumn("dFecNacimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecNacimiento);
                this.columndFecAniversario = new DataColumn("dFecAniversario", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecAniversario);
                this.columnsNIF = new DataColumn("sNIF", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNIF);
                this.columnbAsignado = new DataColumn("bAsignado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbAsignado);
                this.columnbOcasional = new DataColumn("bOcasional", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbOcasional);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey16", new DataColumn[] {
                                this.columniIdCliente}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCliente.Unique = true;
                this.columntObservaciones.ReadOnly = true;
                this.columnbAsignado.AllowDBNull = false;
                this.columnbOcasional.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public ClientesCOMRow NewClientesCOMRow() {
                return ((ClientesCOMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ClientesCOMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ClientesCOMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientesCOMRowChanged != null)) {
                    this.ClientesCOMRowChanged(this, new ClientesCOMRowChangeEvent(((ClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientesCOMRowChanging != null)) {
                    this.ClientesCOMRowChanging(this, new ClientesCOMRowChangeEvent(((ClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientesCOMRowDeleted != null)) {
                    this.ClientesCOMRowDeleted(this, new ClientesCOMRowChangeEvent(((ClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientesCOMRowDeleting != null)) {
                    this.ClientesCOMRowDeleting(this, new ClientesCOMRowChangeEvent(((ClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveClientesCOMRow(ClientesCOMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesCOMRow : DataRow {
            
            private ClientesCOMDataTable tableClientesCOM;
            
            internal ClientesCOMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientesCOM = ((ClientesCOMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableClientesCOM.iIdClienteColumn]));
                }
                set {
                    this[this.tableClientesCOM.iIdClienteColumn] = value;
                }
            }
            
            public string sTipoCliente_COM {
                get {
                    try {
                        return ((string)(this[this.tableClientesCOM.sTipoCliente_COMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.sTipoCliente_COMColumn] = value;
                }
            }
            
            public string sNumColegiado {
                get {
                    try {
                        return ((string)(this[this.tableClientesCOM.sNumColegiadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.sNumColegiadoColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableClientesCOM.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.tObservacionesColumn] = value;
                }
            }
            
            public string sEMail {
                get {
                    try {
                        return ((string)(this[this.tableClientesCOM.sEMailColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.sEMailColumn] = value;
                }
            }
            
            public string sFax {
                get {
                    try {
                        return ((string)(this[this.tableClientesCOM.sFaxColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.sFaxColumn] = value;
                }
            }
            
            public string sTelMovil {
                get {
                    try {
                        return ((string)(this[this.tableClientesCOM.sTelMovilColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.sTelMovilColumn] = value;
                }
            }
            
            public string sDireccion {
                get {
                    try {
                        return ((string)(this[this.tableClientesCOM.sDireccionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.sDireccionColumn] = value;
                }
            }
            
            public int iIdPoblacion {
                get {
                    try {
                        return ((int)(this[this.tableClientesCOM.iIdPoblacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.iIdPoblacionColumn] = value;
                }
            }
            
            public System.DateTime dFecNacimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableClientesCOM.dFecNacimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.dFecNacimientoColumn] = value;
                }
            }
            
            public System.DateTime dFecAniversario {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableClientesCOM.dFecAniversarioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.dFecAniversarioColumn] = value;
                }
            }
            
            public string sNIF {
                get {
                    try {
                        return ((string)(this[this.tableClientesCOM.sNIFColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientesCOM.sNIFColumn] = value;
                }
            }
            
            public bool bAsignado {
                get {
                    return ((bool)(this[this.tableClientesCOM.bAsignadoColumn]));
                }
                set {
                    this[this.tableClientesCOM.bAsignadoColumn] = value;
                }
            }
            
            public bool bOcasional {
                get {
                    return ((bool)(this[this.tableClientesCOM.bOcasionalColumn]));
                }
                set {
                    this[this.tableClientesCOM.bOcasionalColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableClientesCOM.dFUMColumn]));
                }
                set {
                    this[this.tableClientesCOM.dFUMColumn] = value;
                }
            }
            
            public bool IssTipoCliente_COMNull() {
                return this.IsNull(this.tableClientesCOM.sTipoCliente_COMColumn);
            }
            
            public void SetsTipoCliente_COMNull() {
                this[this.tableClientesCOM.sTipoCliente_COMColumn] = System.Convert.DBNull;
            }
            
            public bool IssNumColegiadoNull() {
                return this.IsNull(this.tableClientesCOM.sNumColegiadoColumn);
            }
            
            public void SetsNumColegiadoNull() {
                this[this.tableClientesCOM.sNumColegiadoColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableClientesCOM.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableClientesCOM.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IssEMailNull() {
                return this.IsNull(this.tableClientesCOM.sEMailColumn);
            }
            
            public void SetsEMailNull() {
                this[this.tableClientesCOM.sEMailColumn] = System.Convert.DBNull;
            }
            
            public bool IssFaxNull() {
                return this.IsNull(this.tableClientesCOM.sFaxColumn);
            }
            
            public void SetsFaxNull() {
                this[this.tableClientesCOM.sFaxColumn] = System.Convert.DBNull;
            }
            
            public bool IssTelMovilNull() {
                return this.IsNull(this.tableClientesCOM.sTelMovilColumn);
            }
            
            public void SetsTelMovilNull() {
                this[this.tableClientesCOM.sTelMovilColumn] = System.Convert.DBNull;
            }
            
            public bool IssDireccionNull() {
                return this.IsNull(this.tableClientesCOM.sDireccionColumn);
            }
            
            public void SetsDireccionNull() {
                this[this.tableClientesCOM.sDireccionColumn] = System.Convert.DBNull;
            }
            
            public bool IsiIdPoblacionNull() {
                return this.IsNull(this.tableClientesCOM.iIdPoblacionColumn);
            }
            
            public void SetiIdPoblacionNull() {
                this[this.tableClientesCOM.iIdPoblacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFecNacimientoNull() {
                return this.IsNull(this.tableClientesCOM.dFecNacimientoColumn);
            }
            
            public void SetdFecNacimientoNull() {
                this[this.tableClientesCOM.dFecNacimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFecAniversarioNull() {
                return this.IsNull(this.tableClientesCOM.dFecAniversarioColumn);
            }
            
            public void SetdFecAniversarioNull() {
                this[this.tableClientesCOM.dFecAniversarioColumn] = System.Convert.DBNull;
            }
            
            public bool IssNIFNull() {
                return this.IsNull(this.tableClientesCOM.sNIFColumn);
            }
            
            public void SetsNIFNull() {
                this[this.tableClientesCOM.sNIFColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ClientesCOMRowChangeEvent : EventArgs {
            
            private ClientesCOMRow eventRow;
            
            private DataRowAction eventAction;
            
            public ClientesCOMRowChangeEvent(ClientesCOMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ClientesCOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgendaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columndFecha;
            
            private DataColumn columntObservaciones;
            
            internal AgendaDataTable() : 
                    base("Agenda") {
                this.InitClass();
            }
            
            internal AgendaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn dFechaColumn {
                get {
                    return this.columndFecha;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            public AgendaRow this[int index] {
                get {
                    return ((AgendaRow)(this.Rows[index]));
                }
            }
            
            public event AgendaRowChangeEventHandler AgendaRowChanged;
            
            public event AgendaRowChangeEventHandler AgendaRowChanging;
            
            public event AgendaRowChangeEventHandler AgendaRowDeleted;
            
            public event AgendaRowChangeEventHandler AgendaRowDeleting;
            
            public void AddAgendaRow(AgendaRow row) {
                this.Rows.Add(row);
            }
            
            public AgendaRow AddAgendaRow(int iIdDelegado, System.DateTime dFecha, string tObservaciones) {
                AgendaRow rowAgendaRow = ((AgendaRow)(this.NewRow()));
                rowAgendaRow.ItemArray = new object[] {
                        iIdDelegado,
                        dFecha,
                        tObservaciones};
                this.Rows.Add(rowAgendaRow);
                return rowAgendaRow;
            }
            
            public AgendaRow FindByiIdDelegadodFecha(int iIdDelegado, System.DateTime dFecha) {
                return ((AgendaRow)(this.Rows.Find(new object[] {
                            iIdDelegado,
                            dFecha})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AgendaDataTable cln = ((AgendaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AgendaDataTable();
            }
            
            internal void InitVars() {
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columndFecha = this.Columns["dFecha"];
                this.columntObservaciones = this.Columns["tObservaciones"];
            }
            
            private void InitClass() {
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columndFecha = new DataColumn("dFecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFecha);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey19", new DataColumn[] {
                                this.columniIdDelegado,
                                this.columndFecha}, true));
                this.columniIdDelegado.AllowDBNull = false;
                this.columndFecha.AllowDBNull = false;
            }
            
            public AgendaRow NewAgendaRow() {
                return ((AgendaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AgendaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AgendaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgendaRowChanged != null)) {
                    this.AgendaRowChanged(this, new AgendaRowChangeEvent(((AgendaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgendaRowChanging != null)) {
                    this.AgendaRowChanging(this, new AgendaRowChangeEvent(((AgendaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgendaRowDeleted != null)) {
                    this.AgendaRowDeleted(this, new AgendaRowChangeEvent(((AgendaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgendaRowDeleting != null)) {
                    this.AgendaRowDeleting(this, new AgendaRowChangeEvent(((AgendaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAgendaRow(AgendaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgendaRow : DataRow {
            
            private AgendaDataTable tableAgenda;
            
            internal AgendaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgenda = ((AgendaDataTable)(this.Table));
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableAgenda.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableAgenda.iIdDelegadoColumn] = value;
                }
            }
            
            public System.DateTime dFecha {
                get {
                    return ((System.DateTime)(this[this.tableAgenda.dFechaColumn]));
                }
                set {
                    this[this.tableAgenda.dFechaColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableAgenda.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgenda.tObservacionesColumn] = value;
                }
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableAgenda.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableAgenda.tObservacionesColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AgendaRowChangeEvent : EventArgs {
            
            private AgendaRow eventRow;
            
            private DataRowAction eventAction;
            
            public AgendaRowChangeEvent(AgendaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AgendaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientesSAPDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdCentro;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal CentrosClientesSAPDataTable() : 
                    base("CentrosClientesSAP") {
                this.InitClass();
            }
            
            internal CentrosClientesSAPDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public CentrosClientesSAPRow this[int index] {
                get {
                    return ((CentrosClientesSAPRow)(this.Rows[index]));
                }
            }
            
            public event CentrosClientesSAPRowChangeEventHandler CentrosClientesSAPRowChanged;
            
            public event CentrosClientesSAPRowChangeEventHandler CentrosClientesSAPRowChanging;
            
            public event CentrosClientesSAPRowChangeEventHandler CentrosClientesSAPRowDeleted;
            
            public event CentrosClientesSAPRowChangeEventHandler CentrosClientesSAPRowDeleting;
            
            public void AddCentrosClientesSAPRow(CentrosClientesSAPRow row) {
                this.Rows.Add(row);
            }
            
            public CentrosClientesSAPRow AddCentrosClientesSAPRow(int iIdCliente, int iIdCentro, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                CentrosClientesSAPRow rowCentrosClientesSAPRow = ((CentrosClientesSAPRow)(this.NewRow()));
                rowCentrosClientesSAPRow.ItemArray = new object[] {
                        iIdCliente,
                        iIdCentro,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowCentrosClientesSAPRow);
                return rowCentrosClientesSAPRow;
            }
            
            public CentrosClientesSAPRow FindByiIdClienteiIdCentro(int iIdCliente, int iIdCentro) {
                return ((CentrosClientesSAPRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            iIdCentro})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CentrosClientesSAPDataTable cln = ((CentrosClientesSAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CentrosClientesSAPDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey20", new DataColumn[] {
                                this.columniIdCliente,
                                this.columniIdCentro}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCentro.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public CentrosClientesSAPRow NewCentrosClientesSAPRow() {
                return ((CentrosClientesSAPRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CentrosClientesSAPRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CentrosClientesSAPRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosClientesSAPRowChanged != null)) {
                    this.CentrosClientesSAPRowChanged(this, new CentrosClientesSAPRowChangeEvent(((CentrosClientesSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosClientesSAPRowChanging != null)) {
                    this.CentrosClientesSAPRowChanging(this, new CentrosClientesSAPRowChangeEvent(((CentrosClientesSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosClientesSAPRowDeleted != null)) {
                    this.CentrosClientesSAPRowDeleted(this, new CentrosClientesSAPRowChangeEvent(((CentrosClientesSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosClientesSAPRowDeleting != null)) {
                    this.CentrosClientesSAPRowDeleting(this, new CentrosClientesSAPRowChangeEvent(((CentrosClientesSAPRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCentrosClientesSAPRow(CentrosClientesSAPRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientesSAPRow : DataRow {
            
            private CentrosClientesSAPDataTable tableCentrosClientesSAP;
            
            internal CentrosClientesSAPRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentrosClientesSAP = ((CentrosClientesSAPDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableCentrosClientesSAP.iIdClienteColumn]));
                }
                set {
                    this[this.tableCentrosClientesSAP.iIdClienteColumn] = value;
                }
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableCentrosClientesSAP.iIdCentroColumn]));
                }
                set {
                    this[this.tableCentrosClientesSAP.iIdCentroColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableCentrosClientesSAP.dFARColumn]));
                }
                set {
                    this[this.tableCentrosClientesSAP.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosClientesSAP.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosClientesSAP.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCentrosClientesSAP.iEstadoColumn]));
                }
                set {
                    this[this.tableCentrosClientesSAP.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosClientesSAP.dFUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosClientesSAP.dFUMColumn] = value;
                }
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableCentrosClientesSAP.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableCentrosClientesSAP.dFBRColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFUMNull() {
                return this.IsNull(this.tableCentrosClientesSAP.dFUMColumn);
            }
            
            public void SetdFUMNull() {
                this[this.tableCentrosClientesSAP.dFUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientesSAPRowChangeEvent : EventArgs {
            
            private CentrosClientesSAPRow eventRow;
            
            private DataRowAction eventAction;
            
            public CentrosClientesSAPRowChangeEvent(CentrosClientesSAPRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CentrosClientesSAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ContactosClientesSAPDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdContacto;
            
            private DataColumn columnsNombre;
            
            private DataColumn columnsIdCargoContacto;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columndFUM;
            
            internal ContactosClientesSAPDataTable() : 
                    base("ContactosClientesSAP") {
                this.InitClass();
            }
            
            internal ContactosClientesSAPDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdContactoColumn {
                get {
                    return this.columniIdContacto;
                }
            }
            
            internal DataColumn sNombreColumn {
                get {
                    return this.columnsNombre;
                }
            }
            
            internal DataColumn sIdCargoContactoColumn {
                get {
                    return this.columnsIdCargoContacto;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public ContactosClientesSAPRow this[int index] {
                get {
                    return ((ContactosClientesSAPRow)(this.Rows[index]));
                }
            }
            
            public event ContactosClientesSAPRowChangeEventHandler ContactosClientesSAPRowChanged;
            
            public event ContactosClientesSAPRowChangeEventHandler ContactosClientesSAPRowChanging;
            
            public event ContactosClientesSAPRowChangeEventHandler ContactosClientesSAPRowDeleted;
            
            public event ContactosClientesSAPRowChangeEventHandler ContactosClientesSAPRowDeleting;
            
            public void AddContactosClientesSAPRow(ContactosClientesSAPRow row) {
                this.Rows.Add(row);
            }
            
            public ContactosClientesSAPRow AddContactosClientesSAPRow(int iIdCliente, string sNombre, string sIdCargoContacto, System.DateTime dFAR, System.DateTime dFBR, short iEstado, System.DateTime dFUM) {
                ContactosClientesSAPRow rowContactosClientesSAPRow = ((ContactosClientesSAPRow)(this.NewRow()));
                rowContactosClientesSAPRow.ItemArray = new object[] {
                        iIdCliente,
                        null,
                        sNombre,
                        sIdCargoContacto,
                        dFAR,
                        dFBR,
                        iEstado,
                        dFUM};
                this.Rows.Add(rowContactosClientesSAPRow);
                return rowContactosClientesSAPRow;
            }
            
            public ContactosClientesSAPRow FindByiIdContacto(int iIdContacto) {
                return ((ContactosClientesSAPRow)(this.Rows.Find(new object[] {
                            iIdContacto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ContactosClientesSAPDataTable cln = ((ContactosClientesSAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ContactosClientesSAPDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdContacto = this.Columns["iIdContacto"];
                this.columnsNombre = this.Columns["sNombre"];
                this.columnsIdCargoContacto = this.Columns["sIdCargoContacto"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdContacto = new DataColumn("iIdContacto", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdContacto);
                this.columnsNombre = new DataColumn("sNombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombre);
                this.columnsIdCargoContacto = new DataColumn("sIdCargoContacto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCargoContacto);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey21", new DataColumn[] {
                                this.columniIdContacto}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdContacto.AutoIncrement = true;
                this.columniIdContacto.AllowDBNull = false;
                this.columniIdContacto.ReadOnly = true;
                this.columniIdContacto.Unique = true;
                this.columnsNombre.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public ContactosClientesSAPRow NewContactosClientesSAPRow() {
                return ((ContactosClientesSAPRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ContactosClientesSAPRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ContactosClientesSAPRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContactosClientesSAPRowChanged != null)) {
                    this.ContactosClientesSAPRowChanged(this, new ContactosClientesSAPRowChangeEvent(((ContactosClientesSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContactosClientesSAPRowChanging != null)) {
                    this.ContactosClientesSAPRowChanging(this, new ContactosClientesSAPRowChangeEvent(((ContactosClientesSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContactosClientesSAPRowDeleted != null)) {
                    this.ContactosClientesSAPRowDeleted(this, new ContactosClientesSAPRowChangeEvent(((ContactosClientesSAPRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContactosClientesSAPRowDeleting != null)) {
                    this.ContactosClientesSAPRowDeleting(this, new ContactosClientesSAPRowChangeEvent(((ContactosClientesSAPRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveContactosClientesSAPRow(ContactosClientesSAPRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ContactosClientesSAPRow : DataRow {
            
            private ContactosClientesSAPDataTable tableContactosClientesSAP;
            
            internal ContactosClientesSAPRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableContactosClientesSAP = ((ContactosClientesSAPDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableContactosClientesSAP.iIdClienteColumn]));
                }
                set {
                    this[this.tableContactosClientesSAP.iIdClienteColumn] = value;
                }
            }
            
            public int iIdContacto {
                get {
                    return ((int)(this[this.tableContactosClientesSAP.iIdContactoColumn]));
                }
                set {
                    this[this.tableContactosClientesSAP.iIdContactoColumn] = value;
                }
            }
            
            public string sNombre {
                get {
                    return ((string)(this[this.tableContactosClientesSAP.sNombreColumn]));
                }
                set {
                    this[this.tableContactosClientesSAP.sNombreColumn] = value;
                }
            }
            
            public string sIdCargoContacto {
                get {
                    try {
                        return ((string)(this[this.tableContactosClientesSAP.sIdCargoContactoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactosClientesSAP.sIdCargoContactoColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableContactosClientesSAP.dFARColumn]));
                }
                set {
                    this[this.tableContactosClientesSAP.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableContactosClientesSAP.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactosClientesSAP.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableContactosClientesSAP.iEstadoColumn]));
                }
                set {
                    this[this.tableContactosClientesSAP.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableContactosClientesSAP.dFUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactosClientesSAP.dFUMColumn] = value;
                }
            }
            
            public bool IssIdCargoContactoNull() {
                return this.IsNull(this.tableContactosClientesSAP.sIdCargoContactoColumn);
            }
            
            public void SetsIdCargoContactoNull() {
                this[this.tableContactosClientesSAP.sIdCargoContactoColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableContactosClientesSAP.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableContactosClientesSAP.dFBRColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFUMNull() {
                return this.IsNull(this.tableContactosClientesSAP.dFUMColumn);
            }
            
            public void SetdFUMNull() {
                this[this.tableContactosClientesSAP.dFUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ContactosClientesSAPRowChangeEvent : EventArgs {
            
            private ContactosClientesSAPRow eventRow;
            
            private DataRowAction eventAction;
            
            public ContactosClientesSAPRowChangeEvent(ContactosClientesSAPRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ContactosClientesSAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProdClientesCOMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columniPrioridad;
            
            private DataColumn columndFUM;
            
            private DataColumn columniEstado;
            
            internal ProdClientesCOMDataTable() : 
                    base("ProdClientesCOM") {
                this.InitClass();
            }
            
            internal ProdClientesCOMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn iPrioridadColumn {
                get {
                    return this.columniPrioridad;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            public ProdClientesCOMRow this[int index] {
                get {
                    return ((ProdClientesCOMRow)(this.Rows[index]));
                }
            }
            
            public event ProdClientesCOMRowChangeEventHandler ProdClientesCOMRowChanged;
            
            public event ProdClientesCOMRowChangeEventHandler ProdClientesCOMRowChanging;
            
            public event ProdClientesCOMRowChangeEventHandler ProdClientesCOMRowDeleted;
            
            public event ProdClientesCOMRowChangeEventHandler ProdClientesCOMRowDeleting;
            
            public void AddProdClientesCOMRow(ProdClientesCOMRow row) {
                this.Rows.Add(row);
            }
            
            public ProdClientesCOMRow AddProdClientesCOMRow(int iIdCliente, string sIdProducto, short iPrioridad, System.DateTime dFUM, short iEstado) {
                ProdClientesCOMRow rowProdClientesCOMRow = ((ProdClientesCOMRow)(this.NewRow()));
                rowProdClientesCOMRow.ItemArray = new object[] {
                        iIdCliente,
                        sIdProducto,
                        iPrioridad,
                        dFUM,
                        iEstado};
                this.Rows.Add(rowProdClientesCOMRow);
                return rowProdClientesCOMRow;
            }
            
            public ProdClientesCOMRow FindByiIdClientesIdProducto(int iIdCliente, string sIdProducto) {
                return ((ProdClientesCOMRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            sIdProducto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ProdClientesCOMDataTable cln = ((ProdClientesCOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ProdClientesCOMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columniPrioridad = this.Columns["iPrioridad"];
                this.columndFUM = this.Columns["dFUM"];
                this.columniEstado = this.Columns["iEstado"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columniPrioridad = new DataColumn("iPrioridad", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniPrioridad);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey7", new DataColumn[] {
                                this.columniIdCliente,
                                this.columnsIdProducto}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdProducto.AllowDBNull = false;
                this.columniPrioridad.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
            }
            
            public ProdClientesCOMRow NewProdClientesCOMRow() {
                return ((ProdClientesCOMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ProdClientesCOMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ProdClientesCOMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProdClientesCOMRowChanged != null)) {
                    this.ProdClientesCOMRowChanged(this, new ProdClientesCOMRowChangeEvent(((ProdClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProdClientesCOMRowChanging != null)) {
                    this.ProdClientesCOMRowChanging(this, new ProdClientesCOMRowChangeEvent(((ProdClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProdClientesCOMRowDeleted != null)) {
                    this.ProdClientesCOMRowDeleted(this, new ProdClientesCOMRowChangeEvent(((ProdClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProdClientesCOMRowDeleting != null)) {
                    this.ProdClientesCOMRowDeleting(this, new ProdClientesCOMRowChangeEvent(((ProdClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveProdClientesCOMRow(ProdClientesCOMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProdClientesCOMRow : DataRow {
            
            private ProdClientesCOMDataTable tableProdClientesCOM;
            
            internal ProdClientesCOMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableProdClientesCOM = ((ProdClientesCOMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableProdClientesCOM.iIdClienteColumn]));
                }
                set {
                    this[this.tableProdClientesCOM.iIdClienteColumn] = value;
                }
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tableProdClientesCOM.sIdProductoColumn]));
                }
                set {
                    this[this.tableProdClientesCOM.sIdProductoColumn] = value;
                }
            }
            
            public short iPrioridad {
                get {
                    return ((short)(this[this.tableProdClientesCOM.iPrioridadColumn]));
                }
                set {
                    this[this.tableProdClientesCOM.iPrioridadColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableProdClientesCOM.dFUMColumn]));
                }
                set {
                    this[this.tableProdClientesCOM.dFUMColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableProdClientesCOM.iEstadoColumn]));
                }
                set {
                    this[this.tableProdClientesCOM.iEstadoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProdClientesCOMRowChangeEvent : EventArgs {
            
            private ProdClientesCOMRow eventRow;
            
            private DataRowAction eventAction;
            
            public ProdClientesCOMRowChangeEvent(ProdClientesCOMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ProdClientesCOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdPedido;
            
            private DataColumn columnsIdPedidoTemp;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnsIdTipoPedido;
            
            private DataColumn columniIdCliente;
            
            private DataColumn columnsIdCliente;
            
            private DataColumn columniIdDestinatario;
            
            private DataColumn columnsIdDestinatario;
            
            private DataColumn columndFechaPedido;
            
            private DataColumn columndFechaPreferente;
            
            private DataColumn columndFechaFijada;
            
            private DataColumn columnsOrgVentas;
            
            private DataColumn columnsGrupoVendedor;
            
            private DataColumn columnsCanal;
            
            private DataColumn columnsSector;
            
            private DataColumn columnfImporte;
            
            private DataColumn columnfDescuento;
            
            private DataColumn columnsIdTipoCampanya;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columniEstado;
            
            private DataColumn columnfFUM;
            
            internal Pedidos_CabDataTable() : 
                    base("Pedidos_Cab") {
                this.InitClass();
            }
            
            internal Pedidos_CabDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdPedidoColumn {
                get {
                    return this.columnsIdPedido;
                }
            }
            
            internal DataColumn sIdPedidoTempColumn {
                get {
                    return this.columnsIdPedidoTemp;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn sIdTipoPedidoColumn {
                get {
                    return this.columnsIdTipoPedido;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn sIdClienteColumn {
                get {
                    return this.columnsIdCliente;
                }
            }
            
            internal DataColumn iIdDestinatarioColumn {
                get {
                    return this.columniIdDestinatario;
                }
            }
            
            internal DataColumn sIdDestinatarioColumn {
                get {
                    return this.columnsIdDestinatario;
                }
            }
            
            internal DataColumn dFechaPedidoColumn {
                get {
                    return this.columndFechaPedido;
                }
            }
            
            internal DataColumn dFechaPreferenteColumn {
                get {
                    return this.columndFechaPreferente;
                }
            }
            
            internal DataColumn dFechaFijadaColumn {
                get {
                    return this.columndFechaFijada;
                }
            }
            
            internal DataColumn sOrgVentasColumn {
                get {
                    return this.columnsOrgVentas;
                }
            }
            
            internal DataColumn sGrupoVendedorColumn {
                get {
                    return this.columnsGrupoVendedor;
                }
            }
            
            internal DataColumn sCanalColumn {
                get {
                    return this.columnsCanal;
                }
            }
            
            internal DataColumn sSectorColumn {
                get {
                    return this.columnsSector;
                }
            }
            
            internal DataColumn fImporteColumn {
                get {
                    return this.columnfImporte;
                }
            }
            
            internal DataColumn fDescuentoColumn {
                get {
                    return this.columnfDescuento;
                }
            }
            
            internal DataColumn sIdTipoCampanyaColumn {
                get {
                    return this.columnsIdTipoCampanya;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn fFUMColumn {
                get {
                    return this.columnfFUM;
                }
            }
            
            public Pedidos_CabRow this[int index] {
                get {
                    return ((Pedidos_CabRow)(this.Rows[index]));
                }
            }
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowChanged;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowChanging;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowDeleted;
            
            public event Pedidos_CabRowChangeEventHandler Pedidos_CabRowDeleting;
            
            public void AddPedidos_CabRow(Pedidos_CabRow row) {
                this.Rows.Add(row);
            }
            
            public Pedidos_CabRow AddPedidos_CabRow(
                        string sIdPedido, 
                        string sIdPedidoTemp, 
                        int iIdDelegado, 
                        string sIdTipoPedido, 
                        int iIdCliente, 
                        string sIdCliente, 
                        int iIdDestinatario, 
                        string sIdDestinatario, 
                        System.DateTime dFechaPedido, 
                        System.DateTime dFechaPreferente, 
                        System.DateTime dFechaFijada, 
                        string sOrgVentas, 
                        string sGrupoVendedor, 
                        string sCanal, 
                        string sSector, 
                        System.Double fImporte, 
                        System.Double fDescuento, 
                        string sIdTipoCampanya, 
                        string tObservaciones, 
                        short iEstado, 
                        System.DateTime fFUM) {
                Pedidos_CabRow rowPedidos_CabRow = ((Pedidos_CabRow)(this.NewRow()));
                rowPedidos_CabRow.ItemArray = new object[] {
                        sIdPedido,
                        sIdPedidoTemp,
                        iIdDelegado,
                        sIdTipoPedido,
                        iIdCliente,
                        sIdCliente,
                        iIdDestinatario,
                        sIdDestinatario,
                        dFechaPedido,
                        dFechaPreferente,
                        dFechaFijada,
                        sOrgVentas,
                        sGrupoVendedor,
                        sCanal,
                        sSector,
                        fImporte,
                        fDescuento,
                        sIdTipoCampanya,
                        tObservaciones,
                        iEstado,
                        fFUM};
                this.Rows.Add(rowPedidos_CabRow);
                return rowPedidos_CabRow;
            }
            
            public Pedidos_CabRow FindBysIdPedido(string sIdPedido) {
                return ((Pedidos_CabRow)(this.Rows.Find(new object[] {
                            sIdPedido})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pedidos_CabDataTable cln = ((Pedidos_CabDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pedidos_CabDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdPedido = this.Columns["sIdPedido"];
                this.columnsIdPedidoTemp = this.Columns["sIdPedidoTemp"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnsIdTipoPedido = this.Columns["sIdTipoPedido"];
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columnsIdCliente = this.Columns["sIdCliente"];
                this.columniIdDestinatario = this.Columns["iIdDestinatario"];
                this.columnsIdDestinatario = this.Columns["sIdDestinatario"];
                this.columndFechaPedido = this.Columns["dFechaPedido"];
                this.columndFechaPreferente = this.Columns["dFechaPreferente"];
                this.columndFechaFijada = this.Columns["dFechaFijada"];
                this.columnsOrgVentas = this.Columns["sOrgVentas"];
                this.columnsGrupoVendedor = this.Columns["sGrupoVendedor"];
                this.columnsCanal = this.Columns["sCanal"];
                this.columnsSector = this.Columns["sSector"];
                this.columnfImporte = this.Columns["fImporte"];
                this.columnfDescuento = this.Columns["fDescuento"];
                this.columnsIdTipoCampanya = this.Columns["sIdTipoCampanya"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columniEstado = this.Columns["iEstado"];
                this.columnfFUM = this.Columns["fFUM"];
            }
            
            private void InitClass() {
                this.columnsIdPedido = new DataColumn("sIdPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedido);
                this.columnsIdPedidoTemp = new DataColumn("sIdPedidoTemp", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdPedidoTemp);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnsIdTipoPedido = new DataColumn("sIdTipoPedido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoPedido);
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columnsIdCliente = new DataColumn("sIdCliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdCliente);
                this.columniIdDestinatario = new DataColumn("iIdDestinatario", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDestinatario);
                this.columnsIdDestinatario = new DataColumn("sIdDestinatario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdDestinatario);
                this.columndFechaPedido = new DataColumn("dFechaPedido", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPedido);
                this.columndFechaPreferente = new DataColumn("dFechaPreferente", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaPreferente);
                this.columndFechaFijada = new DataColumn("dFechaFijada", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFechaFijada);
                this.columnsOrgVentas = new DataColumn("sOrgVentas", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsOrgVentas);
                this.columnsGrupoVendedor = new DataColumn("sGrupoVendedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsGrupoVendedor);
                this.columnsCanal = new DataColumn("sCanal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCanal);
                this.columnsSector = new DataColumn("sSector", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsSector);
                this.columnfImporte = new DataColumn("fImporte", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfImporte);
                this.columnfDescuento = new DataColumn("fDescuento", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfDescuento);
                this.columnsIdTipoCampanya = new DataColumn("sIdTipoCampanya", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoCampanya);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columnfFUM = new DataColumn("fFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey13", new DataColumn[] {
                                this.columnsIdPedido}, true));
                this.columnsIdPedido.AllowDBNull = false;
                this.columnsIdPedido.Unique = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columnsIdTipoPedido.AllowDBNull = false;
                this.columniIdCliente.AllowDBNull = false;
                this.columnsIdCliente.AllowDBNull = false;
                this.columniIdDestinatario.AllowDBNull = false;
                this.columnsIdDestinatario.AllowDBNull = false;
                this.columndFechaPedido.AllowDBNull = false;
                this.columndFechaPreferente.AllowDBNull = false;
                this.columndFechaFijada.AllowDBNull = false;
                this.columnsOrgVentas.AllowDBNull = false;
                this.columnsGrupoVendedor.AllowDBNull = false;
                this.columnsCanal.AllowDBNull = false;
                this.columnsSector.AllowDBNull = false;
                this.columnfImporte.AllowDBNull = false;
                this.columnfDescuento.AllowDBNull = false;
                this.columntObservaciones.ReadOnly = true;
                this.columniEstado.AllowDBNull = false;
                this.columnfFUM.AllowDBNull = false;
            }
            
            public Pedidos_CabRow NewPedidos_CabRow() {
                return ((Pedidos_CabRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pedidos_CabRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pedidos_CabRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pedidos_CabRowChanged != null)) {
                    this.Pedidos_CabRowChanged(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pedidos_CabRowChanging != null)) {
                    this.Pedidos_CabRowChanging(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pedidos_CabRowDeleted != null)) {
                    this.Pedidos_CabRowDeleted(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pedidos_CabRowDeleting != null)) {
                    this.Pedidos_CabRowDeleting(this, new Pedidos_CabRowChangeEvent(((Pedidos_CabRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePedidos_CabRow(Pedidos_CabRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabRow : DataRow {
            
            private Pedidos_CabDataTable tablePedidos_Cab;
            
            internal Pedidos_CabRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePedidos_Cab = ((Pedidos_CabDataTable)(this.Table));
            }
            
            public string sIdPedido {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sIdPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sIdPedidoColumn] = value;
                }
            }
            
            public string sIdPedidoTemp {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdPedidoTempColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdPedidoTempColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdDelegadoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdDelegadoColumn] = value;
                }
            }
            
            public string sIdTipoPedido {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sIdTipoPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sIdTipoPedidoColumn] = value;
                }
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdClienteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdClienteColumn] = value;
                }
            }
            
            public string sIdCliente {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sIdClienteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sIdClienteColumn] = value;
                }
            }
            
            public int iIdDestinatario {
                get {
                    return ((int)(this[this.tablePedidos_Cab.iIdDestinatarioColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iIdDestinatarioColumn] = value;
                }
            }
            
            public string sIdDestinatario {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sIdDestinatarioColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sIdDestinatarioColumn] = value;
                }
            }
            
            public System.DateTime dFechaPedido {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaPedidoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaPedidoColumn] = value;
                }
            }
            
            public System.DateTime dFechaPreferente {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaPreferenteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaPreferenteColumn] = value;
                }
            }
            
            public System.DateTime dFechaFijada {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.dFechaFijadaColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.dFechaFijadaColumn] = value;
                }
            }
            
            public string sOrgVentas {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sOrgVentasColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sOrgVentasColumn] = value;
                }
            }
            
            public string sGrupoVendedor {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sGrupoVendedorColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sGrupoVendedorColumn] = value;
                }
            }
            
            public string sCanal {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sCanalColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sCanalColumn] = value;
                }
            }
            
            public string sSector {
                get {
                    return ((string)(this[this.tablePedidos_Cab.sSectorColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.sSectorColumn] = value;
                }
            }
            
            public System.Double fImporte {
                get {
                    return ((System.Double)(this[this.tablePedidos_Cab.fImporteColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fImporteColumn] = value;
                }
            }
            
            public System.Double fDescuento {
                get {
                    return ((System.Double)(this[this.tablePedidos_Cab.fDescuentoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fDescuentoColumn] = value;
                }
            }
            
            public string sIdTipoCampanya {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.sIdTipoCampanyaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.sIdTipoCampanyaColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tablePedidos_Cab.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePedidos_Cab.tObservacionesColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tablePedidos_Cab.iEstadoColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.iEstadoColumn] = value;
                }
            }
            
            public System.DateTime fFUM {
                get {
                    return ((System.DateTime)(this[this.tablePedidos_Cab.fFUMColumn]));
                }
                set {
                    this[this.tablePedidos_Cab.fFUMColumn] = value;
                }
            }
            
            public bool IssIdPedidoTempNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdPedidoTempColumn);
            }
            
            public void SetsIdPedidoTempNull() {
                this[this.tablePedidos_Cab.sIdPedidoTempColumn] = System.Convert.DBNull;
            }
            
            public bool IssIdTipoCampanyaNull() {
                return this.IsNull(this.tablePedidos_Cab.sIdTipoCampanyaColumn);
            }
            
            public void SetsIdTipoCampanyaNull() {
                this[this.tablePedidos_Cab.sIdTipoCampanyaColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tablePedidos_Cab.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tablePedidos_Cab.tObservacionesColumn] = System.Convert.DBNull;
            }
            
            public Pedidos_LinRow[] GetPedidos_LinRows() {
                return ((Pedidos_LinRow[])(this.GetChildRows(this.Table.ChildRelations["Pedidos_CabPedidos_Lin"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pedidos_CabRowChangeEvent : EventArgs {
            
            private Pedidos_CabRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pedidos_CabRowChangeEvent(Pedidos_CabRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pedidos_CabRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientesCOMDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdCliente;
            
            private DataColumn columniIdCentro;
            
            private DataColumn columnsIdTipoRelacionCliCen;
            
            private DataColumn columndFAR;
            
            private DataColumn columndFBR;
            
            private DataColumn columniEstado;
            
            private DataColumn columnsIdRed;
            
            private DataColumn columndFUM;
            
            internal CentrosClientesCOMDataTable() : 
                    base("CentrosClientesCOM") {
                this.InitClass();
            }
            
            internal CentrosClientesCOMDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdClienteColumn {
                get {
                    return this.columniIdCliente;
                }
            }
            
            internal DataColumn iIdCentroColumn {
                get {
                    return this.columniIdCentro;
                }
            }
            
            internal DataColumn sIdTipoRelacionCliCenColumn {
                get {
                    return this.columnsIdTipoRelacionCliCen;
                }
            }
            
            internal DataColumn dFARColumn {
                get {
                    return this.columndFAR;
                }
            }
            
            internal DataColumn dFBRColumn {
                get {
                    return this.columndFBR;
                }
            }
            
            internal DataColumn iEstadoColumn {
                get {
                    return this.columniEstado;
                }
            }
            
            internal DataColumn sIdRedColumn {
                get {
                    return this.columnsIdRed;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public CentrosClientesCOMRow this[int index] {
                get {
                    return ((CentrosClientesCOMRow)(this.Rows[index]));
                }
            }
            
            public event CentrosClientesCOMRowChangeEventHandler CentrosClientesCOMRowChanged;
            
            public event CentrosClientesCOMRowChangeEventHandler CentrosClientesCOMRowChanging;
            
            public event CentrosClientesCOMRowChangeEventHandler CentrosClientesCOMRowDeleted;
            
            public event CentrosClientesCOMRowChangeEventHandler CentrosClientesCOMRowDeleting;
            
            public void AddCentrosClientesCOMRow(CentrosClientesCOMRow row) {
                this.Rows.Add(row);
            }
            
            public CentrosClientesCOMRow AddCentrosClientesCOMRow(int iIdCliente, int iIdCentro, string sIdTipoRelacionCliCen, System.DateTime dFAR, System.DateTime dFBR, short iEstado, string sIdRed, System.DateTime dFUM) {
                CentrosClientesCOMRow rowCentrosClientesCOMRow = ((CentrosClientesCOMRow)(this.NewRow()));
                rowCentrosClientesCOMRow.ItemArray = new object[] {
                        iIdCliente,
                        iIdCentro,
                        sIdTipoRelacionCliCen,
                        dFAR,
                        dFBR,
                        iEstado,
                        sIdRed,
                        dFUM};
                this.Rows.Add(rowCentrosClientesCOMRow);
                return rowCentrosClientesCOMRow;
            }
            
            public CentrosClientesCOMRow FindByiIdClienteiIdCentrosIdRed(int iIdCliente, int iIdCentro, string sIdRed) {
                return ((CentrosClientesCOMRow)(this.Rows.Find(new object[] {
                            iIdCliente,
                            iIdCentro,
                            sIdRed})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CentrosClientesCOMDataTable cln = ((CentrosClientesCOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CentrosClientesCOMDataTable();
            }
            
            internal void InitVars() {
                this.columniIdCliente = this.Columns["iIdCliente"];
                this.columniIdCentro = this.Columns["iIdCentro"];
                this.columnsIdTipoRelacionCliCen = this.Columns["sIdTipoRelacionCliCen"];
                this.columndFAR = this.Columns["dFAR"];
                this.columndFBR = this.Columns["dFBR"];
                this.columniEstado = this.Columns["iEstado"];
                this.columnsIdRed = this.Columns["sIdRed"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columniIdCliente = new DataColumn("iIdCliente", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCliente);
                this.columniIdCentro = new DataColumn("iIdCentro", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdCentro);
                this.columnsIdTipoRelacionCliCen = new DataColumn("sIdTipoRelacionCliCen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdTipoRelacionCliCen);
                this.columndFAR = new DataColumn("dFAR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFAR);
                this.columndFBR = new DataColumn("dFBR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFBR);
                this.columniEstado = new DataColumn("iEstado", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniEstado);
                this.columnsIdRed = new DataColumn("sIdRed", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdRed);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey22", new DataColumn[] {
                                this.columniIdCliente,
                                this.columniIdCentro,
                                this.columnsIdRed}, true));
                this.columniIdCliente.AllowDBNull = false;
                this.columniIdCentro.AllowDBNull = false;
                this.columndFAR.AllowDBNull = false;
                this.columniEstado.AllowDBNull = false;
                this.columnsIdRed.AllowDBNull = false;
            }
            
            public CentrosClientesCOMRow NewCentrosClientesCOMRow() {
                return ((CentrosClientesCOMRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CentrosClientesCOMRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CentrosClientesCOMRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosClientesCOMRowChanged != null)) {
                    this.CentrosClientesCOMRowChanged(this, new CentrosClientesCOMRowChangeEvent(((CentrosClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosClientesCOMRowChanging != null)) {
                    this.CentrosClientesCOMRowChanging(this, new CentrosClientesCOMRowChangeEvent(((CentrosClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosClientesCOMRowDeleted != null)) {
                    this.CentrosClientesCOMRowDeleted(this, new CentrosClientesCOMRowChangeEvent(((CentrosClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosClientesCOMRowDeleting != null)) {
                    this.CentrosClientesCOMRowDeleting(this, new CentrosClientesCOMRowChangeEvent(((CentrosClientesCOMRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCentrosClientesCOMRow(CentrosClientesCOMRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientesCOMRow : DataRow {
            
            private CentrosClientesCOMDataTable tableCentrosClientesCOM;
            
            internal CentrosClientesCOMRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentrosClientesCOM = ((CentrosClientesCOMDataTable)(this.Table));
            }
            
            public int iIdCliente {
                get {
                    return ((int)(this[this.tableCentrosClientesCOM.iIdClienteColumn]));
                }
                set {
                    this[this.tableCentrosClientesCOM.iIdClienteColumn] = value;
                }
            }
            
            public int iIdCentro {
                get {
                    return ((int)(this[this.tableCentrosClientesCOM.iIdCentroColumn]));
                }
                set {
                    this[this.tableCentrosClientesCOM.iIdCentroColumn] = value;
                }
            }
            
            public string sIdTipoRelacionCliCen {
                get {
                    try {
                        return ((string)(this[this.tableCentrosClientesCOM.sIdTipoRelacionCliCenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosClientesCOM.sIdTipoRelacionCliCenColumn] = value;
                }
            }
            
            public System.DateTime dFAR {
                get {
                    return ((System.DateTime)(this[this.tableCentrosClientesCOM.dFARColumn]));
                }
                set {
                    this[this.tableCentrosClientesCOM.dFARColumn] = value;
                }
            }
            
            public System.DateTime dFBR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosClientesCOM.dFBRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosClientesCOM.dFBRColumn] = value;
                }
            }
            
            public short iEstado {
                get {
                    return ((short)(this[this.tableCentrosClientesCOM.iEstadoColumn]));
                }
                set {
                    this[this.tableCentrosClientesCOM.iEstadoColumn] = value;
                }
            }
            
            public string sIdRed {
                get {
                    return ((string)(this[this.tableCentrosClientesCOM.sIdRedColumn]));
                }
                set {
                    this[this.tableCentrosClientesCOM.sIdRedColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCentrosClientesCOM.dFUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosClientesCOM.dFUMColumn] = value;
                }
            }
            
            public bool IssIdTipoRelacionCliCenNull() {
                return this.IsNull(this.tableCentrosClientesCOM.sIdTipoRelacionCliCenColumn);
            }
            
            public void SetsIdTipoRelacionCliCenNull() {
                this[this.tableCentrosClientesCOM.sIdTipoRelacionCliCenColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFBRNull() {
                return this.IsNull(this.tableCentrosClientesCOM.dFBRColumn);
            }
            
            public void SetdFBRNull() {
                this[this.tableCentrosClientesCOM.dFBRColumn] = System.Convert.DBNull;
            }
            
            public bool IsdFUMNull() {
                return this.IsNull(this.tableCentrosClientesCOM.dFUMColumn);
            }
            
            public void SetdFUMNull() {
                this[this.tableCentrosClientesCOM.dFUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CentrosClientesCOMRowChangeEvent : EventArgs {
            
            private CentrosClientesCOMRow eventRow;
            
            private DataRowAction eventAction;
            
            public CentrosClientesCOMRowChangeEvent(CentrosClientesCOMRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CentrosClientesCOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SolicitudGadgetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsIdSolicitud;
            
            private DataColumn columniIdDelegado;
            
            private DataColumn columnFecha;
            
            private DataColumn columniIdGadget;
            
            private DataColumn columniCantidadSol;
            
            private DataColumn columniCantidadServ;
            
            private DataColumn columnsStatus;
            
            private DataColumn columntObservaciones;
            
            private DataColumn columndFUM;
            
            internal SolicitudGadgetDataTable() : 
                    base("SolicitudGadget") {
                this.InitClass();
            }
            
            internal SolicitudGadgetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sIdSolicitudColumn {
                get {
                    return this.columnsIdSolicitud;
                }
            }
            
            internal DataColumn iIdDelegadoColumn {
                get {
                    return this.columniIdDelegado;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn iIdGadgetColumn {
                get {
                    return this.columniIdGadget;
                }
            }
            
            internal DataColumn iCantidadSolColumn {
                get {
                    return this.columniCantidadSol;
                }
            }
            
            internal DataColumn iCantidadServColumn {
                get {
                    return this.columniCantidadServ;
                }
            }
            
            internal DataColumn sStatusColumn {
                get {
                    return this.columnsStatus;
                }
            }
            
            internal DataColumn tObservacionesColumn {
                get {
                    return this.columntObservaciones;
                }
            }
            
            internal DataColumn dFUMColumn {
                get {
                    return this.columndFUM;
                }
            }
            
            public SolicitudGadgetRow this[int index] {
                get {
                    return ((SolicitudGadgetRow)(this.Rows[index]));
                }
            }
            
            public event SolicitudGadgetRowChangeEventHandler SolicitudGadgetRowChanged;
            
            public event SolicitudGadgetRowChangeEventHandler SolicitudGadgetRowChanging;
            
            public event SolicitudGadgetRowChangeEventHandler SolicitudGadgetRowDeleted;
            
            public event SolicitudGadgetRowChangeEventHandler SolicitudGadgetRowDeleting;
            
            public void AddSolicitudGadgetRow(SolicitudGadgetRow row) {
                this.Rows.Add(row);
            }
            
            public SolicitudGadgetRow AddSolicitudGadgetRow(string sIdSolicitud, int iIdDelegado, System.DateTime Fecha, int iIdGadget, int iCantidadSol, int iCantidadServ, string sStatus, string tObservaciones, System.DateTime dFUM) {
                SolicitudGadgetRow rowSolicitudGadgetRow = ((SolicitudGadgetRow)(this.NewRow()));
                rowSolicitudGadgetRow.ItemArray = new object[] {
                        sIdSolicitud,
                        iIdDelegado,
                        Fecha,
                        iIdGadget,
                        iCantidadSol,
                        iCantidadServ,
                        sStatus,
                        tObservaciones,
                        dFUM};
                this.Rows.Add(rowSolicitudGadgetRow);
                return rowSolicitudGadgetRow;
            }
            
            public SolicitudGadgetRow FindBysIdSolicitud(string sIdSolicitud) {
                return ((SolicitudGadgetRow)(this.Rows.Find(new object[] {
                            sIdSolicitud})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                SolicitudGadgetDataTable cln = ((SolicitudGadgetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new SolicitudGadgetDataTable();
            }
            
            internal void InitVars() {
                this.columnsIdSolicitud = this.Columns["sIdSolicitud"];
                this.columniIdDelegado = this.Columns["iIdDelegado"];
                this.columnFecha = this.Columns["Fecha"];
                this.columniIdGadget = this.Columns["iIdGadget"];
                this.columniCantidadSol = this.Columns["iCantidadSol"];
                this.columniCantidadServ = this.Columns["iCantidadServ"];
                this.columnsStatus = this.Columns["sStatus"];
                this.columntObservaciones = this.Columns["tObservaciones"];
                this.columndFUM = this.Columns["dFUM"];
            }
            
            private void InitClass() {
                this.columnsIdSolicitud = new DataColumn("sIdSolicitud", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdSolicitud);
                this.columniIdDelegado = new DataColumn("iIdDelegado", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdDelegado);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columniIdGadget = new DataColumn("iIdGadget", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdGadget);
                this.columniCantidadSol = new DataColumn("iCantidadSol", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidadSol);
                this.columniCantidadServ = new DataColumn("iCantidadServ", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniCantidadServ);
                this.columnsStatus = new DataColumn("sStatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsStatus);
                this.columntObservaciones = new DataColumn("tObservaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntObservaciones);
                this.columndFUM = new DataColumn("dFUM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndFUM);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey4", new DataColumn[] {
                                this.columnsIdSolicitud}, true));
                this.columnsIdSolicitud.AllowDBNull = false;
                this.columnsIdSolicitud.Unique = true;
                this.columniIdDelegado.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columniIdGadget.AllowDBNull = false;
                this.columniCantidadSol.AllowDBNull = false;
                this.columniCantidadServ.AllowDBNull = false;
                this.columndFUM.AllowDBNull = false;
            }
            
            public SolicitudGadgetRow NewSolicitudGadgetRow() {
                return ((SolicitudGadgetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new SolicitudGadgetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(SolicitudGadgetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SolicitudGadgetRowChanged != null)) {
                    this.SolicitudGadgetRowChanged(this, new SolicitudGadgetRowChangeEvent(((SolicitudGadgetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SolicitudGadgetRowChanging != null)) {
                    this.SolicitudGadgetRowChanging(this, new SolicitudGadgetRowChangeEvent(((SolicitudGadgetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SolicitudGadgetRowDeleted != null)) {
                    this.SolicitudGadgetRowDeleted(this, new SolicitudGadgetRowChangeEvent(((SolicitudGadgetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SolicitudGadgetRowDeleting != null)) {
                    this.SolicitudGadgetRowDeleting(this, new SolicitudGadgetRowChangeEvent(((SolicitudGadgetRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveSolicitudGadgetRow(SolicitudGadgetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SolicitudGadgetRow : DataRow {
            
            private SolicitudGadgetDataTable tableSolicitudGadget;
            
            internal SolicitudGadgetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableSolicitudGadget = ((SolicitudGadgetDataTable)(this.Table));
            }
            
            public string sIdSolicitud {
                get {
                    return ((string)(this[this.tableSolicitudGadget.sIdSolicitudColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.sIdSolicitudColumn] = value;
                }
            }
            
            public int iIdDelegado {
                get {
                    return ((int)(this[this.tableSolicitudGadget.iIdDelegadoColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.iIdDelegadoColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    return ((System.DateTime)(this[this.tableSolicitudGadget.FechaColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.FechaColumn] = value;
                }
            }
            
            public int iIdGadget {
                get {
                    return ((int)(this[this.tableSolicitudGadget.iIdGadgetColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.iIdGadgetColumn] = value;
                }
            }
            
            public int iCantidadSol {
                get {
                    return ((int)(this[this.tableSolicitudGadget.iCantidadSolColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.iCantidadSolColumn] = value;
                }
            }
            
            public int iCantidadServ {
                get {
                    return ((int)(this[this.tableSolicitudGadget.iCantidadServColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.iCantidadServColumn] = value;
                }
            }
            
            public string sStatus {
                get {
                    try {
                        return ((string)(this[this.tableSolicitudGadget.sStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolicitudGadget.sStatusColumn] = value;
                }
            }
            
            public string tObservaciones {
                get {
                    try {
                        return ((string)(this[this.tableSolicitudGadget.tObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableSolicitudGadget.tObservacionesColumn] = value;
                }
            }
            
            public System.DateTime dFUM {
                get {
                    return ((System.DateTime)(this[this.tableSolicitudGadget.dFUMColumn]));
                }
                set {
                    this[this.tableSolicitudGadget.dFUMColumn] = value;
                }
            }
            
            public bool IssStatusNull() {
                return this.IsNull(this.tableSolicitudGadget.sStatusColumn);
            }
            
            public void SetsStatusNull() {
                this[this.tableSolicitudGadget.sStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IstObservacionesNull() {
                return this.IsNull(this.tableSolicitudGadget.tObservacionesColumn);
            }
            
            public void SettObservacionesNull() {
                this[this.tableSolicitudGadget.tObservacionesColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class SolicitudGadgetRowChangeEvent : EventArgs {
            
            private SolicitudGadgetRow eventRow;
            
            private DataRowAction eventAction;
            
            public SolicitudGadgetRowChangeEvent(SolicitudGadgetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public SolicitudGadgetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesProductosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columniIdAtencion;
            
            private DataColumn columnsIdProducto;
            
            private DataColumn columnfPorcentaje;
            
            private DataColumn columnbEnviadoPDA;
            
            private DataColumn columnbEnviadoCEN;
            
            internal AtencionesProductosDataTable() : 
                    base("AtencionesProductos") {
                this.InitClass();
            }
            
            internal AtencionesProductosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn iIdAtencionColumn {
                get {
                    return this.columniIdAtencion;
                }
            }
            
            internal DataColumn sIdProductoColumn {
                get {
                    return this.columnsIdProducto;
                }
            }
            
            internal DataColumn fPorcentajeColumn {
                get {
                    return this.columnfPorcentaje;
                }
            }
            
            internal DataColumn bEnviadoPDAColumn {
                get {
                    return this.columnbEnviadoPDA;
                }
            }
            
            internal DataColumn bEnviadoCENColumn {
                get {
                    return this.columnbEnviadoCEN;
                }
            }
            
            public AtencionesProductosRow this[int index] {
                get {
                    return ((AtencionesProductosRow)(this.Rows[index]));
                }
            }
            
            public event AtencionesProductosRowChangeEventHandler AtencionesProductosRowChanged;
            
            public event AtencionesProductosRowChangeEventHandler AtencionesProductosRowChanging;
            
            public event AtencionesProductosRowChangeEventHandler AtencionesProductosRowDeleted;
            
            public event AtencionesProductosRowChangeEventHandler AtencionesProductosRowDeleting;
            
            public void AddAtencionesProductosRow(AtencionesProductosRow row) {
                this.Rows.Add(row);
            }
            
            public AtencionesProductosRow AddAtencionesProductosRow(int iIdAtencion, string sIdProducto, System.Double fPorcentaje, bool bEnviadoPDA, bool bEnviadoCEN) {
                AtencionesProductosRow rowAtencionesProductosRow = ((AtencionesProductosRow)(this.NewRow()));
                rowAtencionesProductosRow.ItemArray = new object[] {
                        iIdAtencion,
                        sIdProducto,
                        fPorcentaje,
                        bEnviadoPDA,
                        bEnviadoCEN};
                this.Rows.Add(rowAtencionesProductosRow);
                return rowAtencionesProductosRow;
            }
            
            public AtencionesProductosRow FindByiIdAtencionsIdProducto(int iIdAtencion, string sIdProducto) {
                return ((AtencionesProductosRow)(this.Rows.Find(new object[] {
                            iIdAtencion,
                            sIdProducto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AtencionesProductosDataTable cln = ((AtencionesProductosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AtencionesProductosDataTable();
            }
            
            internal void InitVars() {
                this.columniIdAtencion = this.Columns["iIdAtencion"];
                this.columnsIdProducto = this.Columns["sIdProducto"];
                this.columnfPorcentaje = this.Columns["fPorcentaje"];
                this.columnbEnviadoPDA = this.Columns["bEnviadoPDA"];
                this.columnbEnviadoCEN = this.Columns["bEnviadoCEN"];
            }
            
            private void InitClass() {
                this.columniIdAtencion = new DataColumn("iIdAtencion", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columniIdAtencion);
                this.columnsIdProducto = new DataColumn("sIdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsIdProducto);
                this.columnfPorcentaje = new DataColumn("fPorcentaje", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfPorcentaje);
                this.columnbEnviadoPDA = new DataColumn("bEnviadoPDA", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEnviadoPDA);
                this.columnbEnviadoCEN = new DataColumn("bEnviadoCEN", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbEnviadoCEN);
                this.Constraints.Add(new UniqueConstraint("dsClienteKey23", new DataColumn[] {
                                this.columniIdAtencion,
                                this.columnsIdProducto}, true));
                this.columniIdAtencion.AllowDBNull = false;
                this.columnsIdProducto.AllowDBNull = false;
            }
            
            public AtencionesProductosRow NewAtencionesProductosRow() {
                return ((AtencionesProductosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AtencionesProductosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AtencionesProductosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AtencionesProductosRowChanged != null)) {
                    this.AtencionesProductosRowChanged(this, new AtencionesProductosRowChangeEvent(((AtencionesProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AtencionesProductosRowChanging != null)) {
                    this.AtencionesProductosRowChanging(this, new AtencionesProductosRowChangeEvent(((AtencionesProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AtencionesProductosRowDeleted != null)) {
                    this.AtencionesProductosRowDeleted(this, new AtencionesProductosRowChangeEvent(((AtencionesProductosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AtencionesProductosRowDeleting != null)) {
                    this.AtencionesProductosRowDeleting(this, new AtencionesProductosRowChangeEvent(((AtencionesProductosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAtencionesProductosRow(AtencionesProductosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesProductosRow : DataRow {
            
            private AtencionesProductosDataTable tableAtencionesProductos;
            
            internal AtencionesProductosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAtencionesProductos = ((AtencionesProductosDataTable)(this.Table));
            }
            
            public int iIdAtencion {
                get {
                    return ((int)(this[this.tableAtencionesProductos.iIdAtencionColumn]));
                }
                set {
                    this[this.tableAtencionesProductos.iIdAtencionColumn] = value;
                }
            }
            
            public string sIdProducto {
                get {
                    return ((string)(this[this.tableAtencionesProductos.sIdProductoColumn]));
                }
                set {
                    this[this.tableAtencionesProductos.sIdProductoColumn] = value;
                }
            }
            
            public System.Double fPorcentaje {
                get {
                    try {
                        return ((System.Double)(this[this.tableAtencionesProductos.fPorcentajeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesProductos.fPorcentajeColumn] = value;
                }
            }
            
            public bool bEnviadoPDA {
                get {
                    try {
                        return ((bool)(this[this.tableAtencionesProductos.bEnviadoPDAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesProductos.bEnviadoPDAColumn] = value;
                }
            }
            
            public bool bEnviadoCEN {
                get {
                    try {
                        return ((bool)(this[this.tableAtencionesProductos.bEnviadoCENColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableAtencionesProductos.bEnviadoCENColumn] = value;
                }
            }
            
            public bool IsfPorcentajeNull() {
                return this.IsNull(this.tableAtencionesProductos.fPorcentajeColumn);
            }
            
            public void SetfPorcentajeNull() {
                this[this.tableAtencionesProductos.fPorcentajeColumn] = System.Convert.DBNull;
            }
            
            public bool IsbEnviadoPDANull() {
                return this.IsNull(this.tableAtencionesProductos.bEnviadoPDAColumn);
            }
            
            public void SetbEnviadoPDANull() {
                this[this.tableAtencionesProductos.bEnviadoPDAColumn] = System.Convert.DBNull;
            }
            
            public bool IsbEnviadoCENNull() {
                return this.IsNull(this.tableAtencionesProductos.bEnviadoCENColumn);
            }
            
            public void SetbEnviadoCENNull() {
                this[this.tableAtencionesProductos.bEnviadoCENColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AtencionesProductosRowChangeEvent : EventArgs {
            
            private AtencionesProductosRow eventRow;
            
            private DataRowAction eventAction;
            
            public AtencionesProductosRowChangeEvent(AtencionesProductosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AtencionesProductosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsRetorno : DataSet {
        
        private TablaDataTable tableTabla;
        
        private FilasDataTable tableFilas;
        
        private DefinicionesDataTable tableDefiniciones;
        
        private ErroresDataTable tableErrores;
        
        private DataRelation relationTablaDefiniciones;
        
        private DataRelation relationTablaFilas;
        
        public dsRetorno() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsRetorno(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Tabla"] != null)) {
                    this.Tables.Add(new TablaDataTable(ds.Tables["Tabla"]));
                }
                if ((ds.Tables["Filas"] != null)) {
                    this.Tables.Add(new FilasDataTable(ds.Tables["Filas"]));
                }
                if ((ds.Tables["Definiciones"] != null)) {
                    this.Tables.Add(new DefinicionesDataTable(ds.Tables["Definiciones"]));
                }
                if ((ds.Tables["Errores"] != null)) {
                    this.Tables.Add(new ErroresDataTable(ds.Tables["Errores"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TablaDataTable Tabla {
            get {
                return this.tableTabla;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FilasDataTable Filas {
            get {
                return this.tableFilas;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DefinicionesDataTable Definiciones {
            get {
                return this.tableDefiniciones;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ErroresDataTable Errores {
            get {
                return this.tableErrores;
            }
        }
        
        public override DataSet Clone() {
            dsRetorno cln = ((dsRetorno)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Tabla"] != null)) {
                this.Tables.Add(new TablaDataTable(ds.Tables["Tabla"]));
            }
            if ((ds.Tables["Filas"] != null)) {
                this.Tables.Add(new FilasDataTable(ds.Tables["Filas"]));
            }
            if ((ds.Tables["Definiciones"] != null)) {
                this.Tables.Add(new DefinicionesDataTable(ds.Tables["Definiciones"]));
            }
            if ((ds.Tables["Errores"] != null)) {
                this.Tables.Add(new ErroresDataTable(ds.Tables["Errores"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableTabla = ((TablaDataTable)(this.Tables["Tabla"]));
            if ((this.tableTabla != null)) {
                this.tableTabla.InitVars();
            }
            this.tableFilas = ((FilasDataTable)(this.Tables["Filas"]));
            if ((this.tableFilas != null)) {
                this.tableFilas.InitVars();
            }
            this.tableDefiniciones = ((DefinicionesDataTable)(this.Tables["Definiciones"]));
            if ((this.tableDefiniciones != null)) {
                this.tableDefiniciones.InitVars();
            }
            this.tableErrores = ((ErroresDataTable)(this.Tables["Errores"]));
            if ((this.tableErrores != null)) {
                this.tableErrores.InitVars();
            }
            this.relationTablaDefiniciones = this.Relations["TablaDefiniciones"];
            this.relationTablaFilas = this.Relations["TablaFilas"];
        }
        
        private void InitClass() {
            this.DataSetName = "dsRetorno";
            this.Prefix = "";
            this.Namespace = "http://STADACRM/dsRetorno.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableTabla = new TablaDataTable();
            this.Tables.Add(this.tableTabla);
            this.tableFilas = new FilasDataTable();
            this.Tables.Add(this.tableFilas);
            this.tableDefiniciones = new DefinicionesDataTable();
            this.Tables.Add(this.tableDefiniciones);
            this.tableErrores = new ErroresDataTable();
            this.Tables.Add(this.tableErrores);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("TablaFilas", new DataColumn[] {
                        this.tableTabla.sNombreTablaColumn}, new DataColumn[] {
                        this.tableFilas.sNombreTablaColumn});
            this.tableFilas.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("TablaDefiniciones", new DataColumn[] {
                        this.tableTabla.sNombreTablaColumn}, new DataColumn[] {
                        this.tableDefiniciones.sNombreTablaColumn});
            this.tableDefiniciones.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationTablaDefiniciones = new DataRelation("TablaDefiniciones", new DataColumn[] {
                        this.tableTabla.sNombreTablaColumn}, new DataColumn[] {
                        this.tableDefiniciones.sNombreTablaColumn}, false);
            this.Relations.Add(this.relationTablaDefiniciones);
            this.relationTablaFilas = new DataRelation("TablaFilas", new DataColumn[] {
                        this.tableTabla.sNombreTablaColumn}, new DataColumn[] {
                        this.tableFilas.sNombreTablaColumn}, false);
            this.Relations.Add(this.relationTablaFilas);
        }
        
        private bool ShouldSerializeTabla() {
            return false;
        }
        
        private bool ShouldSerializeFilas() {
            return false;
        }
        
        private bool ShouldSerializeDefiniciones() {
            return false;
        }
        
        private bool ShouldSerializeErrores() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void TablaRowChangeEventHandler(object sender, TablaRowChangeEvent e);
        
        public delegate void FilasRowChangeEventHandler(object sender, FilasRowChangeEvent e);
        
        public delegate void DefinicionesRowChangeEventHandler(object sender, DefinicionesRowChangeEvent e);
        
        public delegate void ErroresRowChangeEventHandler(object sender, ErroresRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TablaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsNombreTabla;
            
            internal TablaDataTable() : 
                    base("Tabla") {
                this.InitClass();
            }
            
            internal TablaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sNombreTablaColumn {
                get {
                    return this.columnsNombreTabla;
                }
            }
            
            public TablaRow this[int index] {
                get {
                    return ((TablaRow)(this.Rows[index]));
                }
            }
            
            public event TablaRowChangeEventHandler TablaRowChanged;
            
            public event TablaRowChangeEventHandler TablaRowChanging;
            
            public event TablaRowChangeEventHandler TablaRowDeleted;
            
            public event TablaRowChangeEventHandler TablaRowDeleting;
            
            public void AddTablaRow(TablaRow row) {
                this.Rows.Add(row);
            }
            
            public TablaRow AddTablaRow(string sNombreTabla) {
                TablaRow rowTablaRow = ((TablaRow)(this.NewRow()));
                rowTablaRow.ItemArray = new object[] {
                        sNombreTabla};
                this.Rows.Add(rowTablaRow);
                return rowTablaRow;
            }
            
            public TablaRow FindBysNombreTabla(string sNombreTabla) {
                return ((TablaRow)(this.Rows.Find(new object[] {
                            sNombreTabla})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TablaDataTable cln = ((TablaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TablaDataTable();
            }
            
            internal void InitVars() {
                this.columnsNombreTabla = this.Columns["sNombreTabla"];
            }
            
            private void InitClass() {
                this.columnsNombreTabla = new DataColumn("sNombreTabla", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombreTabla);
                this.Constraints.Add(new UniqueConstraint("dsRetornoKey1", new DataColumn[] {
                                this.columnsNombreTabla}, true));
                this.columnsNombreTabla.AllowDBNull = false;
                this.columnsNombreTabla.Unique = true;
            }
            
            public TablaRow NewTablaRow() {
                return ((TablaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TablaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TablaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TablaRowChanged != null)) {
                    this.TablaRowChanged(this, new TablaRowChangeEvent(((TablaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TablaRowChanging != null)) {
                    this.TablaRowChanging(this, new TablaRowChangeEvent(((TablaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TablaRowDeleted != null)) {
                    this.TablaRowDeleted(this, new TablaRowChangeEvent(((TablaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TablaRowDeleting != null)) {
                    this.TablaRowDeleting(this, new TablaRowChangeEvent(((TablaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTablaRow(TablaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TablaRow : DataRow {
            
            private TablaDataTable tableTabla;
            
            internal TablaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTabla = ((TablaDataTable)(this.Table));
            }
            
            public string sNombreTabla {
                get {
                    return ((string)(this[this.tableTabla.sNombreTablaColumn]));
                }
                set {
                    this[this.tableTabla.sNombreTablaColumn] = value;
                }
            }
            
            public DefinicionesRow[] GetDefinicionesRows() {
                return ((DefinicionesRow[])(this.GetChildRows(this.Table.ChildRelations["TablaDefiniciones"])));
            }
            
            public FilasRow[] GetFilasRows() {
                return ((FilasRow[])(this.GetChildRows(this.Table.ChildRelations["TablaFilas"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TablaRowChangeEvent : EventArgs {
            
            private TablaRow eventRow;
            
            private DataRowAction eventAction;
            
            public TablaRowChangeEvent(TablaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TablaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FilasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsNombreTabla;
            
            private DataColumn columnsKey;
            
            internal FilasDataTable() : 
                    base("Filas") {
                this.InitClass();
            }
            
            internal FilasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sNombreTablaColumn {
                get {
                    return this.columnsNombreTabla;
                }
            }
            
            internal DataColumn sKeyColumn {
                get {
                    return this.columnsKey;
                }
            }
            
            public FilasRow this[int index] {
                get {
                    return ((FilasRow)(this.Rows[index]));
                }
            }
            
            public event FilasRowChangeEventHandler FilasRowChanged;
            
            public event FilasRowChangeEventHandler FilasRowChanging;
            
            public event FilasRowChangeEventHandler FilasRowDeleted;
            
            public event FilasRowChangeEventHandler FilasRowDeleting;
            
            public void AddFilasRow(FilasRow row) {
                this.Rows.Add(row);
            }
            
            public FilasRow AddFilasRow(TablaRow parentTablaRowByTablaFilas, string sKey) {
                FilasRow rowFilasRow = ((FilasRow)(this.NewRow()));
                rowFilasRow.ItemArray = new object[] {
                        parentTablaRowByTablaFilas[0],
                        sKey};
                this.Rows.Add(rowFilasRow);
                return rowFilasRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                FilasDataTable cln = ((FilasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new FilasDataTable();
            }
            
            internal void InitVars() {
                this.columnsNombreTabla = this.Columns["sNombreTabla"];
                this.columnsKey = this.Columns["sKey"];
            }
            
            private void InitClass() {
                this.columnsNombreTabla = new DataColumn("sNombreTabla", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombreTabla);
                this.columnsKey = new DataColumn("sKey", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsKey);
            }
            
            public FilasRow NewFilasRow() {
                return ((FilasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new FilasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(FilasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FilasRowChanged != null)) {
                    this.FilasRowChanged(this, new FilasRowChangeEvent(((FilasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FilasRowChanging != null)) {
                    this.FilasRowChanging(this, new FilasRowChangeEvent(((FilasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FilasRowDeleted != null)) {
                    this.FilasRowDeleted(this, new FilasRowChangeEvent(((FilasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FilasRowDeleting != null)) {
                    this.FilasRowDeleting(this, new FilasRowChangeEvent(((FilasRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveFilasRow(FilasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FilasRow : DataRow {
            
            private FilasDataTable tableFilas;
            
            internal FilasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableFilas = ((FilasDataTable)(this.Table));
            }
            
            public string sNombreTabla {
                get {
                    try {
                        return ((string)(this[this.tableFilas.sNombreTablaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFilas.sNombreTablaColumn] = value;
                }
            }
            
            public string sKey {
                get {
                    try {
                        return ((string)(this[this.tableFilas.sKeyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFilas.sKeyColumn] = value;
                }
            }
            
            public TablaRow TablaRow {
                get {
                    return ((TablaRow)(this.GetParentRow(this.Table.ParentRelations["TablaFilas"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TablaFilas"]);
                }
            }
            
            public bool IssNombreTablaNull() {
                return this.IsNull(this.tableFilas.sNombreTablaColumn);
            }
            
            public void SetsNombreTablaNull() {
                this[this.tableFilas.sNombreTablaColumn] = System.Convert.DBNull;
            }
            
            public bool IssKeyNull() {
                return this.IsNull(this.tableFilas.sKeyColumn);
            }
            
            public void SetsKeyNull() {
                this[this.tableFilas.sKeyColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class FilasRowChangeEvent : EventArgs {
            
            private FilasRow eventRow;
            
            private DataRowAction eventAction;
            
            public FilasRowChangeEvent(FilasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public FilasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DefinicionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnsNombreTabla;
            
            private DataColumn columnsCampoFecha;
            
            private DataColumn columnsCampoMarca;
            
            private DataColumn columnbMarcaBool;
            
            private DataColumn columnbMarcaDate;
            
            internal DefinicionesDataTable() : 
                    base("Definiciones") {
                this.InitClass();
            }
            
            internal DefinicionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn sNombreTablaColumn {
                get {
                    return this.columnsNombreTabla;
                }
            }
            
            internal DataColumn sCampoFechaColumn {
                get {
                    return this.columnsCampoFecha;
                }
            }
            
            internal DataColumn sCampoMarcaColumn {
                get {
                    return this.columnsCampoMarca;
                }
            }
            
            internal DataColumn bMarcaBoolColumn {
                get {
                    return this.columnbMarcaBool;
                }
            }
            
            internal DataColumn bMarcaDateColumn {
                get {
                    return this.columnbMarcaDate;
                }
            }
            
            public DefinicionesRow this[int index] {
                get {
                    return ((DefinicionesRow)(this.Rows[index]));
                }
            }
            
            public event DefinicionesRowChangeEventHandler DefinicionesRowChanged;
            
            public event DefinicionesRowChangeEventHandler DefinicionesRowChanging;
            
            public event DefinicionesRowChangeEventHandler DefinicionesRowDeleted;
            
            public event DefinicionesRowChangeEventHandler DefinicionesRowDeleting;
            
            public void AddDefinicionesRow(DefinicionesRow row) {
                this.Rows.Add(row);
            }
            
            public DefinicionesRow AddDefinicionesRow(TablaRow parentTablaRowByTablaDefiniciones, string sCampoFecha, string sCampoMarca, bool bMarcaBool, bool bMarcaDate) {
                DefinicionesRow rowDefinicionesRow = ((DefinicionesRow)(this.NewRow()));
                rowDefinicionesRow.ItemArray = new object[] {
                        parentTablaRowByTablaDefiniciones[0],
                        sCampoFecha,
                        sCampoMarca,
                        bMarcaBool,
                        bMarcaDate};
                this.Rows.Add(rowDefinicionesRow);
                return rowDefinicionesRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DefinicionesDataTable cln = ((DefinicionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DefinicionesDataTable();
            }
            
            internal void InitVars() {
                this.columnsNombreTabla = this.Columns["sNombreTabla"];
                this.columnsCampoFecha = this.Columns["sCampoFecha"];
                this.columnsCampoMarca = this.Columns["sCampoMarca"];
                this.columnbMarcaBool = this.Columns["bMarcaBool"];
                this.columnbMarcaDate = this.Columns["bMarcaDate"];
            }
            
            private void InitClass() {
                this.columnsNombreTabla = new DataColumn("sNombreTabla", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsNombreTabla);
                this.columnsCampoFecha = new DataColumn("sCampoFecha", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCampoFecha);
                this.columnsCampoMarca = new DataColumn("sCampoMarca", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsCampoMarca);
                this.columnbMarcaBool = new DataColumn("bMarcaBool", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbMarcaBool);
                this.columnbMarcaDate = new DataColumn("bMarcaDate", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbMarcaDate);
            }
            
            public DefinicionesRow NewDefinicionesRow() {
                return ((DefinicionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DefinicionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DefinicionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DefinicionesRowChanged != null)) {
                    this.DefinicionesRowChanged(this, new DefinicionesRowChangeEvent(((DefinicionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DefinicionesRowChanging != null)) {
                    this.DefinicionesRowChanging(this, new DefinicionesRowChangeEvent(((DefinicionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DefinicionesRowDeleted != null)) {
                    this.DefinicionesRowDeleted(this, new DefinicionesRowChangeEvent(((DefinicionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DefinicionesRowDeleting != null)) {
                    this.DefinicionesRowDeleting(this, new DefinicionesRowChangeEvent(((DefinicionesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDefinicionesRow(DefinicionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DefinicionesRow : DataRow {
            
            private DefinicionesDataTable tableDefiniciones;
            
            internal DefinicionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDefiniciones = ((DefinicionesDataTable)(this.Table));
            }
            
            public string sNombreTabla {
                get {
                    try {
                        return ((string)(this[this.tableDefiniciones.sNombreTablaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDefiniciones.sNombreTablaColumn] = value;
                }
            }
            
            public string sCampoFecha {
                get {
                    try {
                        return ((string)(this[this.tableDefiniciones.sCampoFechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDefiniciones.sCampoFechaColumn] = value;
                }
            }
            
            public string sCampoMarca {
                get {
                    try {
                        return ((string)(this[this.tableDefiniciones.sCampoMarcaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDefiniciones.sCampoMarcaColumn] = value;
                }
            }
            
            public bool bMarcaBool {
                get {
                    try {
                        return ((bool)(this[this.tableDefiniciones.bMarcaBoolColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDefiniciones.bMarcaBoolColumn] = value;
                }
            }
            
            public bool bMarcaDate {
                get {
                    try {
                        return ((bool)(this[this.tableDefiniciones.bMarcaDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDefiniciones.bMarcaDateColumn] = value;
                }
            }
            
            public TablaRow TablaRow {
                get {
                    return ((TablaRow)(this.GetParentRow(this.Table.ParentRelations["TablaDefiniciones"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TablaDefiniciones"]);
                }
            }
            
            public bool IssNombreTablaNull() {
                return this.IsNull(this.tableDefiniciones.sNombreTablaColumn);
            }
            
            public void SetsNombreTablaNull() {
                this[this.tableDefiniciones.sNombreTablaColumn] = System.Convert.DBNull;
            }
            
            public bool IssCampoFechaNull() {
                return this.IsNull(this.tableDefiniciones.sCampoFechaColumn);
            }
            
            public void SetsCampoFechaNull() {
                this[this.tableDefiniciones.sCampoFechaColumn] = System.Convert.DBNull;
            }
            
            public bool IssCampoMarcaNull() {
                return this.IsNull(this.tableDefiniciones.sCampoMarcaColumn);
            }
            
            public void SetsCampoMarcaNull() {
                this[this.tableDefiniciones.sCampoMarcaColumn] = System.Convert.DBNull;
            }
            
            public bool IsbMarcaBoolNull() {
                return this.IsNull(this.tableDefiniciones.bMarcaBoolColumn);
            }
            
            public void SetbMarcaBoolNull() {
                this[this.tableDefiniciones.bMarcaBoolColumn] = System.Convert.DBNull;
            }
            
            public bool IsbMarcaDateNull() {
                return this.IsNull(this.tableDefiniciones.bMarcaDateColumn);
            }
            
            public void SetbMarcaDateNull() {
                this[this.tableDefiniciones.bMarcaDateColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DefinicionesRowChangeEvent : EventArgs {
            
            private DefinicionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public DefinicionesRowChangeEvent(DefinicionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DefinicionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ErroresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnItemName;
            
            private DataColumn columnMessage;
            
            internal ErroresDataTable() : 
                    base("Errores") {
                this.InitClass();
            }
            
            internal ErroresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            internal DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            public ErroresRow this[int index] {
                get {
                    return ((ErroresRow)(this.Rows[index]));
                }
            }
            
            public event ErroresRowChangeEventHandler ErroresRowChanged;
            
            public event ErroresRowChangeEventHandler ErroresRowChanging;
            
            public event ErroresRowChangeEventHandler ErroresRowDeleted;
            
            public event ErroresRowChangeEventHandler ErroresRowDeleting;
            
            public void AddErroresRow(ErroresRow row) {
                this.Rows.Add(row);
            }
            
            public ErroresRow AddErroresRow(string ItemName, string Message) {
                ErroresRow rowErroresRow = ((ErroresRow)(this.NewRow()));
                rowErroresRow.ItemArray = new object[] {
                        ItemName,
                        Message};
                this.Rows.Add(rowErroresRow);
                return rowErroresRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ErroresDataTable cln = ((ErroresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ErroresDataTable();
            }
            
            internal void InitVars() {
                this.columnItemName = this.Columns["ItemName"];
                this.columnMessage = this.Columns["Message"];
            }
            
            private void InitClass() {
                this.columnItemName = new DataColumn("ItemName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnItemName);
                this.columnMessage = new DataColumn("Message", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMessage);
            }
            
            public ErroresRow NewErroresRow() {
                return ((ErroresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ErroresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ErroresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ErroresRowChanged != null)) {
                    this.ErroresRowChanged(this, new ErroresRowChangeEvent(((ErroresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ErroresRowChanging != null)) {
                    this.ErroresRowChanging(this, new ErroresRowChangeEvent(((ErroresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ErroresRowDeleted != null)) {
                    this.ErroresRowDeleted(this, new ErroresRowChangeEvent(((ErroresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ErroresRowDeleting != null)) {
                    this.ErroresRowDeleting(this, new ErroresRowChangeEvent(((ErroresRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveErroresRow(ErroresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ErroresRow : DataRow {
            
            private ErroresDataTable tableErrores;
            
            internal ErroresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableErrores = ((ErroresDataTable)(this.Table));
            }
            
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableErrores.ItemNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableErrores.ItemNameColumn] = value;
                }
            }
            
            public string Message {
                get {
                    try {
                        return ((string)(this[this.tableErrores.MessageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableErrores.MessageColumn] = value;
                }
            }
            
            public bool IsItemNameNull() {
                return this.IsNull(this.tableErrores.ItemNameColumn);
            }
            
            public void SetItemNameNull() {
                this[this.tableErrores.ItemNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsMessageNull() {
                return this.IsNull(this.tableErrores.MessageColumn);
            }
            
            public void SetMessageNull() {
                this[this.tableErrores.MessageColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ErroresRowChangeEvent : EventArgs {
            
            private ErroresRow eventRow;
            
            private DataRowAction eventAction;
            
            public ErroresRowChangeEvent(ErroresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ErroresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
